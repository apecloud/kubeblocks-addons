apiVersion: apps.kubeblocks.io/v1
kind: ComponentDefinition
metadata:
  name: {{ include "mongodb.componentDefName" . }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  provider: kubeblocks.io
  description: MongoDB is a document database designed for ease of application development and scaling.
  serviceKind: mongodb
  serviceVersion: {{ .Values.componentServiceVersion.mongodb }}
  services:
    - name: default
      serviceName: mongodb
      spec:
        ports:
          - name: mongodb
            port: 27017
            targetPort: mongodb
      roleSelector: primary
    - name: readonly
      serviceName: mongodb-ro
      spec:
        ports:
          - name: mongodb
            port: 27017
            targetPort: mongodb
      roleSelector: secondary
    - name: everypod
      spec:
        ports:
          - name: mongodb
            port: 27017
            targetPort: mongodb
  configs:
    - name: mongodb-config
      templateRef: {{ include "mongodb.configTplName" . }}
      constraintRef: {{ include "mongodb.configConstraintName" . }}
      volumeName: mongodb-config
      namespace: {{ .Release.Namespace }}
      defaultMode: 0400  # for only read
  logConfigs:
    {{- range $name,$pattern := .Values.logConfigs }}
    - name: {{ $name }}
      filePathPattern: {{ $pattern }}
    {{- end }}
  scripts:
    - name: mongodb-scripts
      templateRef: {{ include "mongodb.cmScriptsName" . }}
      namespace: {{ .Release.Namespace }}
      volumeName: scripts
      defaultMode: 0555  # for read and execute, mysql container switched user account.
  systemAccounts:
    - name: root
      initAccount: true
      passwordGenerationPolicy:
        length: 16
        numDigits: 8
        numSymbols: 0
        letterCase: MixedCases
  roles:
    - name: primary
      serviceable: true
      writable: true
      votable: true
    - name: secondary
      serviceable: true
      writable: false
      votable: true
  lifecycleActions:
    roleProbe:
      periodSeconds: {{ .Values.roleProbe.periodSeconds }}
      timeoutSeconds: {{ .Values.roleProbe.timeoutSeconds }}
      exec:
        container: mongodb
        command:
          - /tools/dbctl
          - --config-path
          - /tools/config/dbctl/components
          - mongodb
          - getrole
    memberLeave:
      exec:
        container: mongodb
        command:
          - /tools/dbctl
          - --config-path
          - /tools/config/dbctl/components
          -  mongodb
          - leavemember
  runtime:
    initContainers:
      - command:
          - cp
          - -r
          - /bin/dbctl
          - /config
          - /tools/
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.dbctl.repository }}:{{ .Values.image.dbctl.tag }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
        name: init-dbctl
        volumeMounts:
          - mountPath: /tools
            name: tools
      - command:
          - cp
          - -r
          - /bin/syncer
          - /config
          - /tools/
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.syncer.repository }}:{{ .Values.image.syncer.tag }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
        name: init-syncer
        volumeMounts:
          - mountPath: /tools
            name: tools
    containers:
      - name: mongodb
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
        ports:
          - name: mongodb
            protocol: TCP
            containerPort: 27017
          - name: ha
            protocol: TCP
            containerPort: 3601
        command:
          - syncer
          - --config-path
          - /tools/config/components
          - --port
          - "3601"
          - --
          - /scripts/replicaset-setup.sh
        env:
          - name: PATH
            value: /tools/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
          - name: KB_SERVICE_CHARACTER_TYPE
            value: mongodb
          - name: SERVICE_PORT
            value: "27017"
          - name: MONGODB_ROOT_USER
            value: $(MONGODB_USER)
          - name: MONGODB_ROOT_PASSWORD
            value: $(MONGODB_PASSWORD)
        volumeMounts:
          - mountPath: {{ .Values.dataMountPath }}
            name: data
          - mountPath: /etc/mongodb/mongodb.conf
            name: mongodb-config
            subPath: mongodb.conf
          - mountPath: /etc/mongodb/keyfile
            name: mongodb-config
            subPath: keyfile
          - name: scripts
            mountPath: /scripts
          - mountPath: /tools
            name: tools
    volumes:
      {{- if .Values.logCollector.enabled }}
      - name: log-data
        hostPath:
          path: /var/log/kubeblocks
          type: DirectoryOrCreate
      {{- end }}
  vars:
    - name: MONGODB_USER
      valueFrom:
        credentialVarRef:
          compDef: {{ include "mongodb.componentDefName" . }}
          name: root
          optional: false
          username: Required
    - name: MONGODB_PASSWORD
      valueFrom:
        credentialVarRef:
          compDef: {{ include "mongodb.componentDefName" . }}
          name: root
          optional: false
          password: Required
