apiVersion: apps.kubeblocks.io/v1alpha1
kind: ComponentDefinition
metadata:
  name: {{ include "mongos.componentDefName" . }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  provider: kubeblocks.io
  serviceKind: mongodb
  serviceVersion: "8.0.4"
  services:
    # - name: default
    #   serviceName: mongodb
    #   spec:
    #     ports:
    #       - name: mongodb
    #         port: 27017
    #         targetPort: mongodb
    #   roleSelector: primary
    # - name: readonly
    #   serviceName: mongodb-ro
    #   spec:
    #     ports:
    #       - name: mongodb
    #         port: 27017
    #         targetPort: mongodb
    #   roleSelector: secondary
    - name: everypod
      spec:
        ports:
          - name: mongos
            port: 27017
            targetPort: mongos
  configs:
    - name: mongodb-config
      templateRef: {{ include "mongos.configTplName" . }}
      constraintRef: {{ include "mongodb.configConstraintName" . }}
      volumeName: mongodb-config
      namespace: {{ .Release.Namespace }}
      defaultMode: 0400  # for only read
      keys:
        - mongos.conf
  logConfigs:
    {{- range $name,$pattern := .Values.logConfigs }}
    - name: {{ $name }}
      filePathPattern: {{ $pattern }}
    {{- end }}
  scripts:
    - name: mongodb-scripts
      templateRef: {{ include "mongodb.cmScriptsName" . }}
      namespace: {{ .Release.Namespace }}
      volumeName: scripts
      defaultMode: 0555  # for read and execute, mysql container switched user account.
  # systemAccounts:
  #   - name: root
  #     initAccount: true
  #     passwordGenerationPolicy:
  #       length: 16
  #       numDigits: 8
  #       numSymbols: 0
  #       letterCase: MixedCases
  # lifecycleActions:
  #   postProvision:
  #     customHandler:
  #       image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
  #       exec:
  #         command:
  #           - /bin/bash
  #           - -c
  #           - /scripts/mongodb-mongos-post-start.sh
  #       preCondition: RuntimeReady
        # targetPodSelector: Any
        # container: mongos
        # retryPolicy:
        #   maxRetries: 10
  runtime:
    containers:
      - name: mongos
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
        ports:
          - name: mongos
            protocol: TCP
            containerPort: 27017
          - name: ha
            protocol: TCP
            containerPort: 3601
        command:
          - bash
          - -c
          - /scripts/mongodb-mongos-setup.sh
        env:
          - name: PATH
            value: /kubeblocks/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
          # - name: KB_SERVICE_CHARACTER_TYPE
          #   value: mongodb
          - name: SERVICE_PORT
            value: $(KB_SERVICE_PORT)
          # - name: MONGODB_ROOT_USER
          #   value: $(MONGODB_USER)
          # - name: MONGODB_ROOT_PASSWORD
          #   value: $(MONGODB_PASSWORD)
        volumeMounts:
          - mountPath: {{ .Values.dataMountPath }}
            name: data
          - mountPath: /etc/mongodb/mongos.conf
            name: mongodb-config
            subPath: mongos.conf
          - mountPath: /etc/mongodb/keyfile
            name: mongodb-keyfile
            subPath: keyfile
          - name: scripts
            mountPath: /scripts
          - mountPath: /kubeblocks
            name: kubeblocks
    volumes:
      # {{- if .Values.logCollector.enabled }}
      # - name: log-data
      #   hostPath:
      #     path: /var/log/kubeblocks
      #     type: DirectoryOrCreate
      # {{- end }}
      # mongos does not need persistent volume
      - name: data
        emptyDir: {}
  vars:
    # - name: MONGODB_USER
    #   valueFrom:
    #     credentialVarRef:
    #       name: root
    #       optional: false
    #       username: Required
    # - name: MONGODB_PASSWORD
    #   valueFrom:
    #     credentialVarRef:
    #       name: root
    #       optional: false
    #       password: Required
    - name: KB_SERVICE_PORT  
      value: "27017"
      valueFrom:
        hostNetworkVarRef:
          optional: true
          container:
            name: mongos
            port:
              name: mongos
              option: Optional
    - name: SYNCER_SERVICE_PORT  
      valueFrom:
        hostNetworkVarRef:
          optional: true
          container:
            name: mongos
            port:
              name: ha
              option: Optional
    # - name: CFG_SERVER_COMPONENT_NAME
    #   valueFrom:
    #     componentVarRef:
    #       compDef: {{ include "cfgServer.componentDefName" . }}
    #       optional: false
    #       componentName: Required
    - name: CFG_SERVER_REPLICA_SET_NAME
      valueFrom:
        componentVarRef:
          compDef: {{ include "cfgServer.componentDefName" . }}
          optional: false
          componentName: Required
    - name: CFG_SERVER_POD_FQDN_LIST
      valueFrom:
        componentVarRef:
          compDef: {{ include "cfgServer.componentDefName" . }}
          optional: false
          podFQDNs: Required
    - name: CFG_SERVER_INTERNAL_PORT
      valueFrom:
        serviceVarRef:
          compDef: {{ include "cfgServer.componentDefName" . }}
          optional: false
          port:
            name: mongodb
  hostNetwork:
    containerPorts:
      - container: mongos
        ports:
          - mongos
          - ha