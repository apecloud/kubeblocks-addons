apiVersion: apps.kubeblocks.io/v1
kind: ComponentDefinition
metadata:
  name: {{ include "etcd3.cmpdName" . }}
  labels:
    {{- include "etcd.labels" . | nindent 4 }}
  annotations:
    {{- include "etcd.annotations" . | nindent 4 }}
spec:
  provider: ApeCloud
  description: {{ .Chart.Description }}
  serviceKind: {{ .Chart.Name }}
  runtime:
    initContainers:
      - name: inject-bash
        imagePullPolicy: {{default .Values.bashBusyboxImage.pullPolicy "IfNotPresent"}}
        volumeMounts:
          - name: scripts
            mountPath: /scripts
          - name: bin
            mountPath: /shared/bin
          - name: data
            mountPath: {{ .Values.dataMountDir }}
        command:
          - /bin/bash
          - -c
          - |
            mkdir -p {{ .Values.binDir }}
            /scripts/inject-bash.sh {{ .Values.binDir }}
    containers:
      - name: etcd
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        workingDir: {{ .Values.dataMountDir }}
        ports:
          - containerPort: 2379
            name: client
          - containerPort: 2380
            name: peer
        volumeMounts:
          - name: data
            mountPath: {{ .Values.dataMountDir }}
          - name: config
            mountPath: /etc/etcd
          - name: scripts
            mountPath: /scripts
          - name: bin
            mountPath: /bin
        command:
          - /bin/bash
          - -c
          - |
            export PATH="/bin:$PATH"
            /scripts/start.sh
        env:
          - name: CURRENT_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
    volumes:
      - name: bin
        emptyDir: {}
  vars:
    - name: ETCD_VERSION
      value: {{ .Chart.AppVersion }}
    - name: DATA_DIR
      value: {{ .Values.dataDir }}
    - name: RESTORE_DIR
      value: {{ .Values.restoreDir }}
    - name: BIN_DIR
      value: {{ .Values.binDir }}
    - name: CLUSTER_NAME
      valueFrom:
        clusterVarRef:
          clusterName: Required
    - name: TLS_MOUNT_PATH
      value: {{ .Values.tlsMountPath }}
    - name: CLIENT_TLS
      value: "{{ .Values.tls.client }}"
    - name: PEER_TLS
      value: "{{ .Values.tls.peer }}"
    - name: CONFIG_TEMPLATE_PATH
      value: {{ .Values.configTemplatePath }}
    - name: CONFIG_FILE_PATH
      value: {{ .Values.configFilePath }}
    - name: PEER_FQDNS
      valueFrom:
        componentVarRef:
          optional: false
          podFQDNs: Required
    - name: PEER_ENDPOINT
      valueFrom:
        serviceVarRef:
          optional: true
          host: Required
          loadBalancer: Required
    - name: LEADER_POD_FQDN
      valueFrom:
        componentVarRef:
          optional: false
          podFQDNsForRole:
            role: leader
            option: Required
    - name: ETCD_COMPONENT_NAME
      valueFrom:
        componentVarRef:
          optional: false
          componentName: Required
    - name: CLUSTER_NAMESPACE
      valueFrom:
        clusterVarRef:
          namespace: Required
    - name: TLS_ENABLED
      valueFrom:
        tlsVarRef:
          enabled: Optional
    - name: COMPONENT_REPLICAS
      valueFrom:
        componentVarRef:
          optional: false
          replicas: Required
  volumes:
    - name: data
      needSnapshot: true
  services:
    - name: peer
      spec:
        ports:
          - name: peer
            port: 2380
            targetPort: peer
      podService: true
      disableAutoProvision: true
  tls:
    volumeName: tls
    mountPath: {{ .Values.tlsMountPath }}
    caFile: ca.pem
    certFile: cert.pem
    keyFile: key.pem
  # reference: https://etcd.io/docs/v3.6/op-guide/runtime-configuration/ single member changes is better
  updateStrategy: Serial
  roles:
    - name: leader
      updatePriority: 2
      participatesInQuorum: true
    - name: follower
      updatePriority: 1
      participatesInQuorum: true
  lifecycleActions:
    roleProbe:
      exec:
        container: etcd
        command:
          - /bin/bash
          - -c
          - /scripts/roleprobe.sh
    memberJoin:
      exec:
        command:
          - /bin/bash
          - -c
          - /scripts/member-join.sh > /tmp/member-join.log 2>&1
    memberLeave:
      exec:
        command:
          - /bin/bash
          - -c
          - /scripts/member-leave.sh > /tmp/member-leave.log 2>&1
    switchover:
      exec:
        command:
          - /bin/bash
          - -c
          - /scripts/switchover.sh > /tmp/switchover.log 2>&1
    dataDump:
      exec:
        command:
          - /bin/bash
          - -c
          - /scripts/data-dump.sh > /tmp/data-dump.log 2>&1
        targetPodSelector: Role
        matchingKey: leader
    # send by kbagent-worker as init container, send data dump request to leader, and load data to this pod
    dataLoad:
      exec:
        command:
          - /bin/bash
          - -c
          - /scripts/data-load.sh > /tmp/data-load.log 2>&1
  configs:
    - name: config
      template: {{ include "etcd3.configTemplate" .}}
      namespace: {{ .Release.Namespace }}
      volumeName: config
      defaultMode: 0666
      restartOnFileChange: true
  scripts:
    - name: script
      template: {{ include "etcd3.scriptTemplate" .}}
      namespace: {{ .Release.Namespace }}
      volumeName: scripts
      defaultMode: 0555
