apiVersion: apps.kubeblocks.io/v1alpha1
kind: ComponentDefinition
metadata:
  name: qdrant
  labels:
    {{- include "qdrant.labels" . | nindent 4 }}
spec:
  provider: kubeblocks
  description: High-performance, massive-scale Vector Database for the next generation of AI.
  serviceKind: qdrant
  serviceVersion: 1.8.4
  updateStrategy: BestEffortParallel
  services:
  - name: qdrant
    serviceName: qdrant
    spec:
      ipFamilyPolicy: PreferDualStack
      ports:
      - name: tcp-qdrant
        port: 6333
        targetPort: tcp-qdrant
      - name: grpc-qdrant
        port: 6334
        targetPort: grpc-qdrant
  lifecycleActions:
    memberLeave:
      customHandler:
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.tools.repository }}:{{ .Values.image.tools.tag | default "latest" }}
        exec:
          command:
          - /bin/sh
          - -c
          - |
            {{- .Files.Get "scripts/qdrant-member-leave.sh" | nindent 12 }}
        targetPodSelector: Any
        container: qdrant
  configs:
  - name: qdrant-config-template
    templateRef: qdrant-config-template
    constraintRef: qdrant-config-constraints
    volumeName: qdrant-config
    namespace: {{ .Release.Namespace }}
  scripts:
  - name: qdrant-scripts
    templateRef: qdrant-scripts
    namespace: {{ .Release.Namespace }}
    volumeName: scripts
    defaultMode: 0555
  volumes:
  - name: data
    needSnapshot: true
  runtime:
    securityContext:
      fsGroup: 1001
    initContainers:
    - name: qdrant-tools
      command:
      - /bin/sh
      - -c
      - |
        cp /bin/jq /qdrant/tools/jq
        cp /bin/curl /qdrant/tools/curl
      image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.tools.repository }}:{{ .Values.image.tools.tag | default "latest" }}
      imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /qdrant/tools
        name: tools
    containers:
    - name: qdrant
      image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:v1.8.4
      imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
      securityContext:
        runAsUser: 0
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: tcp-qdrant
          scheme: HTTP
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 10
      readinessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - |
            consensus_status=`/qdrant/tools/curl -s http://localhost:6333/cluster | /qdrant/tools/jq -r .result.consensus_thread_status.consensus_thread_status`
            if [ "$consensus_status" != "working" ]; then
              echo "consensus stopped"
              exit 1
            fi
        failureThreshold: 2
        initialDelaySeconds: 5
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 3
      startupProbe:
        failureThreshold: 18
        httpGet:
          path: /
          port: tcp-qdrant
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /qdrant/config/
        name: qdrant-config
      - mountPath: {{ .Values.dataMountPath }}
        name: data
      - mountPath: /qdrant/scripts
        name: scripts
      - mountPath: /qdrant/tools
        name: tools
      ports:
      - name: tcp-qdrant
        containerPort: 6333
      - name: grpc-qdrant
        containerPort: 6334
      - name: tcp-metrics
        containerPort: 9091
      - name: p2p
        containerPort: 6335
      command: ["/bin/sh", "-c"]
      args: ["/qdrant/scripts/setup.sh"]
      env:
      - name: QDRANT__TELEMETRY_DISABLED
        value: "true"
      - name: SERVICE_PORT
        value: "6333"
      - name: CLUSTER_DOMAIN
        value: "{{ .Values.clusterDomain }}"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    volumes:
    - emptyDir: {}
      name: tools
