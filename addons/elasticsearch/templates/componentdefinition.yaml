apiVersion: v1
kind: List
metadata:
items:
- apiVersion: apps.kubeblocks.io/v1alpha1
  kind: ComponentDefinition
  metadata:
    name: elasticsearch-8
    annotations:
      apps.kubeblocks.io/skip-immutable-check: "true"
    labels:
      {{- include "elasticsearch.labels" . | nindent 6 }}
  spec:
    provider: &provider kubeblocks
    description: &description Elasticsearch is a distributed, RESTful search engine optimized for speed and relevance on production-scale workloads.
    serviceKind: &serviceKind elasticsearch
    updateStrategy: &updateStrategy Parallel
    exporter: &exporter
      containerName: exporter
      scrapePath: /metrics
      scrapePort: {{ .Values.exporter.service.port | quote}}
    configs:
    - name: es-cm
      templateRef: {{ include "elasticsearch.name" . }}-config
      namespace: {{ .Release.Namespace }}
      volumeName: es-cm
    scripts: &scripts
    - name: scripts
      templateRef: {{ include "elasticsearch.name" . }}-scripts
      namespace: {{ .Release.Namespace }}
      volumeName: scripts
      defaultMode: 0555
    services: &services
    - name: http
      serviceName: http
      spec:
        ipFamilyPolicy: PreferDualStack
        ipFamilies:
        - IPv4
        ports:
        - name: http
          port: 9200
          targetPort: http
    lifecycleActions: &lifecycleActions
      memberLeave:
        customHandler:
          exec:
            image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.tools.repository }}:{{ .Values.image.tools.tag | default "latest" }}
            command:
            - /bin/sh
            - -c
            - |
              # https://www.elastic.co/guide/en/elasticsearch/reference/7.7/add-elasticsearch-nodes.html
              set -x
              endpoint=http://127.0.0.1:9200
              common_options="--fail --max-time 3 --retry 3"
              echo "removing node $KB_LEAVE_MEMBER_POD_NAME"
              version=`curl ${common_options} -s ${endpoint} | jq -r .version.number`
              if [ $? != 0 ]; then
                echo "failed to get es version"
                exit 1
              fi
              version=${version%.*}
              if awk "BEGIN {exit !($version < 7.8)}"; then
                url=${endpoint}/_cluster/voting_config_exclusions/$KB_LEAVE_MEMBER_POD_NAME
              else
                url=${endpoint}/_cluster/voting_config_exclusions?node_names=$KB_LEAVE_MEMBER_POD_NAME
              fi
              curl ${common_options} -v -X POST $url
              if [ $? != 0 ]; then
                echo "failed to add node $KB_LEAVE_MEMBER_POD_NAME to voting config exclusion list"
                echo "may be the voting config exclusion list is full, try to remove it first"
                curl ${common_options} -X DELETE "${endpoint}/_cluster/voting_config_exclusions?pretty&wait_for_removal=false"
                exit 1
              else
                echo "successfully added node $KB_LEAVE_MEMBER_POD_NAME to voting config exclusion list"
              fi
            targetPodSelector: Any
            container: elasticsearch
    runtime: &runtime
      containers:
      - env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: READINESS_PROBE_PROTOCOL
          value: http
        - name: NSS_SDB_USE_CACHE
          value: "no"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - sh
          - -c
          - |
            if [ -f /bin/tini ]; then
              /bin/tini -- /usr/local/bin/docker-entrypoint.sh
            else
              /tini -- /usr/local/bin/docker-entrypoint.sh
            fi
        lifecycle:
          preStop:
            exec:
              command:
              - bash
              - -c
              - |
                /mnt/remote-scripts/pre-stop-hook-script.sh
        name: elasticsearch
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - bash
            - -c
            - /mnt/remote-scripts/readiness-probe-script.sh
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/bin
          name: local-bin
        - mountPath: /usr/share/elasticsearch/config
          name: local-config
        - mountPath: /usr/share/elasticsearch/plugins
          name: local-plugins
        - mountPath: /usr/share/elasticsearch/data
          name: data
        - mountPath: /usr/share/elasticsearch/logs
          name: log
        - mountPath: /mnt/remote-config
          name: es-cm
          readOnly: true
        - mountPath: /mnt/remote-scripts
          name: scripts
          readOnly: true
        - mountPath: /tmp
          name: tmp-volume
      - name: exporter
        command:
          - /bin/elasticsearch_exporter
          - "--es.uri=http://localhost:9200"
        ports:
        - name: metrics
          containerPort: {{.Values.exporter.service.port}}
        env:
        - name: SERVICE_PORT
          value: {{.Values.exporter.service.port | quote }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: metrics
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: metrics
          initialDelaySeconds: 1
          timeoutSeconds: 5
          periodSeconds: 5
      initContainers:
      - name: prepare-plugins
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - |
          if [ -d /plugins ]; then
            echo "install plugins: $(ls /plugins)"
            cp -r /plugins/* /tmp/plugins/
          else
            echo "there is no plugins"
          fi
        securityContext:
          runAsUser: 0
          privileged: true
        volumeMounts:
        - mountPath: /tmp/plugins
          name: plugins
      - command:
        - sh
        - -c
        - |
          set -x
          sh /mnt/remote-scripts/install-plugins.sh
          sh /mnt/remote-scripts/prepare-fs.sh
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: install-plugins
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /mnt/remote-config
          name: es-cm
          readOnly: true
        - mountPath: /mnt/remote-scripts
          name: scripts
          readOnly: true
        - mountPath: /mnt/local-bin
          name: local-bin
        - mountPath: /mnt/local-config
          name: local-config
        - mountPath: /mnt/local-plugins
          name: local-plugins
        - mountPath: /tmp/plugins
          name: plugins
      securityContext:
        fsGroup: 1000
      volumes:
      - emptyDir: { }
        name: log
      - emptyDir: { }
        name: tmp-volume
      - emptyDir: {}
        name: local-bin
      - emptyDir: {}
        name: local-config
      - emptyDir: {}
        name: local-plugins
      - emptyDir: {}
        name: plugins

- apiVersion: apps.kubeblocks.io/v1alpha1
  kind: ComponentDefinition
  metadata:
    name: elasticsearch-7
    annotations:
      apps.kubeblocks.io/skip-immutable-check: "true"
    labels:
      {{- include "elasticsearch.labels" . | nindent 6 }}
  spec:
    provider: *provider
    description: *description
    serviceKind: *serviceKind
    updateStrategy: *updateStrategy
    exporter: *exporter
    configs:
    - name: es-cm
      templateRef: {{ include "elasticsearch.name" . }}-config-7
      namespace: {{ .Release.Namespace }}
      volumeName: es-cm
    scripts: *scripts
    services: *services
    lifecycleActions: *lifecycleActions
    runtime: *runtime
