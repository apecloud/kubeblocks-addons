apiVersion: apps.kubeblocks.io/v1
kind: ComponentDefinition
metadata:
  name: {{ include "journalNodeComponentDef" . }}
  labels:
    {{- include "hadoop.labels" . | nindent 4 }}
  annotations:
    {{- include "hadoop.annotations" . | nindent 4 }}
spec:
  provider: kubeblocks
  description: {{ .Chart.Description }}
  serviceKind: hdfs-journalnode
  serviceVersion: {{ .Chart.AppVersion }}
  podManagementPolicy: Parallel
  services:
    - name: default
      spec:
        ports:
          - name: jn
            port: 8485
          - name: http
            port: 8480
  serviceRefDeclarations:
    - name: hadoopZookeeper
      optional: true
      serviceRefDeclarationSpecs:
        - serviceKind: zookeeper
          serviceVersion: "^*"
  runtime:
    initContainers:
      - name: init-jmx-exporter
        volumeMounts:
          - name: edits-dir
            mountPath: /hadoop
        {{- include "hadoop.initJmxExporterContainer" . | nindent 8 }}
    containers:
      - name: hdfs-journalnode
        imagePullPolicy: {{ default "IfNotPresent" .Values.images.pullPolicy }}
        ports:
          - containerPort: 8485
            name: jn
          - containerPort: 8480
            name: http
        env:
          - name: DEBUG_MODEL
            value: "false"
          # need zookeeper endpoints
          - name: WAIT_ZK_TO_READY
            value: "false"
        command:
         - bash
         - -c
         - |
           /kubeblocks/scripts/start-journalnode.sh
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          exec:
            command:
              - /bin/bash
              - /kubeblocks/scripts/check-journal-status.sh
        readinessProbe:
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          exec:
            command:
              - /bin/bash
              - /kubeblocks/scripts/check-journal-status.sh
        volumeMounts:
          - name: edits-dir
            mountPath: /hadoop
          - name: core-config
            mountPath: /hadoop/conf/core-site.xml
            subPath: core-site.xml
          - name: journalnode-config
            mountPath: /hadoop/conf/hdfs-site.xml
            subPath: hdfs-site.xml
          - mountPath: /hadoop/conf/log4j.properties
            name: journalnode-config
            subPath: log4j.properties
          - name: scripts
            mountPath: /kubeblocks/scripts
          - name: journalnode-config
            mountPath: /hadoop/conf/jmx-exporter.yaml
            subPath: jmx-exporter.yaml
        securityContext:
          runAsUser: 10000
          runAsGroup: 1000
          runAsNonRoot: true
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop: [ "ALL" ]
          seccompProfile:
            type: "RuntimeDefault"
    securityContext:
      fsGroupChangePolicy: Always
      fsGroup: 1000
    updateStrategy: BestEffortParallel
    volumes:
      - name: hadoop-common
        emptyDir: {}
  vars:
    - name: ENABLE_JMX_EXPORTER
      value: {{ .Values.enableJmxExporter | quote }}
    - name: JMX_EXPORTER_PORT
      value: "{{ .Values.jmxExporterPort }}"
    - name: HOME
      value: /home/hadoop
    - name: JOURNALNODE_POD_FQDN_LIST
      valueFrom:
        componentVarRef:
          optional: false
          podFQDNs: Required
    - name: CLUSTER_NAME
      valueFrom:
        clusterVarRef:
          clusterName: Required
    - name: CLUSTER_NAMESPACE
      valueFrom:
        clusterVarRef:
          namespace: Required
    - name: COMPONENT_NAME
      valueFrom:
        componentVarRef:
          optional: false
          shortName: Required
    - name: CLUSTER_COMPONENT_NAME
      valueFrom:
        componentVarRef:
          optional: false
          componentName: Required
    - name: ZOOKEEPER_COMP_ENDPOINTS
      valueFrom:
        componentVarRef:
          compDef: zookeeper
          optional: true
          podFQDNs: Required
      expression: {{ `{{ $hosts := splitList "," .ZOOKEEPER_COMP_ENDPOINTS }}{{ range $idx, $host := $hosts }}{{ $host }}:2181{{ if lt $idx (sub (len $hosts) 1) }},{{ end }}{{ end }}` | toYaml }}
    - name: ZOOKEEPER_ENDPOINTS
      valueFrom:
        serviceRefVarRef:
          name: hadoopZookeeper
          optional: true
          endpoint: Required
      expression: {{ `{{if ne (index . "ZOOKEEPER_ENDPOINTS") ""}}{{.ZOOKEEPER_ENDPOINTS}}{{else}}{{.ZOOKEEPER_COMP_ENDPOINTS}}{{end}}` | toYaml }}
  configs:
    - name: config
      namespace: {{ .Release.Namespace }}
      template: hadoop-journalnode-config-template
      volumeName: journalnode-config
      defaultMode: 0755
      # externalManaged: true
      restartOnFileChange: true
    - name: core-config
      namespace: {{ .Release.Namespace }}
      template: hadoop-core-config-template
      volumeName: core-config
      defaultMode: 0755
      # externalManaged: true
      restartOnFileChange: true
  scripts:
    - name: {{ include "hadoop.name" . }}-scripts
      template: {{ include "hadoop.name" . }}-scripts
      volumeName: scripts
      namespace: {{ .Release.Namespace }}
      defaultMode: 0755
