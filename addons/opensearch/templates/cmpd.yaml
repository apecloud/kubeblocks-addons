apiVersion: apps.kubeblocks.io/v1
kind: ComponentDefinition
metadata:
  name: opensearch-{{ .Chart.Version }}
  labels:
    {{- include "opensearch.labels" . | nindent 4 }}
spec:
  provider: Community
  description: {{ .Chart.Description }}
  serviceKind: {{ .Chart.Name }}
  serviceVersion: {{ .Chart.AppVersion }}
  runtime:
    initContainers:
      - name: fsgroup-volume
        image: {{ .Values.image.registry | default "docker.io" }}/apecloud/alpine:3.16
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
        command: [ 'sh', '-c' ]
        args:
          - 'chown -R 1000:1000 /usr/share/opensearch/data'
        securityContext:
          runAsUser: 0
        volumeMounts:
          - name: data
            mountPath: /usr/share/opensearch/data
      - name: sysctl
        image: {{ .Values.image.registry | default "docker.io" }}/apecloud/alpine:3.16
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
        command:
          - sh
          - -c
          - |
            set -xe
            DESIRED="262144"
            CURRENT=$(sysctl -n vm.max_map_count)
            if [ "$DESIRED" -gt "$CURRENT" ]; then
              sysctl -w vm.max_map_count=$DESIRED
            fi
        securityContext:
          runAsUser: 0
          privileged: true
    containers:
      - name: opensearch
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
        readinessProbe:
          tcpSocket:
            port: 9200
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          tcpSocket:
            port: 9200
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 30
        ports:
          - name: http
            containerPort: 9200
          - name: transport
            containerPort: 9300
          - name: metrics
            containerPort: 9600
        env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: cluster.initial_master_nodes
            value: "$(KB_CLUSTER_NAME)-$(KB_COMP_NAME)-0"
          - name: discovery.seed_hosts
            value: "$(KB_CLUSTER_NAME)-$(KB_COMP_NAME)-headless"
          - name: cluster.name
            value: "$(KB_CLUSTER_NAME)"
          - name: network.host
            value: "0.0.0.0"
          - name: OPENSEARCH_JAVA_OPTS
            value: "-Xmx512M -Xms512M"
          - name: node.roles
            value: "master,ingest,data,remote_cluster_client"
        volumeMounts:
          - mountPath: /usr/share/opensearch/data
            name: data
          - mountPath: /usr/share/opensearch/config/opensearch.yaml
            subPath: opensearch.yaml
            name: opensearch-config
      - name: opensearch-master-graceful-termination-handler
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
        command:
          - "sh"
          - -c
          - |
            #!/usr/bin/env bash
            set -eo pipefail

            http () {
                local path="${1}"
                if [ -n "${USERNAME}" ] && [ -n "${PASSWORD}" ]; then
                  BASIC_AUTH="-u ${USERNAME}:${PASSWORD}"
                else
                  BASIC_AUTH=''
                fi
                curl -XGET -s -k --fail ${BASIC_AUTH} https://$(KB_CLUSTER_NAME)-$(KB_COMP_NAME)-headless:9200:${path}
            }

            cleanup () {
              while true ; do
                local master="$(http "/_cat/master?h=node" || echo "")"
                if [[ $master == "$(KB_CLUSTER_NAME)-$(KB_COMP_NAME)"* && $master != "${NODE_NAME}" ]]; then
                  echo "This node is not master."
                  break
                fi
                echo "This node is still master, waiting gracefully for it to step down"
                sleep 1
              done

              exit 0
            }

            trap cleanup SIGTERM

            sleep infinity &
            wait $!
  volumes:
    - name: data
  services:
    - name: default
      spec:
        ports:
          - name: http
            port: 9200
            targetPort: http
          - name: transport
            port: 9300
            targetPort: transport
  configs:
    - name: opensearch-config-template
      templateRef: opensearch-config-template
      volumeName: opensearch-config
      namespace: {{.Release.Namespace}}
