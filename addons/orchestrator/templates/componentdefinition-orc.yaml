apiVersion: apps.kubeblocks.io/v1alpha1
kind: ComponentDefinition
metadata:
  name: {{ include "orchestrator.componentDefName" . }}
  labels:
      {{- include "orchestrator.labels" . | nindent 4 }}
spec:
  provider: kubeblocks
  description: mysql HA compoent definition for Kubernetes
  serviceKind: orchestrator
  serviceVersion: 3.2.6

  serviceRefDeclarations:
    - name: metaMysql
      serviceRefDeclarationSpecs:
        - serviceKind: mysql
          serviceVersion: "^*"
  configs:
    - name: orchestrator-config
      templateRef: {{ include "orchestrator.componentDefName" . }}-config
      namespace: {{ .Release.Namespace }}
      volumeName: orchestrator-config
      asEnvFrom:
        - orchestrator

  scripts:
    - name: orc-scripts
      templateRef: {{ include "orchestrator.componentDefName" . }}-scripts
      namespace: {{ .Release.Namespace }}
      volumeName: scripts
      defaultMode: 0555
  vars:
    - name: META_MYSQL_PORT
      valueFrom:
        serviceRefVarRef:
          compDef: {{ include "orchestrator.componentDefName" . }}
          name: metaMysql
          port: Required
    - name: META_MYSQL_ENDPOINT
      valueFrom:
        serviceRefVarRef:
          compDef: {{ include "orchestrator.componentDefName" . }}
          name: metaMysql
          endpoint: Required
    - name: META_MYSQL_USER
      valueFrom:
        serviceRefVarRef:
          compDef: {{ include "orchestrator.componentDefName" . }}
          name: metaMysql
          username: Required
    - name: META_MYSQL_PASSWORD
      valueFrom:
        serviceRefVarRef:
          compDef: {{ include "orchestrator.componentDefName" . }}
          name: metaMysql
          password: Required
  services:
    - name: orchestrator
      serviceName: orchestrator
      spec:
        ports:
          - name: http
            port: 80
            targetPort: http
          - name: prometheus
            port: 9125
            targetPort: prometheus
    - name: orchestrator-ordinal
      serviceName: orchestrator-ordinal
      generatePodOrdinalService: true
      spec:
        type: ClusterIP
        ports:
          - name: raft
            port: 10008
            targetPort: raft
          - name: http
            port: 80
            targetPort: http
  runtime:
    initContainers:
      - name: init-meta-database
        command:
          - bash
          - -c
          - "/scripts/init-meta-database.sh;"
        image: docker.io/mysql:8.0.33
        imagePullPolicy: Always
        volumeMounts:
          - name: scripts
            mountPath: /scripts
        env:
          - name: ORC_META_DATABASE
            value: {{ .Values.orchestrator.metaBackends.database }}
    containers:
      - name: orchestrator
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default "v0.6.3" }}
        imagePullPolicy: IfNotPresent
        command:
          - bash
          - -c
          - |
            /usr/local/orchestrator/orchestrator -quiet -config /usr/local/share/orchestrator/templates/orchestrator.conf.json http
        volumeMounts:
          - name: orchestrator-data
            mountPath: /var/lib/orchestrator
          - name: orchestrator-config
            mountPath: /usr/local/share/orchestrator/templates
          - name: scripts
            mountPath: /scripts
        ports:
          - containerPort: 3000
            name: http
          - containerPort: 10008
            name: raft
        env:
          - name: ORC_META_DATABASE
            value: {{ .Values.orchestrator.metaBackends.database }}
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
                apiVersion: v1
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name