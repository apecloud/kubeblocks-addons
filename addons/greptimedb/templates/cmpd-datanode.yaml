apiVersion: apps.kubeblocks.io/v1alpha1
kind: ComponentDefinition
metadata:
  name: greptimedb-datanode-{{ .Chart.Version }}
  labels:
    {{- include "greptimedb.labels" . | nindent 4 }}
spec:
  provider: Community
  description: {{ .Chart.Description }}
  serviceKind: {{ .Chart.Name }}
  serviceVersion: {{ .Chart.AppVersion }}
  runtime:
    containers:
      - name: datanode
        imagePullPolicy: {{default .Values.images.pullPolicy "IfNotPresent"}}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 4000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 4000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: /etc/greptimedb
            name: config
          - mountPath: /tmp/greptimedb
            name: datanode
        ports:
          - name: grpc
            containerPort: 4001
          - name: http
            containerPort: 4000
        args:
          - datanode
          - start
          - --metasrv-addr
          - $(GREPTIMEDB_META_SVC):3002
          - --http-addr
          - 0.0.0.0:4000
          - --config-file
          - /etc/greptimedb/config.toml
    dnsPolicy: ClusterFirst
    initContainers:
      - name: wait-meta
        image: busybox:1.35
        imagePullPolicy: {{default .Values.images.pullPolicy "IfNotPresent"}}
        command:
          - bin/sh
          - -c
          - |
            until nslookup ${GREPTIMEDB_META_SVC}; do
              # datanode requires at least one meta is ready
              echo "waiting for meta"; sleep 2;
            done;
      - name: initializer
        args:
          - --config-path
          - /etc/greptimedb/config.toml
          - --init-config-path
          - /etc/greptimedb-init/config.toml
          - --datanode-rpc-port
          - "4001"
          - --datanode-service-name
          - $(KB_CLUSTER_COMP_NAME)-headless
          - --namespace
          - $(KB_NAMESPACE)
          - --component-kind
          - datanode
        command:
          - greptimedb-initializer
        env:
          - name: POD_IP
            value: $(KB_POD_IP)
          - name: POD_NAME
            value: $(KB_POD_NAME)
        image: docker.io/greptime/greptimedb-initializer:0.1.0-alpha.12
        imagePullPolicy: {{default .Values.images.pullPolicy "IfNotPresent"}}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: /etc/greptimedb
            name: config
          - mountPath: /etc/greptimedb-init
            name: datanode-config
    terminationGracePeriodSeconds: 10
    volumes:
      - emptyDir: { }
        name: config
  vars:
    - name: GREPTIMEDB_META_SVC
      valueFrom:
        serviceVarRef:
          compDef: greptimedb-meta
          name: headless
          optional: false
          host: Required
      expression: {{ `{{ .GREPTIMEDB_META_SVC }}.{{ .KB_NAMESPACE }}.svc.cluster.local` | toYaml | nindent 8 }}
  volumes:
    - name: datanode
  configs:
    - name: greptimedb-datanode
      templateRef: greptimedb-datanode
      volumeName: datanode-config
      namespace: {{ .Release.Namespace }}