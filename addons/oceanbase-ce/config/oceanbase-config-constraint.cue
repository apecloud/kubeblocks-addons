// generated by tools
// source: https://raw.githubusercontent.com/oceanbase/oceanbase/4.2.1/src/share/parameter/ob_parameter_seed.ipp
#OBParameters: {

	// "the directory for the data file"
	data_dir: string | *"store"

	// "EXTERNAL: use extrernal redundancyNORMAL: tolerate one disk failureHIGH: tolerate two disk failure if disk count is enough"
	redundancy_level: string | *"NORMAL"

	// "size of the data file. Range: [0, +∞)"
	datafile_size: string | *"0M"

	// "the auto extend step. Range: [0, +∞)"
	datafile_next: string | *"0"

	// "the auto extend max size. Range: [0, +∞)"
	datafile_maxsize: string | *"0"

	// "the percentage of disk space used by the data files. Range: [0,99] in integer"
	datafile_disk_percentage: int & >=0 & <=99 | *0

	// "the percentage of disk space usage upper bound to trigger datafile extend. Range: [5,99] in integer"
	"_datafile_usage_upper_bound_percentage": int & >=5 & <=99 | *90

	// "the percentage of disk space usage lower bound to trigger datafile shrink. Range: [5,99] in integer"
	"_datafile_usage_lower_bound_percentage": int & >=5 & <=99 | *10

	// "the size of the system memory reserved for emergency internal use. Range: [10M, total size of memory]"
	memory_reserved: string | *"500M"

	// "additional directories of configure file"
	config_additional_dir: string | *"etc2;etc3"

	// "the name of the module under memory leak checks"
	leak_mod_to_check: string | *"NONE"

	// "the port number for RPC protocol. Range: (1024, 65536) in integer"
	rpc_port: int & >=1025 & <=65535 | *2882

	// "port number for mysql connection. Range: (1024, 65536) in integer"
	mysql_port: int & >=1025 & <=65535 | *2881

	// "name of network adapter"
	devname: string | *"bond0"

	// "specifies the zone name"
	zone: string

	// "specifies the observer startup mode"
	ob_startup_mode: string | *"NORMAL"

	// "the number of microseconds an internal DML request is permitted to execute before it is terminated. Range: [1000us, 1h]"
	internal_sql_execute_timeout: string | *"30s"

	// "the number of rpc/mysql I/O threads for Libeasy. Range: [0, 64] in integer, 0 stands for max(6, CPU_NUM/8)"
	net_thread_count: int & >=0 & <=64 | *0

	// "the number of rpc I/O threads for high priority messages, 0 means set off. Range: [0, 64] in integer"
	high_priority_net_thread_count: int & >=0 & <=64 | *0

	// "the size of the task queue for each tenant. Range: [1024,+∞)"
	tenant_task_queue_size: int & >=1024 | *16384

	// "the size of the memory reserved for internal use(for testing purpose), 0 means follow memory_limit_percentage. Range: 0, [1G,)."
	memory_limit: string

	// "the memory reserved for internal use which cannot be allocated to any outer-tenant, and should be determined to guarantee every server functions normally. Range: [0M,)"
	system_memory: string

	// "the number of CPU\\'s in the system. If this parameter is set to zero, the number will be set according to sysconf; otherwise, this parameter is used. Range: [0,+∞) in integer"
	cpu_count: int & >=0 | *0

	// "the threshold of execution time (in milliseconds) of a query beyond which it is considered to be a \\'slow query\\'. Range: [1ms,+∞)"
	trace_log_slow_query_watermark: string | *"1s"

	// "specifies whether to always record the trace log. The default value is True."
	enable_record_trace_log: string | *"True"

	// "truncate very long string when printing to log file. Range:[0,]"
	max_string_print_length: int & >=0 | *500

	// "specifies whether SQL audit is turned on. The default value is TRUE. Value: TRUE: turned on FALSE: turned off"
	enable_sql_audit: string | *"true"

	// "specifies whether record app trace id is turned on."
	enable_record_trace_id: string | *"False"

	// "specifies whether add ip:port, time and trace id to user error message. The default value is FALSE."
	enable_rich_error_msg: string | *"false"

	// "Enable the debug sync facility and optionally specify a default wait timeout in micro seconds. A zero value keeps the facility disabled, Range: [0, +∞]"
	debug_sync_timeout: string | *"0"

	// "specify a tcp_user_timeout for RFC5482. A zero value makes the option disabled, Range: [0, 2h]"
	dead_socket_detection_timeout: string | *"3s"

	// "specifies whether to enable perf event feature. The default value is True."
	enable_perf_event: string | *"True"

	// "specifies whether upgrade mode is turned on. If turned on, daily merger and balancer will be disabled. Value: True: turned on; False: turned off;"
	enable_upgrade_mode: string | *"False"

	// "the hour of expire time for schema history, from 1hour to 30days, with default 7days. Range: [1h, 30d]"
	schema_history_expire_time: string | *"7d"

	// "default compress function name for create new table, values: none, lz4_1.0, snappy_1.0, zlib_1.0, zstd_1.0, zstd_1.3.8"
	default_compress_func: string | *"zstd_1.3.8"

	// "default row format in mysql mode"
	default_row_format: string | *"dynamic"

	// "default compress strategy for create new table within oracle mode"
	default_compress: string | *"archive"

	// "the time interval to refresh cluster weak read version Range: [50ms, +∞)"
	weak_read_version_refresh_interval: string | *"100ms"

	// "a list of servers against which election candidate is checked for validation"
	rootservice_list: string

	// "Name of the cluster"
	cluster: string | *"obcluster"

	// "ID of the cluster"
	cluster_id: int & >=1 & <=4294901759 | *0

	// "URL for OBConfig service"
	obconfig_url: string

	// "specifies the current level of logging. There are DEBUG, TRACE, WDIAG, EDIAG, INFO, WARN, ERROR, seven different log levels."
	syslog_level: string | *"WDIAG"

	// "Syslog IO bandwidth limitation, exceeding syslog would be truncated. Use 0 to disable ERROR log."
	syslog_io_bandwidth_limit: string | *"30MB"

	// "DIAG syslog limitation for each error per second, exceeding syslog would be truncated"
	diag_syslog_per_error_limit: int & >=0 | *200

	// "specifies the maximum number of the log files that can co-exist before the log file recycling kicks in. Each log file can occupy at most 256MB disk space. When this value is set to 0, no log file will be removed. Range: [0, +∞) in integer"
	max_syslog_file_count: int & >=0 | *0

	// "specifies whether use async log for observer.log, elec.log and rs.log"
	enable_async_syslog: string | *"True"

	// "specifies whether any log message with a log level higher than \\'WARN\\' would be printed into a separate file with a suffix of \\'wf\\'"
	enable_syslog_wf: string | *"True"

	// "specifies whether log file recycling is turned on. Value: True：turned on; False: turned off"
	enable_syslog_recycle: string | *"False"

	// "the size of the memory reserved for internal use(for testing purpose). Range: [10, 95]"
	memory_limit_percentage: int & >=10 & <=95 | *80

	// "size of remaining memory at which cache eviction will be triggered. Range: [0,+∞)"
	cache_wash_threshold: string | *"4GB"

	// "the maximum size of memory cached by memory chunk cache. Range: [0M,], 0 stands for adaptive"
	memory_chunk_cache_size: string | *"0M"

	// "the maximum size of large memory cached by memory chunk cache. Range: [0M,], 0 stands for adaptive"
	"_memory_large_chunk_cache_size": string | *"0M"

	// "auto-increment service cache refresh sync_value in this interval, with default 3600s. Range: [100ms, +∞)"
	autoinc_cache_refresh_interval: string | *"3600s"

	// "specifies whether sql operators (sort/hash join/material/window function/interm result/...) allowed to write to disk"
	enable_sql_operator_dump: string | *"True"

	// "the maximum size of memory used by ChunkRowStore, 0 means follow operator's setting. Range: [0, +∞)"
	"_chunk_row_store_mem_limit": string | *"0M"

	// "specifies whether allow the partition level retry when the leader changes"
	"_enable_partition_level_retry": string | *"True"

	// "specifies whether allow to do some defensive checks when the query is executed, 0 means defensive check is disabled, 1 means normal defensive check is enabled, 2 means more strict defensive check is enabled, such as check partition id validity"
	"_enable_defensive_check": int | *1

	// "True means that the split + batch optimization for inserting multiple rows of the insert values ​​statement can be done"
	"_sql_insert_multi_values_split_opt": string | *"True"

	// "control whether to delete auxiliary tenant after recovering tables failed"
	"_auto_drop_recovering_auxiliary_tenant": string | *"True"

	// "the min malloc times between two samples, which is not more than _max_malloc_sample_interval. 10000 means not to sample any malloc, Range: [1, 10000]"
	"_min_malloc_sample_interval": int & >=1 & <=10000 | *16

	// "the max malloc times between two samples, which is not less than _min_malloc_sample_interval. 1 means to sample all malloc, Range: [1, 10000]"
	"_max_malloc_sample_interval": int & >=1 & <=10000 | *256

	// "whether enable values statement folds self params"
	"_enable_values_table_folding": string | *"True"

	// "the number of minimal vCPUs allocated to the server tenant(a special internal tenant that exists on every observer). 0 stands for adaptive. Range: [0, 16]"
	server_cpu_quota_min: float & >=0 & <=16 | *0

	// "the number of maximal vCPUs allocated to the server tenant(a special internal tenant that exists on every observer). 0 stands for adaptive. Range: [0, 16]"
	server_cpu_quota_max: float & >=0 & <=16 | *0

	// "the size of the memory reserved for hidden sys tenant, 0M means follow the adjusting value."
	"_hidden_sys_tenant_memory": string | *"0M"

	// "the number of vCPUs allocated for the requests regarding location info of the core tables. Range: [0,10] in integer"
	location_cache_cpu_quota: float & >=0 & <=10 | *5

	// "the ratio(integer) between the number of system allocated workers vs the maximum number of threads that can be scheduled concurrently. Range: [2, 20]"
	workers_per_cpu_quota: int & >=2 & <=20 | *10

	// "the percentage of the workers reserved to serve large query request. Range: [0, 100] in percentage"
	large_query_worker_percentage: float & >=0 & <=100 | *30

	// "threshold for execution time beyond which a request may be paused and rescheduled as a \\'large request\\'. Range: [1ms, +∞)"
	large_query_threshold: string | *"5s"

	// "ob max thread number upper limit of observer thread count. Range: [0, 10000), 0 means no limit."
	"_ob_max_thread_num": int & >=0 & <=9999 | *0

	// "used in calculating the value of MEMSTORE_LIMIT parameter: memstore_limit_percentage = memstore_limit / memory_size,memory_size, where MEMORY_SIZE is determined when the tenant is created. Range: (0, 100)"
	memstore_limit_percentage: int & >=1 & <=99 | *50

	// "time interval for periodic plan cache eviction. Range: [0s, +∞)"
	plan_cache_evict_interval: string | *"5s"

	// "the ratio of the dtl buffer manager list. Range: [1, 128]"
	"_px_chunklist_count_ratio": int & >=1 & <=128 | *1

	// "Lease for current heartbeat. If the root server does not received any heartbeat from an observer in lease_time seconds, that observer is considered to be offline. Not recommended for modification. Range: [1s, 5m]"
	lease_time: string | *"10s"

	// "maximum of threads allowed for executing asynchronous task at rootserver. Range: [1, 10]"
	rootservice_async_task_thread_count: int & >=1 & <=10 | *4

	// "the size of the queue for all asynchronous tasks at rootserver. Range: [8, 131072] in integer"
	rootservice_async_task_queue_size: int & >=8 & <=131072 | *16384

	// "specifies whether a \\'system\\' table is allowed be to created manually. Value: True: allowed; False: not allowed"
	enable_sys_table_ddl: string | *"False"

	// "the time interval between any two heartbeats beyond which a server is considered to be \\'permanently\\' offline. Range: [20s,+∞)"
	server_permanent_offline_time: string | *"3600s"

	// "the duration in which the observer stays in the \\'block_migrate_in\\' status, which means it is not allowed to migrate into the server. Range: [1s, +∞)"
	migration_disable_time: string | *"3600s"

	// "the time interval between schedules of a task that examines the __all_server table. Range: [1s, +∞)"
	server_check_interval: string | *"30s"

	// "the interval between the schedule of the rootservice restart task while restart failed Range: [100000us, 1m]"
	rootservice_ready_check_interval: string | *"3s"

	// "the number of tablet replica info that will be read by each request on the tablet-related system tables during procedures such as load-balancing, daily merge, election and etc. Range:(0,65536]"
	tablet_meta_table_scan_batch_count: int & >=1 & <=65536 | *999

	// "the time interval that observer compares ls meta table with local ls replica info and make adjustments to ensure the correctness of ls meta table. Range: [1ms,+∞)"
	ls_meta_table_check_interval: string | *"1s"

	// "the time interval that observer compares tablet meta table with local ls replica info and make adjustments to ensure the correctness of tablet meta table. Range: [1m,+∞)"
	tablet_meta_table_check_interval: string | *"30m"

	// "the min observer version"
	min_observer_version: string | *"4.2.1.4"

	// "specifies whether DDL operation is turned on. Value:  True:turned on;  False: turned off"
	enable_ddl: string | *"True"

	// "specifies whether major_freeze function is turned on. Value:  True:turned on;  False: turned off"
	enable_major_freeze: string | *"True"

	// "the time to recycle event history. Range: [1d, 180d]"
	ob_event_history_recycle_interval: string | *"7d"

	// "the time to purge recyclebin. Range: [0m, +∞)"
	"_recyclebin_object_purge_frequency": string | *"10m"

	// "recyclebin object expire time, default 0 that means auto purge recyclebin off. Range: [0s, +∞)"
	recyclebin_object_expire_time: string | *"0s"

	// "the size of disk space used by the log files. Range: [0, +∞)"
	log_disk_size: string | *"0M"

	// "the percentage of disk space used by the log files. Range: [0,99] in integer;only effective when parameter log_disk_size is 0;when log_disk_percentage is 0: a) if the data and the log are on the same disk, means log_disk_percentage = 30 b) if the data and the log are on the different disks, means log_disk_perecentage = 90"
	log_disk_percentage: int & >=0 & <=99 | *0

	// "time to tolerate log disk io delay, after that, the disk status will be set warning. Range: [1s,300s]"
	log_storage_warning_tolerance_time: string | *"5s"

	// "system utilization should not be large than resource_hard_limit"
	resource_hard_limit: int & >=100 & <=10000 | *100

	// "specifies whether the auto-replication is turned on. Value:  True:turned on  False: turned off"
	enable_rereplication: string | *"True"

	// "specifies the tolerance (in percentage) of the unbalance of the disk space utilization among all units. The average disk space utilization is calculated by dividing the total space by the number of units. For example, say balancer_tolerance_percentage is set to 10 and a tenant has two units in the system, the average disk use for each unit should be about the same, thus 50% of the total value. Therefore, the system will start a rebalancing task when any unit\\'s disk space goes beyond +-10% of the average usage. Range: [1, 100) in percentage"
	balancer_tolerance_percentage: int & >=1 & <=99 | *10

	// "the time to execute the load-balancing task before it is terminated. Range: [1s, +∞)"
	balancer_task_timeout: string | *"20m"

	// "the time interval between logging the load-balancing task\\'s statistics. Range: [1s, +∞)"
	balancer_log_interval: string | *"1m"

	// "specifies whether the balance events are turned on or turned off."
	"__balance_controller": string

	// "the min memory value which is specified for a full resource pool."
	"__min_full_resource_pool_memory": int & >=1073741824 | *5368709120

	// "disk water level to determine server balance strategy"
	server_balance_critical_disk_waterlevel: int & >=0 & <=100 | *80

	// "specifies the tolerance (in percentage) of the unbalance of the disk space utilization among all servers. The average disk space utilization is calculated by dividing the total space by the number of servers. server balancer will start a rebalancing task when the deviation between the average usage and some server load is greater than this tolerance Range: [1, 100] in percentage"
	server_balance_disk_tolerance_percent: int & >=1 & <=100 | *1

	// "specifies the tolerance (in percentage) of the unbalance of the cpu/memory utilization among all servers. The average cpu/memory utilization is calculated by dividing the total cpu/memory by the number of servers. server balancer will start a rebalancing task when the deviation between the average usage and some server load is greater than this tolerance Range: [1, 100] in percentage"
	server_balance_cpu_mem_tolerance_percent: int & >=1 & <=100 | *5

	// "Scan interval for every detector node, smaller interval support larger deadlock scale, but cost more system resource. 0ms means disable deadlock, default value is 30ms. Range:[0ms, 1s]"
	"_lcl_op_interval": string | *"30ms"

	// "specifies whether sys unit standalone deployment is turned on. Value:  True:turned on  False: turned off"
	enable_sys_unit_standalone: string | *"False"

	// "the time interval between the retries in case of failure during a transaction\\'s two-phase commit phase. Range: [1ms,5000ms]"
	trx_2pc_retry_interval: string | *"100ms"

	// "the time given to the commit log synchronization between a leader and its followers before a \\'warning\\' message is printed in the log file.  Range: [1ms,1000ms]"
	clog_sync_time_warn_threshold: string | *"100ms"

	// "maximum update count before trigger row compaction. Range: [1, 6400]"
	row_compaction_update_limit: int & >=1 & <=6400 | *6

	// "specifies whether error raised from the memtable replay checksum validation can be ignored. Value: True:ignored; False: not ignored"
	ignore_replay_checksum_error: string | *"False"

	// "Force: always verify; Optional: verify when rpc_checksum non-zero; Disable: ignore verify"
	"_rpc_checksum": string | *"Force"

	// "transaction rpc timeout(s). Range: [0s, 3600s]"
	"_ob_trans_rpc_timeout": string | *"3s"

	// "get gts ahead interval. Range: [0s, 1s]"
	"_ob_get_gts_ahead_interval": string | *"0s"

	// "the time during which a RPC request is permitted to execute before it is terminated"
	rpc_timeout: string | *"2s"

	// "enable pkt-nio, the new RPC frameworkValue:  True:turned on;  False: turned off"
	"_enable_pkt_nio": string | *"True"

	// "the max rpc packet size when sending RPC or responding RPC results"
	"_max_rpc_packet_size": string | *"2047MB"

	// "the max bandwidth in bytes per second that can be occupied by the sum of the synchronizing log from primary cluster of all servers in the standby cluster"
	standby_fetch_log_bandwidth_limit: string | *"0MB"

	// "the max bandwidth in bytes per second that can be occupied by the synchronizing log from primary cluster of a server in standby cluster"
	"_server_standby_fetch_log_bandwidth_limit": string | *"0MB"

	// "expiration time for virtual table location info in partition location cache. Range: [1s, +∞)"
	virtual_table_location_cache_expire_time: string | *"8s"

	// "the number of threads for fetching location cache in the background. Range: (1, 64]"
	location_refresh_thread_count: int & >=2 & <=64 | *2

	// "the maximum number of the tasks for fetching location cache concurrently. Range: [1, 1000]"
	location_fetch_concurrency: int & >=1 & <=1000 | *20

	// "the time interval in which no request for location cache renewal will be executed. The default value is 100 milliseconds. [0s, +∞)"
	location_cache_refresh_min_interval: string | *"100ms"

	// "all server addr in cluster"
	all_server_list: string

	// "The timeout used for refreshing location cache by RPC. Range: [1ms, +∞)"
	location_cache_refresh_rpc_timeout: string | *"500ms"

	// "The timeout used for refreshing location cache by SQL. Range: [1ms, +∞)"
	location_cache_refresh_sql_timeout: string | *"1s"

	// "Polling period of auto refresh tablet location service. When the value is 0, it means shutting down related service. Range: [0s, +∞)"
	"_auto_refresh_tablet_location_interval": string | *"10m"

	// "Maximum number of tablets broadcasted per second by a single observer. When the value is 0, it means shutting down related logic."
	"_auto_broadcast_tablet_location_rate_limit": int & >=0 & <=100000 | *10000

	// "tablet ls cache priority. Range:[1, )"
	tablet_ls_cache_priority: int & >=1 | *1000

	// "tab stat cache priority. Range:[1, )"
	opt_tab_stat_cache_priority: int & >=1 | *1

	// "index cache priority. Range:[1, )"
	index_block_cache_priority: int & >=1 | *10

	// "user block cache priority. Range:[1, )"
	user_block_cache_priority: int & >=1 | *1

	// "user row cache priority. Range:[1, )"
	user_row_cache_priority: int & >=1 | *1

	// "bf cache priority. Range:[1, )"
	bf_cache_priority: int & >=1 | *1

	// "bf cache miss count threshold, 0 means disable bf cache. Range:[0, )"
	bf_cache_miss_count_threshold: int & >=0 | *100

	// "fuse row cache priority. Range:[1, )"
	fuse_row_cache_priority: int & >=1 | *1

	// "storage meta cache priority. Range:[1, )"
	storage_meta_cache_priority: int & >=1 | *10

	// "io timeout for data storage, Range [1s,600s]. The default value is 10s"
	"_data_storage_io_timeout": string | *"10s"

	// "time to tolerate disk read failure, after that, the disk status will be set warning. Range [1s,300s]. The default value is 5s"
	data_storage_warning_tolerance_time: string | *"5s"

	// "time to tolerate disk read failure, after that, the disk status will be set error. Range [10s,7200s]. The default value is 300s"
	data_storage_error_tolerance_time: string | *"300s"

	// "the safe use percentage of data diskRange: [50,100] in integer"
	data_disk_usage_limit_percentage: int & >=50 & <=100 | *90

	// "the net percentage of sys background net. Range: [0, 100] in integer"
	sys_bkgd_net_percentage: int & >=0 & <=100 | *60

	// "The number of io threads on each disk. The default value is 8. Range: [2,32] in even integer"
	disk_io_thread_count: int & >=2 & <=32 | *8

	// "enable compaction diagnose functionValue:  True:turned on;  False: turned off"
	"_enable_compaction_diagnose": string | *"False"

	// "force the specified partition to major without encoding row store, only for emergency!"
	"_force_skip_encoding_partition_id": string

	// "[0B,)the trigger remaining data size within transaction for immediate logging, 0B represents not trigger immediate loggingRange: [0B, total size of memory]"
	"_private_buffer_size": string | *"16K"

	// "trigger max callback count allowed within transaction for durable callback checkpoint, 0 represents not allow durable callbackRange: [0, not limited callback count"
	"_fast_commit_callback_count": int & >=0 | *10000

	// "per row update counts threshold to trigger minor freeze for tables with ELR optimization"
	"_ob_elr_fast_freeze_threshold": int & >=10000 | *500000

	// "retry num limit during migration. Range: [3, 100] in integer"
	sys_bkgd_migration_retry_num: int & >=3 & <=100 | *3

	// "the timeout for migration change member list retry. The default value is 20s. Range: [0s,24h]"
	sys_bkgd_migration_change_member_list_timeout: string | *"20s"

	// "default tablet size, has to be a multiple of 2M"
	tablet_size: string | *"128M"

	// "check cycle of db data. Range: [0, 360] in integer. Unit: day. 0: check nothing. 1-360: check all data every specified days. The default value is 20. The real check cycle maybe longer than the specified value for insuring performance."
	builtin_db_data_verify_cycle: int & >=0 & <=360 | *20

	// "specify what kind of verification should be done when merging micro block. 0 : no verification will be done 1 : verify encoding algorithm, encoded micro block will be read to ensure data is correct 2 : verify encoding and compression algorithm, besides encoding verification, compressed block will be decompressed to ensure data is correct3 : verify encoding, compression algorithm and lost write protect"
	micro_block_merge_verify_level: int & >=0 & <=3 | *2

	// "specify what kind of verification should be done when migrating macro block. 0 : no verification will be done 1 : physical verification2 : logical verification"
	"_migrate_block_verify_level": int & >=0 & <=2 | *1

	// "specify interval of cache background wash"
	"_cache_wash_interval": string | *"200ms"

	// "to be removed"
	dtl_buffer_size: string | *"64K"

	// "to be removed"
	px_task_size: string | *"2M"

	// "max elr dependent transaction count"
	"_max_elr_dependent_trx_count": int & >=0 | *0

	// "max memory size which can be used by libeasy. The default value is 4G. Range: [256M,)"
	"__easy_memory_limit": string | *"4G"

	// "the size of routine execution stackRange: [512K, 20M]"
	stack_size: string | *"512K"

	// "the percentage of easy memory reserved size. The default value is 0. Range: [0,100]"
	"__easy_memory_reserved_percentage": int & >=0 & <=100 | *0

	// "max parallel execution pipeline depth, range: [2,3]"
	"_px_max_pipeline_depth": int & >=2 & <=3 | *2

	// "enable server SSL support. Takes effect after ca/cert/key file is configured correctly. "
	ssl_client_authentication: string | *"False"

	// "Whether this server uses ipv6 address"
	use_ipv6: string | *"False"

	// "the config parameter of ddl timeoutRange: [1s, +∞)"
	"_ob_ddl_timeout": string | *"1000s"

	// "the px bloom filter false-positive rate.the default value is 1, range: [0,100]"
	"_bloom_filter_ratio": int & >=0 & <=100 | *35

	// "the time interval between the schedules of physical restore task. Range: [10s, +∞)"
	"_restore_idle_time": string | *"1m"

	// "the time interval between the schedules of physical backup task. Range: [10s, +∞)"
	"_backup_idle_time": string | *"5m"

	// "control if enable prepared statement"
	"_ob_enable_prepared_statement": string | *"True"

	// "specifies the upgrade stage. NONE: in non upgrade stage, PREUPGRADE: in pre upgrade stage, DBUPGRADE: in db uprade stage, POSTUPGRADE: in post upgrade stage. "
	"_upgrade_stage": string | *"NONE"

	// "OFF: disabled, REPORT: check leaked cache object infos only, AUTO: check and release leaked cache obj."
	"_ob_plan_cache_gc_strategy": string | *"REPORT"

	// "wether turn plan cache ref count diagnosis on"
	"_enable_plan_cache_mem_diagnosis": string | *"False"

	// "the time interval between the schedules of schema history recyle task. Range: [0s, +∞)"
	schema_history_recycle_interval: string | *"10m"

	// "whether turn on oracle privilege check "
	"_enable_oracle_priv_check": string | *"True"

	// "used to manage the database's use of large pages, values: false, true, only"
	use_large_pages: string | *"false"

	// "when using the external key management center for ssl, this parameter will store some key management information"
	ssl_external_kms_info: string

	// "when rpc need use ssl, we will use it to store invited server ipv4 during grayscale change.when it is finish, it can use ALL instead of all server ipv4"
	"_ob_ssl_invited_nodes": string | *"NONE"

	// "specifies the threshold value for a xa record to be considered as obsolete"
	"_xa_gc_timeout": string | *"24h"

	// "specifies the scan interval of the gc worker"
	"_xa_gc_interval": string | *"1h"

	// "enable keepalive for each TCP connection."
	"_enable_easy_keepalive": string | *"True"

	// "enable ratelimit between regions for RPC connection."
	enable_ob_ratelimit: string | *"False"

	// "the time interval to update observer's maximum bandwidth to a certain region. "
	ob_ratelimit_stat_period: string | *"1s"

	// "enable TCP keepalive for the TCP connection of sql protocol. Take effect for new established connections."
	enable_tcp_keepalive: string | *"true"

	// "The time (in seconds) the connection needs to remain idle before TCP starts sending keepalive probe. Take effect for new established connections. Range: [1s, +∞]"
	tcp_keepidle: string | *"7200s"

	// "The time (in seconds) between individual keepalive probes. Take effect for new established connections. Range: [1s, +∞]"
	tcp_keepintvl: string | *"6s"

	// "The maximum number of keepalive probes TCP should send before dropping the connection. Take effect for new established connections. Range: [1,+∞)"
	tcp_keepcnt: int & >=1 | *10

	// "Set send bloom filter slice sizeRange: [1, +∞)"
	"_send_bloom_filter_size": int & >=1 | *1024

	// "enable px task ordered coord"
	"_enable_px_ordered_coord": string | *"false"

	// "specify whether resource limit check is turned on"
	"_enable_resource_limit_spec": string | *"False"

	// "this parameter encodes some resource limit parameters to json"
	"_resource_limit_spec": string | *"auto"

	// "specifies whether to punch whole when free blocks in block_file"
	"_enable_block_file_punch_hole": string | *"False"

	// "specifies whether to enable tracing session leak"
	"_enable_trace_session_leak": string | *"False"

	// "control if enable fast parser"
	"_ob_enable_fast_parser": string | *"True"

	// "The execution interval of the task of maintaining the dependency of the object. Range: [0, 10s]"
	"_ob_obj_dep_maint_task_interval": string | *"1ms"

	// "control if enable encode sort"
	"_enable_newsort": string | *"True"

	// "limits the total number of (namespace, attribute) pairs used by all application contexts in the user session."
	"_session_context_size": int & >=0 & <=2147483647 | *10000

	// "specifies whether SQL serial network is turned on. Turned on to support mysql_send_long_dataThe default value is FALSE. Value: TRUE: turned on FALSE: turned off"
	"_enable_new_sql_nio": string | *"true"

	// "When the hold of observer tenant is over the system_memory, print ERROR with False, or WARN with True"
	"_ignore_system_memory_over_limit_error": string | *"False"

	// "the number of threads for sql login request. Range: [0, 32] in integer, 0 stands for use default thread count defined in TG.the default thread count for login request in TG is normal:6 mini-mode:2"
	sql_login_thread_count: int & >=0 & <=32 | *0

	// "the number of global mysql I/O threads. Range: [0, 64] in integer, default value is 0, 0 stands for old value GCONF.net_thread_count"
	sql_net_thread_count: int & >=0 & <=64 | *0

	// "Dispatch mysql request to each tenant with True, or disable with False"
	"_enable_tenant_sql_net_thread": string | *"True"

	// "This parameter will store the mapping of endpoint and tenant"
	"_endpoint_tenant_mapping": string

	// "the timeout for backup/migrate advance checkpoint Range: [10s,180m]"
	"_advance_checkpoint_timeout": string | *"30m"

	// "when set to false, cgroup will not init; when set to true but cgroup root dir is not ready, print ERROR"
	enable_cgroup: string | *"True"

	// "time interval for auto periodic flush plan cache. Range: [0s, +∞)"
	"_ob_plan_cache_auto_flush_interval": string | *"0s"

	// "Enable or disable direct path load"
	"_ob_enable_direct_load": string | *"True"

	// "Enable or disable dblink"
	enable_dblink: string | *"True"

	// "enables protocol layer diagnosis. The default value is False."
	"_enable_protocol_diagnose": string | *"True"

	// "load the engine that meet the security classification requirement to encrypt data.  default NONE"
	"_load_tde_encrypt_engine": string | *"NONE"

	// "the IP address of the machine on which the ObServer will be installed"
	local_ip: string

	// "the unique id that been assigned by rootservice for each observer in cluster, default: 0 (invalid id), Range: [1, 18446744073709551615]"
	observer_id: int & >=1 & <=18446744073709551615 | *0

	// "Enable the fast reclaim function through PX tasks deteting for survival by detect manager. The default value is True."
	"_enable_px_fast_reclaim": string | *"True"

	// "specifies whether to forbid non-reserved user to modify reserved users"
	"_enable_reserved_user_dcl_restriction": string | *"False"

	// "specifies rpc client authentication method. NONE: without authentication. SSL_NO_ENCRYPT: authentication by SSL handshake but not encrypt the communication channel. SSL_IO: authentication by SSL handshake and encrypt the communication channel"
	rpc_client_authentication_method: string | *"NONE"

	// "specifies rpc server authentication method. ALL: support all authentication methods. NONE: without authentication. SSL_NO_ENCRYPT: authentication by SSL handshake but not encrypt the communication channel. SSL_IO: authentication by SSL handshake and encrypt the communication channel"
	rpc_server_authentication_method: string | *"ALL"

	// "Decide whether to let the backtrace function take effect"
	"_enable_backtrace_function": string | *"True"

	// "Force 500 memory for explicit allocation"
	"_force_explict_500_malloc": string | *"False"

	// "the time interval between the schedules of schema memory recycle task. 0 means only turn off gc current allocator, and other schema memory recycle task's interval will be 15mins. Range [0s,)"
	"_schema_memory_recycle_interval": string | *"15m"

	// "force malloc even if tenant does not exist in observer"
	"_force_malloc_for_absent_tenant": string | *"False"

	// "SQL SSL control options, used to specify the minimum SSL/TLS version number. values: none, TLSv1, TLSv1.1, TLSv1.2, TLSv1.3"
	sql_protocol_min_tls_version: string | *"none"

	// "_obkv_feature_mode is a option list to control specified OBKV features on/off."
	"_obkv_feature_mode": string

	...
}

configuration: #OBParameters & {

}
