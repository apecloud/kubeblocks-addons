apiVersion: apps.kubeblocks.io/v1alpha1
kind: ComponentDefinition
metadata:
  name: openldap-{{ .Chart.Version }}
  labels:
    {{- include "openldap.labels" . | nindent 4 }}
spec:
  provider: Community
  description: {{ .Chart.Description }}
  serviceKind: {{ .Chart.Name }}
  serviceVersion: {{ .Chart.AppVersion }}
  runtime:
    containers:
      - name: openldap-container
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ default .Values.image.pullPolicy "IfNotPresent" }}
        volumeMounts:
          - mountPath: /var/lib/ldap
            name: data
            subPath: ldap-data
          - mountPath: /etc/ldap/slapd.d
            name: data
            subPath: ldap-config
        ports:
          - containerPort: 389
            name: ldap
        lifecycle:
          postStart:
            exec:
              command:
                - bin/sh
                - -c
                - |
                  replicas=$(eval echo ${KB_POD_LIST} | tr ',' '\n')
                  if [ ${#replica[@]} -gt 1 ]; then
                    export LDAP_REPLICATION_CONFIG_SYNCPROV="binddn=\"cn=admin,cn=config\" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase=\"cn=config\" type=refreshAndPersist retry=\"60 +\" timeout=1"
                    export LDAP_REPLICATION_DB_SYNCPROV="binddn=\"cn=admin,$LDAP_BASE_DN\" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase=\"$LDAP_BASE_DN\" type=refreshAndPersist interval=01:00:00:10 retry=\"60 +\" timeout=1"
                    export LDAP_REPLICATION_HOSTS="#PYTHON2BASH:['ldap://${KB_CLUSTER_NAME}-${KB_COMP_NAME}-0.${KB_CLUSTER_NAME}-${KB_COMP_NAME}-headless', 'ldap://${KB_CLUSTER_NAME}-.${KB_COMP_NAME}-1.${KB_CLUSTER_NAME}-${KB_COMP_NAME}-headless']"
                  fi
        env:
          - name: LDAP_ORGANISATION
            value: "{{ .Values.ldap.organisation }}"
          - name: LDAP_DOMAIN
            value: "{{ .Values.ldap.domain }}"
          - name: LDAP_CONFIG_PASSWORD
            value: "{{ .Values.ldap.adminPassword }}"
          - name: LDAP_ADMIN_PASSWORD
            value: "{{ .Values.ldap.adminPassword }}"
          - name: LDAP_REPLICATION
            value: "{{ .Values.ldap.replication }}"
          - name: LDAP_TLS
            value: "false"
          - name: LDAP_REMOVE_CONFIG_AFTER_SETUP
            value: "false"
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
  volumes:
    - name: data