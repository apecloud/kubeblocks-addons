apiVersion: apps.kubeblocks.io/v1
kind: ComponentDefinition
metadata:
  name: {{ include "hive.server2CompDef" . }}
  labels:
    {{- include "hive.labels" . | nindent 4 }}
  annotations:
    {{- include "hive.annotations" . | nindent 4 }}
spec:
  provider: kubeblocks
  description: {{ .Chart.Description }}
  serviceKind: hive-server2
  podManagementPolicy: Parallel
  services:
    - name: default
      spec:
        ports:
          - name: thrift
            port: 10000
            targetPort: thrift
          - name: http
            port: 10001
            targetPort: http
          - name: web
            port: 10002
            targetPort: web
    - name: lb-advertised
      serviceName: lb-advertised
      spec:
        ## the type can override in cluster componentSpec services, type can loadBalancer
        type: LoadBalancer
        # allocateLoadBalancerNodePorts: false
        externalTrafficPolicy: Cluster
        ports:
          - name: thrift
            port: 10000
            targetPort: thrift
          - name: web
            port: 10002
            targetPort: web
      podService: true
      disableAutoProvision: true
  systemAccounts:
    - name: admin
      initAccount: true
      passwordGenerationPolicy:
        length: 10
        numDigits: 5
        numSymbols: 0
        letterCase: MixedCases
  serviceRefDeclarations:
    - name: hadoopZookeeper
      serviceRefDeclarationSpecs:
        - serviceKind: zookeeper
          serviceVersion: "^*"
  hostNetwork:
    containerPorts:
      - container: hive-server2
        ports:
          - thrift
          - http
          - web
  runtime:
    initContainers:
      - name: init-jmx-exporter
        volumeMounts:
          - name: metadata
            mountPath: /hive
        {{- include "hive.initJmxExporterContainer" . | nindent 8 }}
    containers:
      - name: hive-server2
        imagePullPolicy: {{ default "IfNotPresent" .Values.hive.image.pullPolicy }}
        command:
          - /bin/bash
          - -c
          - |
            /kubeblocks/scripts/start-hiveserver2.sh
        ports:
          - containerPort: 10000
            name: thrift
          - containerPort: 10001
            name: http
          - containerPort: 10002
            name: web
          - containerPort: {{ .Values.jmxExporterPort }}
            name: jmx-exporter
        env:
          - name: DEBUG_MODEL
            value: "false"
          - name: CURRENT_POD
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 10
          exec:
            command:
              - bash
              - -c
              - |
                python /kubeblocks/scripts/probe-server2.py
        volumeMounts:
          - name: metadata
            mountPath: /hive
          - name: hive-server2-config
            mountPath: /hive/base-conf/hive-site.xml
            subPath: hive-site.xml
          - name: hive-server2-config
            mountPath: /hive/base-conf/hive-log4j2.properties
            subPath: hive-log4j2.properties
          - name: hadoop-core-config
            mountPath: /hadoop/conf/core-site.xml
            subPath: core-site.xml
          - name: hadoop-hdfs-config
            mountPath: /hadoop/conf/hdfs-site.xml
            subPath: hdfs-site.xml
          - name: hadoop-yarn-config
            mountPath: /hadoop/conf/yarn-site.xml
            subPath: yarn-site.xml
          - name: hadoop-yarn-config
            mountPath: /hadoop/conf/log4j.properties
            subPath: log4j.properties
          - name: mapred-site-config
            mountPath: /hadoop/conf/mapred-site.xml
            subPath: mapred-site.xml
          - name: hive-scripts
            mountPath: /kubeblocks/scripts
          - name: hive-server2-config
            mountPath: /hive/base-conf/jmx-exporter.yaml
            subPath: jmx-exporter.yaml
        #securityContext:
        #  runAsUser: 10000
        #  runAsGroup: 1000
        #  runAsNonRoot: true
        #  privileged: false
        #  allowPrivilegeEscalation: false
        # capabilities:
        #    drop: [ "ALL" ]
        # seccompProfile:
        #    type: "RuntimeDefault"
    securityContext:
      fsGroupChangePolicy: Always
      fsGroup: 1000
    updateStrategy: BestEffortParallel
  vars:
    - name: ENABLE_JMX_EXPORTER
      value: {{ .Values.enableJmxExporter | quote }}
    - name: JMX_EXPORTER_PORT
      value: "{{ .Values.jmxExporterPort }}"
    - name: HOME
      value: /home/hadoop
    - name: CLUSTER_DOMAIN
      value: {{ .Values.clusterDomain | default "cluster.local" }}
    - name: CLUSTER_NAMESPACE
      valueFrom:
        clusterVarRef:
          namespace: Required
    - name: LB_ADVERTISED_HOST
      valueFrom:
        serviceVarRef:
          name: lb-advertised
          optional: true
          loadBalancer: Required
          host: Required
    - name: COMPONENT_NAME
      valueFrom:
        componentVarRef:
          optional: true
          componentName: Required
    - name: THRIFT_HOST_NETWORK_PORT
      valueFrom:
        hostNetworkVarRef:
          optional: true
          container:
            name: hive-server2
            port:
              name: thrift
              option: Required
    - name: THRIFT_PORT
      value: "10000"
      expression: {{ `{{if ne (index . "THRIFT_HOST_NETWORK_PORT") ""}}{{.THRIFT_HOST_NETWORK_PORT}}{{else}}{{.THRIFT_PORT}}{{end}}` | toYaml }}
    - name: HTTP_HOST_NETWORK_PORT
      valueFrom:
        hostNetworkVarRef:
          optional: true
          container:
            name: hive-server2
            port:
              name: http
              option: Required
    - name: HTTP_PORT
      value: "10001"
      expression: {{ `{{if ne (index . "HTTP_HOST_NETWORK_PORT") ""}}{{.HTTP_HOST_NETWORK_PORT}}{{else}}{{.HTTP_PORT}}{{end}}` | toYaml }}
    - name: WEB_HOST_NETWORK_PORT
      valueFrom:
        hostNetworkVarRef:
          optional: true
          container:
            name: hive-server2
            port:
              name: web
              option: Required
    - name: WEB_PORT
      value: "10002"
      expression: {{ `{{if ne (index . "WEB_HOST_NETWORK_PORT") ""}}{{.WEB_HOST_NETWORK_PORT}}{{else}}{{.WEB_PORT}}{{end}}` | toYaml }}
    - name: ZOOKEEPER_ENDPOINTS
      valueFrom:
        serviceRefVarRef:
          name: hadoopZookeeper
          optional: true
          podFQDNs: Required
      expression: {{ `{{ $hosts := splitList "," .ZOOKEEPER_ENDPOINTS }}{{ range $idx, $host := $hosts }}{{ $host }}:2181{{ if lt $idx (sub (len $hosts) 1) }},{{ end }}{{ end }}` | toYaml }}
    - name: ADMIN_USER
      valueFrom:
        credentialVarRef:
          name: admin
          optional: false
          username: Required
    - name: ADMIN_PASSWORD
      valueFrom:
        credentialVarRef:
          name: admin
          optional: false
          password: Required
    - name: CLUSTER_NAME
      valueFrom:
        clusterVarRef:
          clusterName: Required
    - name: METASTORE_ENDPOINTS
      valueFrom:
        componentVarRef:
          compDef: hive-metastore
          optional: true
          podFQDNs: Required
      expression: {{ `{{ $hosts := splitList "," .METASTORE_ENDPOINTS }}{{ range $idx, $host := $hosts }}thrift://{{ $host }}:9083{{ if lt $idx (sub (len $hosts) 1) }},{{ end }}{{ end }}` | toYaml }}
  configs:
    - name: config
      namespace: {{ .Release.Namespace }}
      template: hive-server2-config-template
      volumeName: hive-server2-config
      defaultMode: 0755
      externalManaged: false
      restartOnFileChange: true
  scripts:
    - name: scripts
      namespace: {{ .Release.Namespace }}
      template: hive-scripts
      volumeName: hive-scripts
      defaultMode: 0755
