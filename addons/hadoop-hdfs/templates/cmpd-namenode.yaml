apiVersion: apps.kubeblocks.io/v1alpha1
kind: ComponentDefinition
metadata:
  name: hdfs-namenode
  labels:
    {{- include "hadoop-hdfs.labels" . | nindent 4 }}
spec:
  provider: kubeblocks
  description: {{ .Chart.Description }}
  serviceKind: hdfs-namenode
  services:
    - name: default
      spec:
        ports:
          - name: fs
            port: 8020
          - name: http
            port: 9870
  serviceRefDeclarations:
    - name: hadoopZookeeper
      serviceRefDeclarationSpecs:
        - serviceKind: zookeeper
          serviceVersion: "^*"
  runtime:
    initContainers:
      - name: hadoop-common
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 0
        command:
          - /bin/bash
        args:
          - -ec
          - |
            cp -r /opt/software/hadoop-3.3.4/* /opt/kubeemr/hadoop/hadoop-3.3.4
            mkdir -p /hadoop/dfs/metadata
            mkdir -p /hadoop/dfs/journal
            chown -R 10000:1000 /hadoop
            chown -R 10000:1000 /opt/kubeemr/hadoop/hadoop-3.3.4
        volumeMounts:
          - name: hadoop-common
            mountPath: /opt/kubeemr/hadoop/hadoop-3.3.4
          - name: metadata-dir
            mountPath: /hadoop
    containers:
      - name: hdfs-namenode
        imagePullPolicy: {{ default "IfNotPresent" .Values.nameNode.image.pullPolicy }}
        ports:
          - containerPort: 8020
            name: fs
          - containerPort: 9870
            name: http
        env:
          - name: DEBUG_MODEL
            value: "false"
          - name: CURRENT_POD
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          exec:
            command:
              - /bin/bash
              - /kubeblocks/scripts/check-name-status.sh
        readinessProbe:
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          exec:
            command:
              - /bin/bash
              - /kubeblocks/scripts/check-name-status.sh
        volumeMounts:
          - name: hadoop-common
            mountPath: /opt/kubeemr/hadoop/hadoop-3.3.4
          - name: metadata-dir
            mountPath: /hadoop
          - name: hadoop-core-config
            mountPath: /hadoop/conf/core-site.xml
            subPath: core-site.xml
          - name: namenode-config
            mountPath: /hadoop/conf/hdfs-site.xml
            subPath: hdfs-site.xml
          - name: namenode-config
            mountPath: /hadoop/conf/log4j.properties
            subPath: log4j.properties
          - name: scripts
            mountPath: /kubeblocks/scripts
        securityContext:
          runAsUser: 10000
          runAsGroup: 1000
          runAsNonRoot: true
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop: [ "ALL" ]
          seccompProfile:
            type: "RuntimeDefault"
    securityContext:
      fsGroupChangePolicy: Always
      fsGroup: 1000
    updateStrategy: BestEffortParallel
    volumes:
      - name: hadoop-common
        emptyDir: {}
  vars:
    - name: JOURNALNODE_POD_FQDN_LIST
      valueFrom:
        componentVarRef:
          compDef: hdfs-journalnode
          optional: false
          podFQDNs: Required
    - name: ZOOKEEPER_ENDPOINTS
      valueFrom:
        serviceRefVarRef:
          name: hadoopZookeeper
          endpoint: Required
  configs:
    - name: config
      namespace: {{ .Release.Namespace }}
      templateRef: namenode-config-template
      # constraintRef: namenode-config-constraints
      volumeName: namenode-config
      defaultMode: 0755
  scripts:
    - name: {{ include "hadoop-hdfs.name" . }}-scripts
      templateRef: {{ include "hadoop-hdfs.name" . }}-scripts
      volumeName: scripts
      namespace: {{ .Release.Namespace }}
      defaultMode: 0755


{{/*  roles:*/}}
{{/*    - name: active*/}}
{{/*      serviceable: true*/}}
{{/*      writable: true*/}}
{{/*    - name: standby*/}}
{{/*      serviceable: true*/}}
{{/*      writable: false*/}}
{{/*  lifecycleActions:*/}}
{{/*    roleProbe:*/}}
{{/*      builtinHandler: custom*/}}
{{/*      container: hdfs-namenode*/}}
{{/*      customHandler:*/}}
{{/*        exec:*/}}
{{/*          command:*/}}
{{/*            - /bin/bash*/}}
{{/*            - -c*/}}
{{/*            - |*/}}
{{/*              STAT=$(curl -s "http://$KB_POD_IP:9870/jmx?qry=Hadoop:service=NameNode,name=NameNodeStatus" | grep -o '"State" : "[^"]*"' | awk -F'"' '{print $4}')*/}}

{{/*              if [[ "$STAT" == "active" ]]; then*/}}
{{/*                echo -n "active"*/}}
{{/*              elif [[ "$STAT" == "standby" ]]; then*/}}
{{/*                echo -n "standby"*/}}
{{/*              else*/}}
{{/*                echo -n "unknown"*/}}
{{/*              fi*/}}
