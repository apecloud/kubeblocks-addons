apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: {{ include "doris.name" . }}
  labels:
    {{- include "doris.labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  type: doris
  connectionCredential:
    username: root
    password: "$(RANDOM_PASSWD)"
    endpoint: "$(SVC_FQDN):$(SVC_PORT_query-port)"
    host: "$(SVC_FQDN)"
    port: "$(SVC_PORT_query-port)"
  componentDefs:
    - name: doris-fe
      characterType: doris-fe
      description: |-
        Apache Doris is a high-performance, real-time analytical database based on MPP architecture. It is known for its speed and ease of use. It only needs sub-second
        response time to return query results under massive data, which can not only support high-concurrency point query scenarios, but also support high-throughput complex
        analysis scenarios. Based on this, Apache Doris can better meet the report analysis, AD hoc query, unified warehouse construction, data lake federated query
        acceleration and other use scenarios, users can build user behavior analysis, AB experiment platform, log retrieval analysis, user portrait analysis, order analysis and
        other applications on this.
      workloadType: Stateful
      monitor:
        builtIn: false
        exporterConfig:
          scrapePort: 8030
          scrapePath: "/metrics"
      configSpecs:
        - name: doris-fe-conf-configuration
          templateRef: {{ include "doris.name" . }}-fe-conf
          constraintRef: {{ include "doris.name" . }}-fe-config-constraints
          volumeName: conf
          namespace: {{ .Release.Namespace }}
        - name: doris-fe-root-script
          templateRef: {{ include "doris.name" . }}-fe-root-script
          volumeName: update-root
          namespace: {{ .Release.Namespace }}
          defaultMode: 0755
      service:
        ports:
          - name: http-port
            targetPort: http-port
            port: 8030
          - name: rpc-port
            targetPort: rpc-port
            port: 9020
          - name: query-port
            targetPort: query-port
            port: 9030
          - name: edit-log-port
            targetPort: edit-log-port
            port: 9010
      volumeTypes:
        - name: data
          type: data
      podSpec:
        securityContext:
          fsGroup: 0
        volumes:
          - name: kube
            hostPath:
              path: /root/.kube/config
        containers:
          - name: doris-fe
            env:
              - name: APP_NAMESPACE
                value: "$(KB_NAMESPACE)"
              - name: BUILD_TYPE
                value: "k8s"
              - name: FE_INIT_NUMBER
                value: {{ .Values.feInitNum | quote }}
              - name: CN_SERVICE
                value: "$(KB_CLUSTER_NAME)-doris-cn-headless"
              - name: CN_STATEFULSET
                value: "$(KB_CLUSTER_NAME)-doris-cn"
              - name: BE_SERVICE
                value: "$(KB_CLUSTER_NAME)-doris-be-headless"
              - name: BE_STATEFULSET
                value: "$(KB_CLUSTER_NAME)-doris-be"
              - name: FE_SERVICE
                value: "$(KB_CLUSTER_NAME)-doris-fe-headless"
              - name: FE_STATEFULSET
                value: "$(KB_CLUSTER_NAME)-doris-fe"
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: password
                    optional: false
            ports:
              - name: http-port
                containerPort: 8030
              - name: rpc-port
                containerPort: 9020
              - name: query-port
                containerPort: 9030
              - name: edit-log-port
                containerPort: 9010
            volumeMounts:
              - name: conf
                mountPath: /opt/apache-doris/fe/conf
              - name: kube
                mountPath: /root/.kube/config
                readOnly: true
              - name: data
                mountPath: /opt/apache-doris/fe/doris-meta
              - name: update-root
                mountPath: /opt/apache-doris/fe/bin/mysql_root.sh
                subPath: mysql_root.sh
          - name: mysql-root-script
            env:
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: password
                    optional: false
            volumeMounts:
              - name: update-root
                mountPath: /opt/apache-doris/fe/bin/mysql_root.sh
                subPath: mysql_root.sh
            command:
              - sh
              - -c
              - |
                /opt/apache-doris/fe/bin/mysql_root.sh > /opt/apache-doris/fe/bin/update_root.log 2>&1 &
                while true; do sleep 1; done
            resources:
              requests:
                cpu: 500m
                memory: 1G
              limits:
                cpu: 1000m
                memory: 2G
    - name: doris-be
      characterType: doris-be
      description: |-
        Mainly responsible for data storage, query plan execution.
      workloadType: Stateful # Consensus
      monitor:
        builtIn: false
        exporterConfig:
          scrapePort: 8040
          scrapePath: "/metrics"
      configSpecs:
        - name: doris-be-conf-configuration
          templateRef: {{ include "doris.name" . }}-be-conf
          constraintRef: {{ include "doris.name" . }}-be-config-constraints
          volumeName: conf
          namespace: {{ .Release.Namespace }}
        - name: doris-be-entrypoint-script
          templateRef: {{ include "doris.name" . }}-entrypoint
          volumeName: be-entrypoint
          namespace: {{ .Release.Namespace }}
          defaultMode: 0755
      volumeTypes:
        - name: data
          type: data
      service:
        ports:
          - name: be-port
            targetPort: be-port
            port: 9060
          - name: webserver-port
            targetPort: webserver-port
            port: 8040
          - name: heartbeat-port
            targetPort: heartbeat-port
            port: 9050
          - name: brpc-port
            targetPort: brpc-port
            port: 8060
      podSpec:
        initContainers:
        - name: sysctl
          imagePullPolicy: IfNotPresent
          command:
          - sh
          - -c
          - |
            set -xe
            DESIRED="2000000"
            CURRENT=$(sysctl -n vm.max_map_count)
            if [ "$DESIRED" -gt "$CURRENT" ]; then
              sysctl -w vm.max_map_count=$DESIRED
            fi
          securityContext:
            runAsUser: 0
            privileged: true
        securityContext:
          fsGroup: 0
        volumes:
          - name: sys
            hostPath:
              path: /etc/pki
        containers:
          - name: doris-be
            command:
              - bash
              - -c
              - entry_point.sh
            env:
              - name: BUILD_TYPE
                value: "k8s"
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: password
                    optional: false
            ports:
              - name: be-port
                containerPort: 9060
              - name: webserver-port
                containerPort: 8040
              - name: heartbeat-port
                containerPort: 9050
              - name: brpc-port
                containerPort: 8060
            volumeMounts:
              - name: conf
                mountPath: /opt/apache-doris/be/conf
              - name: sys
                mountPath: /etc/pki
                readOnly: true
              - name: data
                mountPath: /opt/apache-doris/be/storage
              - name: be-entrypoint
                mountPath: /usr/local/bin/entry_point.sh
                subPath: entry_point.sh
    - name: doris-cn
      characterType: doris-cn
      description: |-
        CN is responsible for compute nodes in Backend
      workloadType: Stateful
      monitor:
        builtIn: false
        exporterConfig:
          scrapePort: 8040
          scrapePath: "/metrics"
      configSpecs:
        - name: doris-cn-conf-configuration
          templateRef: {{ include "doris.name" . }}-cn-conf
          constraintRef: {{ include "doris.name" . }}-cn-config-constraints
          volumeName: conf
          namespace: {{ .Release.Namespace }}
        - name: doris-cn-entrypoint-script
          templateRef: {{ include "doris.name" . }}-entrypoint
          volumeName: cn-entrypoint
          namespace: {{ .Release.Namespace }}
          defaultMode: 0755
      service:
        ports:
          - name: be-port
            targetPort: be-port
            port: 9060
          - name: webserver-port
            targetPort: webserver-port
            port: 8040
          - name: heartbeat-port
            targetPort: heartbeat-port
            port: 9050
          - name: brpc-port
            targetPort: brpc-port
            port: 8060
      podSpec:
        initContainers:
        - name: sysctl
          imagePullPolicy: IfNotPresent
          command:
          - sh
          - -c
          - |
            set -xe
            DESIRED="2000000"
            CURRENT=$(sysctl -n vm.max_map_count)
            if [ "$DESIRED" -gt "$CURRENT" ]; then
              sysctl -w vm.max_map_count=$DESIRED
            fi
          securityContext:
            runAsUser: 0
            privileged: true
        securityContext:
          fsGroup: 0
        volumes:
          - name: sys
            hostPath:
              path: /etc/pki
        containers:
          - name: doris-cn
            command:
              - bash
              - -c
              - entry_point.sh
            env:
              - name: BUILD_TYPE
                value: "k8s"
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: password
                    optional: false
            ports:
              - name: be-port
                containerPort: 9060
              - name: webserver-port
                containerPort: 8040
              - name: heartbeat-port
                containerPort: 9050
              - name: brpc-port
                containerPort: 8060
            volumeMounts:
              - name: conf
                mountPath: /opt/apache-doris/be/conf
              - name: sys
                mountPath: /etc/pki
                readOnly: true
              - name: cn-entrypoint
                mountPath: /usr/local/bin/entry_point.sh
                subPath: entry_point.sh