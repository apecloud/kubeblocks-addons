apiVersion: apps.kubeblocks.io/v1alpha1
kind: ComponentDefinition
metadata:
  name: ch-keeper-24
  labels:
    {{- include "clickhouse.labels" . | nindent 4 }}
  annotations:
    apps.kubeblocks.io/skip-immutable-check: "true"
spec:
  provider: ApeCloud
  description: {{ .Chart.Description }}
  serviceKind: clickhouse-keeper
  serviceVersion: "24.8.3"
  minReadySeconds: 10
  scripts:
    - name: clickhouse-scripts
      templateRef: clickhouse-scripts
      namespace: {{ .Release.Namespace }}
      volumeName: scripts
      defaultMode: 0555
  runtime:
    securityContext:
      fsGroup: 0
      seccompProfile:
        type: RuntimeDefault
    initContainers:
      - name: copy-tools
        imagePullPolicy: {{ .Values.busyboxImage.pullPolicy }}
        command:
          - sh
          - -c
          - |
            cp /bin/nc /shared-tools/
            chmod +x /shared-tools/nc
        volumeMounts:
          - name: shared-tools
            mountPath: /shared-tools

    containers:
      - name: clickhouse
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
        securityContext:
          runAsUser: 0
          privileged: true
        command:
          - bash
          - -c
          - |
            /scripts/bootstrap-keeper.sh
        ports:
          # clickhouse ports
          - name: tcp
            containerPort: 9000
          - name: http
            containerPort: 8123
          - name: https
            containerPort: 8443
          - name: http-intersrv
            containerPort: 9009
          - name: https-intersrv
            containerPort: 9010
          - name: tcp-secure
            containerPort: 9440
          - name: http-metrics
            containerPort: 8001
          # keeper ports
          - name: chk-tcp
            containerPort: 9181
          - name: chk-raft
            containerPort: 9234
          - name: chk-tcp-tls
            containerPort: 9281
          - name: chk-raft-tls
            containerPort: 9444
        volumeMounts:
          - name: data
            mountPath: /bitnami/clickhouse
          - name: config
            mountPath: /opt/bitnami/clickhouse/etc/conf.d
          - name: scripts
            mountPath: /scripts
          - name: client-config
            mountPath: /etc/clickhouse-client
          - name: shared-tools
            mountPath: /shared-tools
    volumes:
      - name: shared-tools
        emptyDir: {}
  services:
    - name: default
      spec:
        ports:
          # clickhouse ports
          - name: http
            targetPort: http
            port: 8123
          - name: https
            targetPort: https
            port: 8443
          - name: tcp
            targetPort: tcp
            port: 9000
          - name: http-intersrv
            targetPort: http-intersrv
            port: 9009
          - name: https-intersrv
            targetPort: https-intersrv
            port: 9010
          # keeper ports
          - name: http-metrics
            targetPort: http-metrics
            port: 8001
          - name: chk-tcp
            targetPort: chk-tcp
            port: 9181
          - name: chk-raft
            targetPort: chk-raft
            port: 9234
          - name: chk-tcp-tls
            targetPort: chk-tcp-tls
            port: 9281
          - name: tcp-secure
            targetPort: tcp-secure
            port: 9440
  logConfigs:
    {{- range $name, $pattern := .Values.logConfigs }}
    - name: {{ $name }}
      filePathPattern: {{ $pattern }}
    {{- end }}
  exporter:
    scrapePath: /metrics
    scrapePort: "8001"
  configs:
    - name: clickhouse-keeper-tpl
      templateRef: clickhouse-keeper-tpl
      constraintRef: clickhouse-constraints
      volumeName: config
      namespace: {{ .Release.Namespace }}
      reRenderResourceTypes:
        - hscale
    - name: clickhouse-client-tpl
      templateRef: clickhouse-client-tpl
      constraintRef: clickhouse-constraints
      volumeName: client-config
      namespace: {{ .Release.Namespace }}
  systemAccounts:
    - name: admin
      initAccount: true
  vars:
    - name: BITNAMI_DEBUG
      value: "false"
    - name: CLICKHOUSE_HTTP_PORT
      value: "8123"
    - name: CLICKHOUSE_HTTPS_PORT
      value: "8443"
    - name: CLICKHOUSE_TCP_PORT
      value: "9000"
    - name: CLICKHOUSE_INTERSERVER_HTTP_PORT
      value: "9009"
    - name: CLICKHOUSE_INTERSERVER_HTTPS_PORT
      value: "9010"
    - name: CLICKHOUSE_KEEPER_TCP_PORT
      value: "9181"
    - name: CLICKHOUSE_KEEPER_RAFT_PORT
      value: "9234"
    - name: CLICKHOUSE_KEEPER_TCP_TLS_PORT
      value: "9281"
    - name: CLICKHOUSE_TCP_SECURE_PORT
      value: "9440"
    - name: CLICKHOUSE_KEEPER_RAFT_TLS_PORT
      value: "9444"
    - name: CLICKHOUSE_METRICS_PORT
      value: "8001"
    - name: SERVICE_PORT
      value: "$(CLICKHOUSE_METRICS_PORT)"
    - name: KEEPER_REPLICA_ID
      value: "$(KB_POD_NAME)"
    - name: CLICKHOUSE_ADMIN_USER
      value: admin
    - name: CLICKHOUSE_ADMIN_PASSWORD
      valueFrom:
        credentialVarRef:
          name: admin
          optional: false
          password: Required
    - name: CH_KEEPER_POD_FQDN_LIST
      valueFrom:
        componentVarRef:
          optional: false
          podFQDNs: Required
  updateStrategy: Serial
  podManagementPolicy: Parallel
  volumes:
    - name: data
  roles:
  - name: leader
    serviceable: true
    writable: true
  - name: follower
    serviceable: true
    writable: false
  - name: observer
    serviceable: false
    writable: false
  lifecycleActions:
    roleProbe:
      initialDelaySeconds: {{ .Values.roleProbe.initialDelaySeconds }}
      periodSeconds: {{ .Values.roleProbe.periodSeconds }}
      timeoutSeconds: {{ .Values.roleProbe.timeoutSeconds }}
      builtinHandler: custom
      customHandler:
        container: clickhouse
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag.major24 }}
        exec:
          command:
            - bash
            - -c
            - |
              /scripts/keeper-role-probe.sh
    switchover:
      scriptSpecSelectors:
        - name: clickhouse-scripts
      withCandidate:
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag.major24 }}
        exec:
          command:
            - bash
            - -c
            - |
              /scripts/keeper-switchover.sh > /tmp/keeper-switchover.log 2>&1
      withoutCandidate:
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag.major24 }}
        exec:
          command:
            - bash
            - -c
            - |
              /scripts/keeper-switchover.sh > /tmp/keeper-switchover.log 2>&1
    memberJoin:
      builtinHandler: custom
      customHandler:
        preCondition: RuntimeReady
        container: clickhouse
        exec:
          command:
            - bash
            - -c
            - |
              /scripts/keeper-member-join.sh > /tmp/keeper-member-join.log 2>&1
    memberLeave:
      builtinHandler: custom
      customHandler:
        container: clickhouse
        exec:
          command:
            - bash
            - -c
            - |
              /scripts/keeper-member-leave.sh > /tmp/keeper-member-leave.log 2>&1
