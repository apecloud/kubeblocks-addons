apiVersion: apps.kubeblocks.io/v1
kind: ComponentDefinition
metadata:
  name: {{ include "redis7.cmpdName" . }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
  annotations:
    {{- include "redis.annotations" . | nindent 4 }}
spec:
  provider: kubeblocks
  description: A Redis v7.0 component definition for Kubernetes
  serviceKind: redis
  serviceVersion: {{ .Values.defaultServiceVersion.redis.major7 }}
  services:
    - name: redis
      serviceName: redis
      spec:
        ports:
          - name: redis
            port: 6379
            targetPort: redis
      roleSelector: primary
    - name: redis-advertised
      serviceName: redis-advertised
      spec:
        ## the type can override in cluster componentSpec services, type can be NodePort, LoadBalancer(not support yet)
        type: NodePort
        ports:
          - name: redis-advertised
            port: 6379
            targetPort: redis
      podService: true
      disableAutoProvision: true
  updateStrategy: BestEffortParallel
  volumes:
    - name: data
      needSnapshot: true
  roles:
    - name: primary
      serviceable: true
      writable: true
    - name: secondary
      serviceable: false
      writable: false
  logConfigs:
    {{- range $name,$pattern := .Values.logConfigs }}
    - name: {{ $name }}
      filePathPattern: {{ $pattern }}
    {{- end }}
  exporter:
    containerName: metrics
    scrapePath: /metrics
    scrapePort: http-metrics
  configs:
    - name: redis-replication-config
      templateRef: {{ include "redis7.configurationTemplate" . }}
      constraintRef: {{ include "redis7.configConstraint" . }}
      namespace: {{ .Release.Namespace }}
      volumeName: redis-config
      reRenderResourceTypes:
        - vscale
    - name: redis-metrics-config
      templateRef: {{ include "redis.metricsConfiguration" . }}
      namespace: {{ .Release.Namespace }}
      volumeName: redis-metrics-config
      defaultMode: 0444
  scripts:
    - name: redis-scripts
      templateRef: {{ include "redis7.scriptsTemplate" . }}
      namespace: {{ .Release.Namespace }}
      volumeName: scripts
      defaultMode: 0555
  systemAccounts:
    - name: default
      initAccount: true
      passwordGenerationPolicy:
        length: 10
        numDigits: 5
        numSymbols: 0
        letterCase: MixedCases
  hostNetwork:
    containerPorts:
      - container: redis
        ports:
          - redis
      - container: metrics
        ports:
          - http-metrics
          - server-metrics
  vars:
    ## the name of current cluster instance
    - name: CLUSTER_NAME
      valueFrom:
        clusterVarRef:
          clusterName: Required
    ## the default username of redis connection
    - name: REDIS_DEFAULT_USER
      valueFrom:
        credentialVarRef:
          name: default
          username: Required
    ## the default password of redis connection
    - name: REDIS_DEFAULT_PASSWORD
      valueFrom:
        credentialVarRef:
          name: default
          password: Required
    ## the username of redis primary-secondary replication
    - name: REDIS_REPL_USER
      value: "kbreplicator"
    ## the password of redis primary-secondary replication shared the same password with default password
    - name: REDIS_REPL_PASSWORD
      valueFrom:
        credentialVarRef:
          name: default
          password: Required
    ## the username of redis for redis sentinel connection
    - name: REDIS_SENTINEL_USER
      value: "kbreplicator-sentinel"
    ## the password of redis for redis sentinel connection shared the same password with default password
    - name: REDIS_SENTINEL_PASSWORD
      valueFrom:
        credentialVarRef:
          name: default
          password: Required
    ## the redis advertised service port list for each pod, the value format is "pod1Svc:nodeport1,pod2Svc:nodeport2,..."
    - name: REDIS_ADVERTISED_PORT
      valueFrom:
        serviceVarRef:
          name: redis-advertised
          optional: true
          port:
            name: redis-advertised
            option: Required
    ## the redis advertised service name list for each pod, the value format is "pod1Svc,pod2Svc,..."
    - name: REDIS_ADVERTISED_SVC_NAME
      valueFrom:
        serviceVarRef:
          name: redis-advertised
          optional: true
          host: Required
    ## the redis pod name list for each pod, the value format is "pod1,pod2,..."
    - name: REDIS_POD_NAME_LIST
      valueFrom:
        componentVarRef:
          optional: false
          podNames: Required
    ## the redis pod fqdn list for each pod, the value format is "pod1FQDN,pod2FQDN,..."
    - name: REDIS_POD_FQDN_LIST
      valueFrom:
        componentVarRef:
          optional: false
          podFQDNs: Required
    ## the component name of redis, it's the fullname of redis component
    - name: REDIS_COMPONENT_NAME
      valueFrom:
        componentVarRef:
          optional: false
          componentName: Required
    ## the redis server host network port when using host network mode, the port will be allocated automatically by KubeBlocks
    - name: REDIS_HOST_NETWORK_PORT
      valueFrom:
        hostNetworkVarRef:
          optional: true
          container:
            name: redis
            port:
              name: redis
              option: Required
    - name: SERVICE_PORT
      value: "6379"
      expression: {{ `{{if ne (index . "REDIS_HOST_NETWORK_PORT") ""}}{{.REDIS_HOST_NETWORK_PORT}}{{else}}{{.SERVICE_PORT}}{{end}}` | toYaml }}
    ## the env of redis server port for dbctl to connect to redis server
    - name: DBCTL_REDIS_SERVICE_PORT
      value: $(SERVICE_PORT)
    ## the redis server metrics container host network port when using host network mode, the port will be allocated automatically by KubeBlocks, if not set, the default value is 9121
    - name: REDIS_METRICS_HOST_NETWORK_PORT
      valueFrom:
        hostNetworkVarRef:
          optional: true
          container:
            name: metrics
            port:
              name: http-metrics
              option: Required
    - name: REDIS_METRICS_HTTP_PORT
      value: "9121"
      expression: {{ `{{if ne (index . "REDIS_METRICS_HOST_NETWORK_PORT") ""}}{{.REDIS_METRICS_HOST_NETWORK_PORT}}{{else}}{{.REDIS_METRICS_HTTP_PORT}}{{end}}` | toYaml }}
    ## the redis server metrics container host network server port when using host network mode, the port will be allocated automatically by KubeBlocks, if not set, the default value is 8888
    - name: REDIS_METRICS_HOST_NETWORK_SERVER_PORT
      valueFrom:
        hostNetworkVarRef:
          optional: true
          container:
            name: metrics
            port:
              name: server-metrics
              option: Required
    - name: REDIS_METRICS_SERVER_PORT
      value: "8888"
      expression: {{ `{{if ne (index . "REDIS_METRICS_HOST_NETWORK_SERVER_PORT") ""}}{{.REDIS_METRICS_HOST_NETWORK_SERVER_PORT}}{{else}}{{.REDIS_METRICS_SERVER_PORT}}{{end}}` | toYaml }}
    ## the component name of redis sentinel when redis sentinel is enabled, it's the fullname of redis-sentinel component
    - name: SENTINEL_COMPONENT_NAME
      valueFrom:
        componentVarRef:
          compDef: {{ include "redisSentinel7.cmpdName" . }}
          optional: true
          componentName: Required
    ## the username of redis sentinel for redis connection, it is optional
    - name: SENTINEL_USER
      valueFrom:
        credentialVarRef:
          ## reference the redis-sentinel component definition name
          compDef: {{ include "redisSentinel7.cmpdName" . }}
          name: default
          optional: true
          username: Required
    ## the password of redis sentinel for redis connection, it is optional
    - name: SENTINEL_PASSWORD
      valueFrom:
        credentialVarRef:
          ## reference the redis-sentinel component definition name
          compDef: {{ include "redisSentinel7.cmpdName" . }}
          name: default
          optional: true
          password: Required
    - name: SENTINEL_POD_NAME_LIST
      valueFrom:
        componentVarRef:
          compDef: {{ include "redisSentinel7.cmpdName" . }}
          optional: true
          podNames: Required
    - name: SENTINEL_POD_FQDN_LIST
      valueFrom:
        componentVarRef:
          compDef: {{ include "redisSentinel7.cmpdName" . }}
          optional: true
          podFQDNs: Required
    ## the redis sentinel server port, if redis sentinel is in host network mode, the port will be allocated automatically by KubeBlocks, if not, the default port is 26379
    - name: SENTINEL_SERVICE_PORT
      valueFrom:
        hostNetworkVarRef:
          compDef: {{ include "redisSentinel7.cmpdName" . }}
          optional: true
          container:
            name: redis-sentinel
            port:
              name: redis-sentinel
              option: Required
      expression: {{ `{{if ne (index . "SENTINEL_SERVICE_PORT") ""}}{{.SENTINEL_SERVICE_PORT}}{{else}}26379{{end}}` | toYaml }}
  lifecycleActions:
    roleProbe:
      periodSeconds: 1
      timeoutSeconds: 1
      exec:
        container: redis
        command:
          - /tools/dbctl
          - --config-path
          - /tools/config/dbctl/components
          - redis
          - getrole
    postProvision:
      exec:
        image: {{ include "redis7.image" . }}
        container: redis
        command:
          - /bin/bash
          - -c
          - /scripts/redis-register-to-sentinel.sh
        targetPodSelector: Role
        matchingKey: primary
        ## all lifecycle actions share the same env
        env:
          - name: CURRENT_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CURRENT_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: CURRENT_POD_HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
      preCondition: RuntimeReady
    accountProvision:
      exec:
        image: {{ include "redis7.image" . }}
        container: redis
        command:
          - sh
          - -c
        args:
          - "redis-cli -h $(KB_ACCOUNT_ENDPOINT) -a $REDIS_DEFAULT_PASSWORD $(KB_ACCOUNT_STATEMENT) && redis-cli -h $(KB_ACCOUNT_ENDPOINT) -a $REDIS_DEFAULT_PASSWORD acl save "
    switchover:
      exec:
        image: {{ include "redis7.image" . }}
        container: redis
        command:
          - /bin/bash
          - -c
          - /scripts/redis-switchover.sh
  runtime:
    initContainers:
      - name: init-dbctl
        command:
          - cp
          - -r
          - /bin/dbctl
          - /config
          - /tools/
        image: {{ .Values.dbctlImage.registry | default "docker.io" }}/{{ .Values.dbctlImage.repository }}:{{ .Values.dbctlImage.tag }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.dbctlImage.pullPolicy }}
        volumeMounts:
          - mountPath: /tools
            name: tools
    containers:
      - name: redis
        image: {{ include "redis7.image" . }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
        command: [ "/scripts/redis-start.sh" ]
        ports:
          - name: redis
            containerPort: 6379
        volumeMounts:
          - name: data
            mountPath: {{ .Values.dataMountPath }}
          - name: redis-config
            mountPath: /etc/conf
          - name: scripts
            mountPath: /scripts
          - name: redis-conf
            mountPath: /etc/redis
          - mountPath: /tools
            name: tools
        env:
          - name: CURRENT_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CURRENT_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: CURRENT_POD_HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
        readinessProbe:
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
              - sh
              - -c
              - /scripts/redis-ping.sh
        lifecycle:
          preStop:
            exec:
              command:
                - /bin/bash
                - -c
                - /scripts/redis-pre-stop.sh
      - name: metrics
        image: {{ include "metrics.image" . }}
        imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        env:
          - name: ENDPOINT
            value: "localhost:$(SERVICE_PORT)"
          - name: METRICS_HTTP_PORT
            value: $(REDIS_METRICS_HTTP_PORT)
          - name: METRICS_SERVER_PORT
            value: $(REDIS_METRICS_SERVER_PORT)
          - name: REDIS_USER
            value: $(REDIS_DEFAULT_USER)
          - name: REDIS_PASSWORD
            value: $(REDIS_DEFAULT_PASSWORD)
        command:
          - "/bin/agamotto"
          - "--config=/opt/conf/metrics-config.yaml"
        ports:
          - name: http-metrics
            containerPort: {{ .Values.metrics.service.port }}
          - name: server-metrics
            containerPort: {{ .Values.metrics.service.serverPort }}
        volumeMounts:
          - name: redis-metrics-config
            mountPath: /opt/conf
