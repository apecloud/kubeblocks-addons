apiVersion: apps.kubeblocks.io/v1
kind: ComponentDefinition
metadata:
  name: {{ include "redisCluster7.cmpdName" . }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
  annotations:
    {{- include "redis.annotations" . | nindent 4 }}
spec:
  provider: kubeblocks
  description: An official v7.0 Redis Cluster(distributed implementation of Redis) component definition for Kubernetes
  serviceKind: redis-cluster
  serviceVersion: {{ .Values.defaultServiceVersion.redisCluster.major7 }}
  services:
    - name: redis-advertised
      serviceName: redis-advertised
      spec:
        ## the type can override in cluster componentSpec services
        type: NodePort
        ports:
        - name: redis-advertised
          port: 6379
          targetPort: redis-cluster
        - name: advertised-bus
          port: 16379
          targetPort: cluster-bus
      podService: true
      disableAutoProvision: true
  updateStrategy: BestEffortParallel
  volumes:
    - name: data
      needSnapshot: true
  roles:
    - name: primary
      serviceable: true
      writable: true
    - name: secondary
      serviceable: false
      writable: false
  logConfigs:
    {{- range $name,$pattern := .Values.logConfigs }}
    - name: {{ $name }}
      filePathPattern: {{ $pattern }}
    {{- end }}
  exporter:
    containerName: metrics
    scrapePath: /metrics
    scrapePort: http-metrics
  configs:
    - name: redis-cluster-config
      templateRef: {{ include "redisCluster7.configurationTemplate" . }}
      constraintRef: {{ include "redisCluster7.configConstraint" . }}
      namespace: {{ .Release.Namespace }}
      volumeName: redis-cluster-config
      reRenderResourceTypes:
        - vscale
    - name: redis-metrics-config
      templateRef: {{ include "redis.metricsConfiguration" . }}
      namespace: {{ .Release.Namespace }}
      volumeName: redis-metrics-config
      defaultMode: 0444
  scripts:
    - name: redis-cluster-scripts
      templateRef: {{ include "redisCluster7.scriptsTemplate" . }}
      namespace: {{ .Release.Namespace }}
      volumeName: scripts
      defaultMode: 0555
  systemAccounts:
    ## TODO: the other accounts should be created for backward compatibility
    - name: default
      initAccount: true
      passwordGenerationPolicy:
        length: 10
        numDigits: 5
        numSymbols: 0
        letterCase: MixedCases
        seed: 5wM4uhmKV1Ohy087
  vars:
    ## the name of current cluster instance
    - name: CLUSTER_NAME
      valueFrom:
        clusterVarRef:
          clusterName: Required
    ## the service port of redis
    - name: SERVICE_PORT
      value: "6379"
    - name: CLUSTER_BUS_PORT
      value: "16379"
    ## the default username of redis connection
    - name: REDIS_DEFAULT_USER
      valueFrom:
        credentialVarRef:
          name: default
          username: Required
    ## the default password of redis connection
    - name: REDIS_DEFAULT_PASSWORD
      valueFrom:
        credentialVarRef:
          name: default
          password: Required
    ## the username of redis primary-secondary replication
    - name: REDIS_REPL_USER
      value: "kbreplicator"
    ## the password of redis primary-secondary replication shared the same password with default password
    - name: REDIS_REPL_PASSWORD
      valueFrom:
        credentialVarRef:
          name: default
          password: Required
    ## the pod name list for current shard pod, the value format is "pod1,pod2"
    - name: CURRENT_SHARD_POD_NAME_LIST
      valueFrom:
        componentVarRef:
          optional: false
          podNames: Required
    ## the pod fqdn list for current shard pod, the value format is "pod1FQDN,pod2FQDN"
    - name: CURRENT_SHARD_POD_FQDN_LIST
      valueFrom:
        componentVarRef:
          optional: false
          podFQDNs: Required
    ## the component name of current shard
    - name: CURRENT_SHARD_COMPONENT_NAME
      valueFrom:
        componentVarRef:
          optional: false
          componentName: Required
    ## the component short name of current shard
    - name: CURRENT_SHARD_COMPONENT_SHORT_NAME
      valueFrom:
        componentVarRef:
          optional: false
          shortName: Required
    ## the redis cluster advertised service port list for each pod of current shard, the value format is "pod1Svc:nodeport1,pod2Svc:nodeport2,..."
    - name: CURRENT_SHARD_ADVERTISED_PORT
      valueFrom:
        serviceVarRef:
          name: redis-advertised
          optional: true
          port:
            name: redis-advertised
            option: Required
    ## the redis cluster advertised service bus port list for each pod of current shard, the value format is "pod1Svc:nodeport1,pod2Svc:nodeport2,..."
    - name: CURRENT_SHARD_ADVERTISED_BUS_PORT
      valueFrom:
        serviceVarRef:
          name: redis-advertised
          optional: true
          port:
            name: advertised-bus
            option: Required
    ## the redis cluster advertised service name list for each pod of current shard, the value format is "pod1Svc,pod2Svc,..."
    - name: CURRENT_SHARD_ADVERTISED_SVC_NAME
      valueFrom:
        serviceVarRef:
          name: redis-advertised
          optional: true
          host: Required
    ## the current shard primary pod name which is dynamically selected, caution to use it
    - name: CURRENT_SHARD_PRIMARY_POD_NAME
      valueFrom:
      componentVarRef:
        compDef: {{ include "redisCluster7.cmpdName" . }}
        optional: true
        podNamesForRole:
          role: primary
          option: Optional
    ## the component short names of all shard
    ## the value format is like "shard-98x:shard-98x,shard-cq7:shard-cq7,shard-hy7:shard-hy7"
    - name: ALL_SHARDS_COMPONENT_SHORT_NAMES
      valueFrom:
        componentVarRef:
          compDef: {{ include "redisCluster7.cmpdName" . }}
          optional: false
          shortName: Required
          multipleClusterObjectOption:
            strategy: combined
    ## the pod name list for all shard pod, it will generate a set of variables with the shard name suffix like:
    ## - ALL_SHARDS_POD_NAME_LIST_SHARD_98X="redis-shard-98x-0,redis-shard-98x-1"
    ## - ALL_SHARDS_POD_NAME_LIST_SHARD_CQ7="redis-shard-cq7-0,redis-shard-cq7-1"
    ## - ALL_SHARDS_POD_NAME_LIST_SHARD_HY7="redis-shard-hy7-0,redis-shard-hy7-1"
    - name: ALL_SHARDS_POD_NAME_LIST
      valueFrom:
        componentVarRef:
          compDef: {{ include "redisCluster7.cmpdName" . }}
          optional: false
          podNames: Required
          multipleClusterObjectOption:
            strategy: individual
    ## the pod fqdn list for all shard pod, it will generate a set of variables with the shard name suffix like:
    ## - ALL_SHARDS_POD_FQDN_LIST_SHARD_98X="redis-shard-98x-0.redis-shard-98x-headless.default.cluster.local,redis-shard-98x-1.redis-shard-98x-headless.default.cluster.local"
    ## - ALL_SHARDS_POD_FQDN_LIST_SHARD_CQ7="redis-shard-cq7-0.redis-shard-cq7-headless.default.cluster.local,redis-shard-cq7-1.redis-shard-cq7-headless.default.cluster.local"
    ## - ALL_SHARDS_POD_FQDN_LIST_SHARD_HY7="redis-shard-hy7-0.redis-shard-hy7-headless.default.cluster.local,redis-shard-hy7-1.redis-shard-hy7-headless.default.cluster.local"
    - name: ALL_SHARDS_POD_FQDN_LIST
      valueFrom:
        componentVarRef:
          compDef: {{ include "redisCluster7.cmpdName" . }}
          optional: false
          podFQDNs: Required
          multipleClusterObjectOption:
            strategy: individual
    ## the redis cluster advertised service port list for each pod of all shard pods
    ## the value format is like "shard-98x@redis-shard-98x-redis-advertised-0:32024,redis-shard-98x-redis-advertised-1:31318.shard-cq7@redis-shard-cq7-redis-advertised-0:31828,redis-shard-cq7-redis-advertised-1:32000"
    - name: ALL_SHARDS_ADVERTISED_PORT
      valueFrom:
        serviceVarRef:
          compDef: {{ include "redisCluster7.cmpdName" . }}
          name: redis-advertised
          optional: true
          multipleClusterObjectOption:
            strategy: combined
            combinedOption:
              flattenFormat:
                delimiter: "."
                keyValueDelimiter: "@"
          port:
            name: redis-advertised
            option: Required
  lifecycleActions:
    roleProbe:
      periodSeconds: 1
      timeoutSeconds: 1
      exec:
        container: redis-cluster
        command:
          - /tools/dbctl
          - --config-path
          - /tools/config/dbctl/components
          - redis
          - getrole
    postProvision:
      exec:
        image: {{ include "redis7.image" . }}
        container: redis-cluster
        command:
          - /bin/bash
          - -c
          - /scripts/redis-cluster-manage.sh --post-provision
        ## all lifecycle actions share the same env
        env:
          - name: CURRENT_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CURRENT_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: CURRENT_POD_HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
      preCondition: RuntimeReady
      retryPolicy:
        maxRetries: 10
    preTerminate:
      exec:
        image: {{ include "redis7.image" . }}
        container: redis-cluster
        command:
          - /bin/bash
          - -c
          - /scripts/redis-cluster-manage.sh --pre-terminate
      retryPolicy:
        maxRetries: 10
  runtime:
    initContainers:
      - name: init-dbctl
        command:
          - cp
          - -r
          - /bin/dbctl
          - /config
          - /tools/
        image: {{ .Values.dbctlImage.registry | default "docker.io" }}/{{ .Values.dbctlImage.repository }}:{{ .Values.dbctlImage.tag }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.dbctlImage.pullPolicy }}
        volumeMounts:
          - mountPath: /tools
            name: tools
    containers:
      - name: redis-cluster
        image: {{ include "redis7.image" . }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
        ports:
          - name: redis-cluster
            containerPort: 6379
          - name: cluster-bus
            containerPort: 16379
        volumeMounts:
          - name: data
            mountPath: {{ .Values.dataMountPath }}
          - name: redis-cluster-config
            mountPath: /etc/conf
          - name: scripts
            mountPath: /scripts
          - name: redis-conf
            mountPath: /etc/redis
          - mountPath: /tools
            name: tools
        env:
          - name: CURRENT_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CURRENT_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: CURRENT_POD_HOST_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
        command: [ "/scripts/redis-cluster-server-start.sh" ]
        readinessProbe:
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
              - sh
              - -c
              - /scripts/redis-ping.sh 1
        lifecycle:
          preStop:
            exec:
              command:
                - /bin/bash
                - -c
                - /scripts/redis-cluster-replica-member-leave.sh
      - name: metrics
        image: {{ include "metrics.image" . }}
        imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        env:
          - name: ENDPOINT
            value: {{ printf "localhost:6379" }}
          - name: REDIS_USER
            value: $(REDIS_DEFAULT_USER)
          - name: REDIS_PASSWORD
            value: $(REDIS_DEFAULT_PASSWORD)
        command:
          - "/bin/agamotto"
          - "--config=/opt/conf/metrics-config.yaml"
        ports:
          - name: http-metrics
            containerPort: {{ .Values.metrics.service.port }}
        volumeMounts:
          - name: redis-metrics-config
            mountPath: /opt/conf
