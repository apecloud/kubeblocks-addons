apiVersion: apps.kubeblocks.io/v1
kind: ComponentDefinition
metadata:
  name: {{ include "redisSentinel7.cmpdName" . }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
  annotations:
    {{- include "redis.annotations" . | nindent 4 }}
spec:
  provider: kubeblocks
  description: A Redis Sentinel v7.0 component definition for Kubernetes
  serviceKind: redis-sentinel
  serviceVersion: {{ .Values.defaultServiceVersion.redisSentinel.major7 }}
  services:
    - name: redis-sentinel
      serviceName: redis-sentinel
      spec:
        ports:
          - name: redis-sentinel
            port: 26379
            targetPort: redis-sentinel
    - name: sentinel-advertised
      serviceName: sentinel-advertised
      spec:
        type: NodePort
        ports:
          - name: sentinel-advertised
            port: 26379
            targetPort: 26379
      podService: true
      disableAutoProvision: true
  updateStrategy: BestEffortParallel
  volumes:
    - name: data
      needSnapshot: true
  logConfigs:
    {{- range $name,$pattern := .Values.logConfigs }}
    - name: {{ $name }}
      filePathPattern: {{ $pattern }}
    {{- end }}
  scripts:
    - name: redis-scripts
      templateRef: {{ include "redis7.scriptsTemplate" . }}
      namespace: {{ .Release.Namespace }}
      volumeName: scripts
      defaultMode: 0555
  systemAccounts:
    ## TODO: the other accounts should be created for backward compatibility
    - name: default
      initAccount: true
      passwordGenerationPolicy:
        length: 10
        numDigits: 5
        numSymbols: 0
        letterCase: MixedCases
  vars:
    ## the name of current cluster instance
    - name: CLUSTER_NAME
      valueFrom:
        clusterVarRef:
          clusterName: Required
    ## the service port of redis sentinel
    - name: SENTINEL_SERVICE_PORT
      value: "26379"
    ## the username of redis sentinel
    - name: SENTINEL_USER
      valueFrom:
        credentialVarRef:
          ## reference the redis-sentinel component definition name
          compDef: {{ include "redisSentinel7.cmpdName" . }}
          name: default
          optional: false
          username: Required
    ## the password of redis sentinel
    - name: SENTINEL_PASSWORD
      valueFrom:
        credentialVarRef:
          ## reference the redis-sentinel component definition name
          compDef: {{ include "redisSentinel7.cmpdName" . }}
          name: default
          optional: false
          password: Required
    ## the sentinel pod name list
    - name: SENTINEL_POD_NAME_LIST
      valueFrom:
        componentVarRef:
          compDef: {{ include "redisSentinel7.cmpdName" . }}
          optional: false
          podNames: Required
    ## the sentinel pod fqdn list
    - name: SENTINEL_POD_FQDN_LIST
      valueFrom:
        componentVarRef:
          compDef: {{ include "redisSentinel7.cmpdName" . }}
          optional: false
          podFQDNs: Required
    ## the username of redis for redis sentinel connection which is only used to recover redis servers when scale-out redis sentinel.
    - name: REDIS_SENTINEL_USER
      value: "kbreplicator-sentinel"
    ## the password of redis for redis sentinel connection, which is only used to recover redis servers when scale-out redis sentinel.
    ## TODO: Obtaining the redis password here will cause a circular dependency issue, which will lead to the abnormal restart of the Redis Sentinel pod, details refer to redis-sentinel-member-join.sh
{{/*    - name: REDIS_SENTINEL_PASSWORD*/}}
{{/*      valueFrom:*/}}
{{/*        credentialVarRef:*/}}
{{/*          compDef: {{ include "redis7.cmpdName" . }}*/}}
{{/*          name: default*/}}
{{/*          optional: true*/}}
{{/*          password: Required*/}}
{{/*          multipleClusterObjectOption:*/}}
{{/*            strategy: individual*/}}
  lifecycleActions:
    accountProvision:
      exec:
        image: {{ include "redisSentinel7.image" . }}
        container: redis-sentinel
        command:
          - sh
          - -c
        args:
          - "redis-cli -h $(KB_ACCOUNT_ENDPOINT) -p $SENTINEL_SERVICE_PORT -a $SENTINEL_PASSWORD $(KB_ACCOUNT_STATEMENT) && redis-cli -h $(KB_ACCOUNT_ENDPOINT) -p $SENTINEL_SERVICE_PORT -a $SENTINEL_PASSWORD acl save "
    memberLeave:
      exec:
        image: {{ include "redisSentinel7.image" . }}
        container: redis-sentinel
        command:
          - /bin/bash
          - -c
          - |
          {{- .Files.Get "scripts/redis-sentinel-member-leave.sh" | nindent 14 }}
        targetPodSelector: Any
  runtime:
    containers:
    - name: redis-sentinel
      image: {{ include "redisSentinel7.image" . }}
      imagePullPolicy: IfNotPresent
      ports:
        - containerPort: 26379
          name: redis-sentinel
      volumeMounts:
        - name: data
          mountPath: /data
        - name: scripts
          mountPath: /scripts
      env:
        - name: CURRENT_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: CURRENT_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: CURRENT_POD_HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
      command:
        - /bin/bash
      args:
        - -c
        - |
          set -e
          /scripts/redis-sentinel-start-v2.sh
      lifecycle:
        postStart:
          exec:
            command: [ "/scripts/redis-sentinel-post-start.sh" ]
      livenessProbe:
        initialDelaySeconds: 10
        periodSeconds: 5
        timeoutSeconds: 5
        successThreshold: 1
        failureThreshold: 5
        exec:
          command:
            - sh
            - -c
            - /scripts/redis-sentinel-ping.sh
      readinessProbe:
        initialDelaySeconds: 10
        periodSeconds: 5
        timeoutSeconds: 5
        successThreshold: 1
        failureThreshold: 5
        exec:
          command:
            - sh
            - -c
            - /scripts/redis-sentinel-ping.sh
