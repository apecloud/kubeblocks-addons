apiVersion: apps.kubeblocks.io/v1alpha1
kind: BackupPolicyTemplate
metadata:
  name: redis-backup-policy-template
  labels:
    clusterdefinition.kubeblocks.io/name: redis
    service-kind/redis: "true"
    service-kind/redis-cluster: "true"
    {{- include "redis.labels" . | nindent 4 }}
spec:
  clusterDefinitionRef: redis
  backupPolicies:
  - componentDefRef: redis
    target:
      role: secondary
      fallbackRole: primary
    backupMethods: &backupMethods
    - name: datafile
      snapshotVolumes: false
      actionSetName: redis-physical-backup
      targetVolumes:
        volumeMounts:
        - name: data
          mountPath: {{ .Values.dataMountPath }}
    - name: aof
      snapshotVolumes: false
      actionSetName: redis-pitr-backup
      targetVolumes:
        volumeMounts:
          - name: data
            mountPath: {{ .Values.dataMountPath }}
    - name: volume-snapshot
      snapshotVolumes: true
      targetVolumes:
        volumes:
        - data
    - name: backup-for-rebuild-instance
      actionSetName: redis-for-rebuild-instance
      env:
        - name: REBUILD_CLUSTER_INSTANCE
          value: "true"
      targetVolumes:
        volumeMounts:
          - name: data
            mountPath: {{ .Values.dataMountPath }}
    schedules: &backupschedules
    - backupMethod: datafile
      enabled: false
      cronExpression: "0 18 * * 0"
      retentionPeriod: 7d
    - backupMethod: aof
      enabled: false
      cronExpression: "0 18 * * 0"
      retentionPeriod: 7d
    - backupMethod: volume-snapshot
      enabled: false
      cronExpression: "0 18 * * 0"
      retentionPeriod: 7d
  - componentDefs:
      - redis-7
      - redis-8
      - redis-5
      - redis-6
    target:
      role: secondary
      fallbackRole: primary
      account: default
    backupMethods: *backupMethods
    schedules: *backupschedules
  - componentDefs:
      - redis-cluster-5
      - redis-cluster-6
      - redis-cluster-7
      - redis-cluster-8
    target:
      role: secondary
      fallbackRole: primary
      account: default
    backupMethods:
    - name: datafile
      snapshotVolumes: false
      actionSetName: redis-cluster-backup
      targetVolumes:
        volumeMounts:
          - name: data
            mountPath: {{ .Values.dataMountPath }}
    - name: backup-for-rebuild-instance
      actionSetName: redis-for-rebuild-instance
      env:
        - name: REBUILD_CLUSTER_INSTANCE
          value: "true"
      targetVolumes:
        volumeMounts:
          - name: data
            mountPath: {{ .Values.dataMountPath }}
  #  TODO: support it when kb support to input the specified component name for sharding cluster.
  #  - name: volume-snapshot
  #    snapshotVolumes: true
  #    targetVolumes:
  #      volumes:
  #        - data
    schedules:
      - backupMethod: datafile
        enabled: false
        cronExpression: "0 18 * * 0"
        retentionPeriod: 7d
