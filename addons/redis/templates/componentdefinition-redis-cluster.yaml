apiVersion: apps.kubeblocks.io/v1alpha1
kind: ComponentDefinition
metadata:
  name: {{ include "redis-cluster.componentDefName" . }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
spec:
  provider: kubeblocks
  description: An official v7.0 Redis Cluster(distributed implementation of Redis) component definition for Kubernetes
  serviceKind: redis-cluster
  serviceVersion: 7.0.6
  services:
    - name: redis
      serviceName: redis
      spec:
        ports:
          - name: redis
            port: 6379
            targetPort: redis-cluster
      roleSelector: primary
  updateStrategy: BestEffortParallel
  volumes:
    - name: data
      needSnapshot: true
  roles:
    - name: primary
      serviceable: true
      writable: true
    - name: secondary
      serviceable: false
      writable: false
  roleArbitrator: Lorry
  logConfigs:
    {{- range $name,$pattern := .Values.logConfigs }}
    - name: {{ $name }}
      filePathPattern: {{ $pattern }}
    {{- end }}
  monitor:
    builtIn: false
    exporterConfig:
      scrapePort: {{ .Values.metrics.service.port }}
      scrapePath: "/metrics"
  configs:
    - name: redis-cluster-config
      templateRef: redis-cluster7-config-template
      constraintRef: redis-cluster7-config-constraints
      namespace: {{ .Release.Namespace }}
      volumeName: redis-cluster-config
    - name: redis-metrics-config
      templateRef: redis-metrics-config
      namespace: {{ .Release.Namespace }}
      volumeName: redis-metrics-config
      defaultMode: 0444
  scripts:
    - name: redis-cluster-scripts
      templateRef: redis-cluster-scripts
      namespace: {{ .Release.Namespace }}
      volumeName: scripts
      defaultMode: 0555
  systemAccounts:
    ## TODO: the other accounts should be created for backward compatibility
    - name: default
      initAccount: true
      passwordGenerationPolicy:
        length: 10
        numDigits: 5
        numSymbols: 0
        letterCase: MixedCases
        seed: 5wM4uhmKV1Ohy087
  vars:
    ## the default username of redis connection
    - name: REDIS_DEFAULT_USER
      valueFrom:
        credentialVarRef:
          ## reference the current component definition name
          compDef: {{ include "redis-cluster.componentDefName" . }}
          name: default
          username: Required
    ## the default password of redis connection
    - name: REDIS_DEFAULT_PASSWORD
      valueFrom:
        credentialVarRef:
          ## reference the current component definition name
          compDef: {{ include "redis-cluster.componentDefName" . }}
          name: default
          password: Required
    ## TODO: add redis sentinel reference env vars
  lifecycleActions:
    roleProbe:
      builtinHandler: redis
      periodSeconds: 1
      timeoutSeconds: 1
    postProvision:
      customHandler:
        image: {{ include "redis.image" . }}
        exec:
          command:
            - /bin/bash
            - -c
            - /scripts/redis-cluster-manage.sh --post-provision
        ## TODO: the preCondition should be changed to RuntimeReady when KubeBlocks support it
        preCondition: ComponentReady
    preTerminate:
      customHandler:
        image: {{ include "redis.image" . }}
        exec:
          command:
            - /bin/bash
            - -c
            - /scripts/redis-cluster-manage.sh --pre-terminate
    accountProvision:
      customHandler:
        image: {{ include "redis.image" . }}
        exec:
          command:
            - sh
            - -c
          args:
            - "redis-cli -h $(KB_ACCOUNT_ENDPOINT) -a $REDIS_DEFAULT_PASSWORD $(KB_ACCOUNT_STATEMENT) && redis-cli -h $(KB_ACCOUNT_ENDPOINT) -a $REDIS_DEFAULT_PASSWORD acl save "
  runtime:
    containers:
      - name: redis-cluster
        image: {{ include "redis.image" . }}
        imagePullPolicy: {{ default .Values.image.pullPolicy "IfNotPresent" }}
        ports:
          - name: redis-cluster
            containerPort: 6379
          - name: cluster-bus
            containerPort: 16379
        volumeMounts:
          - name: data
            mountPath: {{ .Values.dataMountPath }}
          - name: redis-cluster-config
            mountPath: /etc/conf
          - name: scripts
            mountPath: /scripts
          - name: redis-conf
            mountPath: /etc/redis
          - name: pod-info
            mountPath: /kb-podinfo
        env:
          - name: SERVICE_PORT
            value: "6379"
          - name: CLUSTER_BUS_PORT
            value: "16379"
          - name: REDIS_REPL_USER
            value: "kbreplicator"
          - name: REDIS_REPL_PASSWORD
            value: $(REDIS_DEFAULT_PASSWORD)
        command: [ "/scripts/redis-cluster-server-start.sh" ]
        readinessProbe:
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
              - sh
              - -c
              - /scripts/redis-ping.sh 1
        lifecycle:
          preStop:
            exec:
              command:
                - /bin/bash
                - -c
                - /scripts/redis-cluster-replica-member-leave.sh
      - name: metrics
        image: {{ .Values.metrics.image.registry | default .Values.image.registry }}/{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}
        imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        env:
          - name: ENDPOINT
            value: {{ printf "localhost:6379" }}
          - name: REDIS_USER
            value: $(REDIS_DEFAULT_USER)
          - name: REDIS_PASSWORD
            value: $(REDIS_DEFAULT_PASSWORD)
        command:
          - "/bin/agamotto"
          - "--config=/opt/conf/metrics-config.yaml"
        ports:
          - name: http-metrics
            containerPort: {{ .Values.metrics.service.port }}
        volumeMounts:
          - name: redis-metrics-config
            mountPath: /opt/conf
