{{- range .Values.redisVersions }}
{{- $redisClusterImage  := printf "%s/%s:%s" ( $.Values.image.registry | default "docker.io" ) $.Values.image.repository .defaultImageTag }}
{{- $redisClusterStartScripts := "redis-cluster-server-start.sh" }}
{{- $redisClusterManageScripts := "redis-cluster-manage.sh" }}
{{- $redisClusterSwitchoverScripts := "redis-cluster-switchover.sh" }}
{{- if eq .major "5" }}
  {{- $redisClusterStartScripts = "redis-cluster5-server-start.sh" }}
  {{- $redisClusterManageScripts = "redis-cluster5-manage.sh" }}
  {{- $redisClusterSwitchoverScripts = "redis-cluster5-switchover.sh" }}
{{- else if eq .major "6" }}
  {{- $redisClusterStartScripts = "redis-cluster6-server-start.sh" }}
  {{- $redisClusterManageScripts = "redis-cluster6-manage.sh" }}
  {{- $redisClusterSwitchoverScripts = "redis-cluster6-switchover.sh" }}
{{- end }}
{{- if or (eq .major "8") (eq .major "5") }}
  {{- $redisClusterImage  = printf "%s/%s:%s" ( $.Values.ceImage.registry | default ( $.Values.image.registry | default "docker.io" ) )  $.Values.ceImage.repository .defaultImageTag }}
{{- end }}
---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: ComponentDefinition
metadata:
  name: {{ .clusterComponentDef }}
  labels:
    {{- include "redis.labels" $ | nindent 4 }}
  annotations:
    apps.kubeblocks.io/skip-immutable-check: "true"
spec:
  provider: kubeblocks
  description: An official v{{ .major }}.0 Redis Cluster(distributed implementation of Redis) component definition for Kubernetes
  serviceKind: redis-cluster
  serviceVersion: {{ .serviceVersion }}
  minReadySeconds: 10
  services:
    - name: redis-advertised
      serviceName: redis-advertised
      spec:
        ## the type can override in cluster componentSpec services
        type: NodePort
        ports:
        - name: redis-advertised
          port: 6379
          targetPort: redis-cluster
        - name: advertised-bus
          port: 16379
          targetPort: cluster-bus
      podService: true
      disableAutoProvision: true
    - name: redis-lb-advertised
      serviceName: redis-lb-advertised
      spec:
        ## the type can override in cluster componentSpec services, type can loadBalancer
        type: LoadBalancer
        # allocateLoadBalancerNodePorts: false
        ports:
          - name: redis-advertised
            port: 6379
            targetPort: redis-cluster
          - name: advertised-bus
            port: 16379
            targetPort: cluster-bus
      podService: true
      disableAutoProvision: true
  updateStrategy: BestEffortParallel
  podManagementPolicy: OrderedReady
  volumes:
    - name: data
      needSnapshot: true
  roles:
    - name: primary
      serviceable: true
      writable: true
    - name: secondary
      serviceable: false
      writable: false
  logConfigs:
    {{- range $name,$pattern := $.Values.logConfigs }}
    - name: {{ $name }}
      filePathPattern: {{ $pattern }}
    {{- end }}
  configs:
    - name: redis-cluster-config
      templateRef: redis-cluster{{ .major }}-config-template
      constraintRef: redis-cluster{{ .major }}-config-constraints
      namespace: {{ $.Release.Namespace }}
      volumeName: redis-cluster-config
      reRenderResourceTypes:
        - vscale
  scripts:
    - name: redis-cluster-scripts
      templateRef: redis-cluster-scripts
      namespace: {{ $.Release.Namespace }}
      volumeName: scripts
      defaultMode: 0555
  systemAccounts:
    ## TODO: the other accounts should be created for backward compatibility
    - name: default
      initAccount: true
      passwordGenerationPolicy:
        length: 10
        numDigits: 5
        numSymbols: 0
        letterCase: MixedCases
        seed: 5wM4uhmKV1Ohy087
  hostNetwork:
    containerPorts:
      - container: redis-cluster
        ports:
          - redis-cluster
          - cluster-bus
  vars:
{{- if eq .major "8" }}
    - name: IS_REDIS8
      value: "true"
{{- end }}
    ## the default username of redis connection
    - name: REDIS_DEFAULT_USER
      valueFrom:
        credentialVarRef:
          ## reference the current component definition name
          compDef: {{ .clusterComponentDef }}
          name: default
          username: Required
    ## the default password of redis connection
    - name: REDIS_DEFAULT_PASSWORD
      valueFrom:
        credentialVarRef:
          ## reference the current component definition name
          compDef: {{ .clusterComponentDef }}
          name: default
          password: Required
    ## the redis cluster advertised service port list for each pod of current shard, the value format is "pod1Svc:nodeport1,pod2Svc:nodeport2,..."
    - name: REDIS_CLUSTER_ADVERTISED_PORT
      valueFrom:
        serviceVarRef:
          compDef: {{ .clusterComponentDef }}
          name: redis-advertised
          optional: true
          port:
            name: redis-advertised
            option: Required
    ## the redis cluster advertised service bus port list for each pod of current shard, the value format is "pod1Svc:nodeport1,pod2Svc:nodeport2,..."
    - name: REDIS_CLUSTER_ADVERTISED_BUS_PORT
      valueFrom:
        serviceVarRef:
          compDef: {{ .clusterComponentDef }}
          name: redis-advertised
          optional: true
          port:
            name: advertised-bus
            option: Required
    - name: REDIS_ADVERTISED_LB_HOST
      valueFrom:
        serviceVarRef:
          compDef: {{ .clusterComponentDef }}
          name: redis-lb-advertised
          optional: true
          loadBalancer: Required
          host: Required
    - name: REDIS_CLUSTER_LB_ADVERTISED_PORT
      valueFrom:
        serviceVarRef:
          compDef: {{ .clusterComponentDef }}
          name: redis-lb-advertised
          optional: true
          port:
            name: redis-advertised
            option: Required
    ## the redis cluster advertised service bus port list for each pod of current shard, the value format is "pod1Svc:nodeport1,pod2Svc:nodeport2,..."
    - name: REDIS_CLUSTER_LB_ADVERTISED_BUS_PORT
      valueFrom:
        serviceVarRef:
          compDef: {{ .clusterComponentDef }}
          name: redis-lb-advertised
          optional: true
          port:
            name: advertised-bus
            option: Required
    - name: REDIS_CLUSTER_ALL_SHARDS
      valueFrom:
        componentVarRef:
          compDef: {{ .clusterComponentDef }}
          componentName: Required
          optional: false
          multipleClusterObjectOption:
            strategy: combined
    ## the redis cluster advertised service port list for each pod of all shard pods
    ## the value format is like "shard-98x@redis-shard-98x-redis-advertised-0:32024,redis-shard-98x-redis-advertised-1:31318.shard-cq7@redis-shard-cq7-redis-advertised-0:31828,redis-shard-cq7-redis-advertised-1:32000"
    - name: REDIS_CLUSTER_ALL_SHARDS_ADVERTISED_PORT
      valueFrom:
        serviceVarRef:
          compDef: {{ .clusterComponentDef }}
          name: redis-advertised
          optional: true
          multipleClusterObjectOption:
            strategy: combined
            combinedOption:
              flattenFormat:
                delimiter: "."
                keyValueDelimiter: "@"
          port:
            name: redis-advertised
            option: Required
    ## the redis cluster advertised service bus port list for each pod of all shard pods
    ## the value format is like "shard-98x@redis-shard-98x-redis-advertised-0:30654,redis-shard-98x-redis-advertised-1:30971.shard-cq7@redis-shard-cq7-redis-advertised-0:32555,redis-shard-cq7-redis-advertised-1:32368"
    - name: REDIS_CLUSTER_ALL_SHARDS_ADVERTISED_BUS_PORT
      valueFrom:
        serviceVarRef:
          compDef: {{ .clusterComponentDef }}
          name: redis-advertised
          optional: true
          multipleClusterObjectOption:
            strategy: combined
            combinedOption:
              flattenFormat:
                delimiter: "."
                keyValueDelimiter: "@"
          port:
            name: advertised-bus
            option: Required
    ## the redis cluster advertised service port list for each pod of all shard pods
    ## the value format is like "shard-98x@redis-shard-98x-redis-advertised-0:32024,redis-shard-98x-redis-advertised-1:31318.shard-cq7@redis-shard-cq7-redis-advertised-0:31828,redis-shard-cq7-redis-advertised-1:32000"
    - name: REDIS_CLUSTER_ALL_SHARDS_LB_ADVERTISED_PORT
      valueFrom:
        serviceVarRef:
          compDef: {{ .clusterComponentDef }}
          name: redis-lb-advertised
          optional: true
          multipleClusterObjectOption:
            strategy: combined
            combinedOption:
              flattenFormat:
                delimiter: "."
                keyValueDelimiter: "@"
          port:
            name: redis-advertised
            option: Required
    ## the redis cluster advertised service bus port list for each pod of all shard pods
    ## the value format is like "shard-98x@redis-shard-98x-redis-advertised-0:30654,redis-shard-98x-redis-advertised-1:30971.shard-cq7@redis-shard-cq7-redis-advertised-0:32555,redis-shard-cq7-redis-advertised-1:32368"
    - name: REDIS_CLUSTER_ALL_SHARDS_LB_ADVERTISED_BUS_PORT
      valueFrom:
        serviceVarRef:
          compDef: {{ .clusterComponentDef }}
          name: redis-lb-advertised
          optional: true
          multipleClusterObjectOption:
            strategy: combined
            combinedOption:
              flattenFormat:
                delimiter: "."
                keyValueDelimiter: "@"
          port:
            name: advertised-bus
            option: Required
    - name: REDIS_CLUSTER_ALL_SHARDS_ADVERTISED_LB_HOST
      valueFrom:
        serviceVarRef:
          compDef: {{ .clusterComponentDef }}
          name: redis-lb-advertised
          optional: true
          multipleClusterObjectOption:
            strategy: combined
            combinedOption:
              flattenFormat:
                delimiter: ","
                keyValueDelimiter: "@"
          host: Required
          loadBalancer: Required
    ## the redis cluster server host network port when using host network mode, the port will be allocated automatically by KubeBlocks, if not set, the default value is 6379
    - name: REDIS_CLUSTER_HOST_NETWORK_PORT
      valueFrom:
        hostNetworkVarRef:
          optional: true
          container:
            name: redis-cluster
            port:
              name: redis-cluster
              option: Required
      expression: {{ `{{if ne (index . "REDIS_CLUSTER_HOST_NETWORK_PORT") ""}}{{.REDIS_CLUSTER_HOST_NETWORK_PORT}}{{else}}6379{{end}}` | toYaml }}
    ## the redis cluster server host network bus port when using host network mode, the port will be allocated automatically by KubeBlocks, if not set, the default value is 16379
    - name: REDIS_CLUSTER_HOST_NETWORK_BUS_PORT
      valueFrom:
        hostNetworkVarRef:
          optional: true
          container:
            name: redis-cluster
            port:
              name: cluster-bus
              option: Required
      expression: {{ `{{if ne (index . "REDIS_CLUSTER_HOST_NETWORK_BUS_PORT") ""}}{{.REDIS_CLUSTER_HOST_NETWORK_BUS_PORT}}{{else}}16379{{end}}` | toYaml }}
    - name: REDIS_CLUSTER_ALL_SHARDS_HOST_NETWORK_PORT
      valueFrom:
        hostNetworkVarRef:
          compDef: {{ .clusterComponentDef }}
          optional: true
          container:
            name: redis-cluster
            port:
              name: redis-cluster
              option: Required
          multipleClusterObjectOption:
            strategy: combined
            combinedOption:
              flattenFormat:
                delimiter: ","
                keyValueDelimiter: ":"
    ## the redis cluster host network bus port list for all shard pods, the all pods in same shard has the same host network bus port allocated automatically by KubeBlocks.
    ## the value format is like "shard-chg:1060,shard-khh:1059,shard-mpg:1054"
    - name: REDIS_CLUSTER_ALL_SHARDS_HOST_NETWORK_BUS_PORT
      valueFrom:
        hostNetworkVarRef:
          compDef: {{ .clusterComponentDef }}
          optional: true
          container:
            name: redis-cluster
            port:
              name: cluster-bus
              option: Required
          multipleClusterObjectOption:
            strategy: combined
            combinedOption:
              flattenFormat:
                delimiter: ","
                keyValueDelimiter: ":"
  lifecycleActions:
    roleProbe:
      builtinHandler: redis
      periodSeconds: 1
      timeoutSeconds: 1
    postProvision:
      customHandler:
        image: {{ $redisClusterImage }}
        exec:
          command:
            - /bin/bash
            - -c
            - /scripts/{{ $redisClusterManageScripts }} --post-provision
        ## TODO: the preCondition should be changed to RuntimeReady when KubeBlocks support it
        preCondition: ComponentReady
        retryPolicy:
          maxRetries: 10
    preTerminate:
      customHandler:
        image: {{ $redisClusterImage }}
        exec:
          command:
            - /bin/bash
            - -c
            - /scripts/{{ $redisClusterManageScripts }} --pre-terminate
        retryPolicy:
          maxRetries: 10
    memberLeave:
      customHandler:
        image: {{ $redisClusterImage }}
        exec:
          command:
            - /bin/bash
            - -c
            - /scripts/redis-cluster-replica-member-leave.sh
    switchover:
      scriptSpecSelectors:
        - name: redis-cluster-scripts
      withCandidate:
        image: {{ $redisClusterImage }}
        exec:
          command:
            - /bin/bash
            - -c
            - /scripts/{{ $redisClusterSwitchoverScripts }}
      withoutCandidate:
        image: {{ $redisClusterImage }}
        exec:
          command:
            - /bin/bash
            - -c
            - /scripts/{{ $redisClusterSwitchoverScripts }}
  runtime:
    containers:
      - name: redis-cluster
        image: {{ $redisClusterImage }}
        imagePullPolicy: {{ default "IfNotPresent" $.Values.image.pullPolicy }}
        ports:
          - name: redis-cluster
            containerPort: 6379
          - name: cluster-bus
            containerPort: 16379
        volumeMounts:
          - name: data
            mountPath: {{ $.Values.dataMountPath }}
          - name: redis-cluster-config
            mountPath: /etc/conf
          - name: scripts
            mountPath: /scripts
          - name: redis-conf
            mountPath: /etc/redis
        env:
          - name: SERVICE_PORT
            value: "$(REDIS_CLUSTER_HOST_NETWORK_PORT)"
{{- if gt .major "6" }}
          - name: CLUSTER_BUS_PORT
            value: "$(REDIS_CLUSTER_HOST_NETWORK_BUS_PORT)"
{{- end }}
          - name: REDIS_REPL_USER
            value: "kbreplicator"
          - name: REDIS_REPL_PASSWORD
            value: $(REDIS_DEFAULT_PASSWORD)
        command: [ "/scripts/{{ $redisClusterStartScripts }}" ]
        readinessProbe:
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
              - sh
              - -c
              - /scripts/redis-ping.sh
        lifecycle:
          preStop:
            exec:
              command:
                - /bin/bash
                - -c
                - /scripts/redis-cluster-replica-pre-stop.sh
{{- end }}