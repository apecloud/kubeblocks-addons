{{- range .Values.redisVersions }}
{{- $version := .major }}
{{- if eq .major "8" }}
  {{ $version = "7" }}
{{- end }}
{{- $redisImage := printf "%s/%s:%s" ( $.Values.image.registry | default "docker.io" ) $.Values.image.repository .defaultImageTag }}
{{- if or (eq .major "8") (eq .major "5") }}
  {{- $redisImage = printf "%s/%s:%s" ( $.Values.ceImage.registry | default ( $.Values.image.registry | default "docker.io" ) )  $.Values.ceImage.repository .defaultImageTag }}
{{- end }}
{{- $cc := $.Files.Get (printf "config/redis%s-config-effect-scope.yaml" $version) | fromYaml }}
---
apiVersion: apps.kubeblocks.io/v1beta1
kind: ConfigConstraint
metadata:
  name: redis-cluster{{ .major }}-config-constraints
  labels:
    {{- include "redis.labels" $ | nindent 4 }}
spec:
  reloadAction:
    shellTrigger:
      sync: true
      command:
        - "reload-parameter.sh"
      scriptConfig:
        scriptConfigMapRef: redis-reload-tools-script
        namespace: {{ $.Release.Namespace }}
      toolsSetup:
        mountPoint: /kb_tools
        toolConfigs:
          - name: kb-tools
            asContainerImage: true
            image: {{ $redisImage }}

  # ConfigurationSchema that impose restrictions on engine parameter's rule
  parametersSchema:
    topLevelKey: RedisParameter
    cue: |-
      {{- $.Files.Get (printf "config/redis-cluster%s-config-constraint.cue" $version) | nindent 6 }}

  ## require db instance restart
  {{- if hasKey $cc "staticParameters" }}
  staticParameters:
    {{- $params := get $cc "staticParameters" }}
    {{- range $params }}
    - {{ . }}
    {{- end }}
  {{- end}}


  # redis configuration file format
  fileFormatConfig:
    format: redis
{{- end }}