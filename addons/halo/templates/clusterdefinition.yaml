apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: halo
  labels:
    {{- include "halo.labels" . | nindent 4 }}
spec:
  type: halo
  connectionCredential:
    username: halo
    password: "$(RANDOM_PASSWD)"
    endpoint: "$(SVC_FQDN):$(SVC_PORT_tcp-halo)"
    host: "$(SVC_FQDN)"
    port: "$(SVC_PORT_tcp-halo)"
  componentDefs:
    - name: halo
      workloadType: Replication  
      characterType: halo
      rsmSpec:
        roles:
          - name: primary
            accessMode: ReadWrite
            canVote: true
          - name: replica
            accessMode: Readonly
            canVote: true
        roleProbe:
          customHandler:
            - image: {{ .Values.image.registry }}/{{ .Values.image.repository}}:{{.Values.image.tag}}
              command: 
                - |
                  Status=$(curl -s http://localhost:8008) && 
                  role=$(echo $Status | jq .role  | tr -d '"') &&
                  if [ "$role" = "master" ]; then echo  "primary"; else echo  "replica"; fi
          roleUpdateMechanism: DirectAPIServerEventUpdate
          initialDelaySeconds: 60
        memberUpdateStrategy: BestEffortParallel
      serviceRefDeclarations:
        - name: {{ .Values.etcd.etcdService }}
          serviceRefDeclarationSpecs:
            - serviceKind: etcd
              serviceVersion: v3.5.6
      configSpecs:
        - name: halo-configuration
          templateRef: halo-configuration
          constraintRef: halo-cc
          keys:
            - postgresql.conf
          namespace: {{ .Release.Namespace }}
          volumeName: halo-config
          defaultMode: 0444
      scriptSpecs:
        - name: halo-scripts
          templateRef: halo-scripts
          namespace: {{ .Release.Namespace }}
          volumeName: scripts
          defaultMode: 0555
      service:
        ports:
          - name: tcp-halo
            port: 1921
            targetPort: tcp-halo
      volumeTypes:
        - name: data
          type: data
      podSpec:
        securityContext:
          runAsUser: 0
          fsGroup: 3000
          runAsGroup: 3000
        containers:
          - name: halo
            imagePullPolicy: {{ default .Values.image.pullPolicy "IfNotPresent" }}
            securityContext:
              runAsUser: 0
            command: 
              - /halo-scripts/setup.sh
            volumeMounts:
              - name: dshm
                mountPath: /dev/shm
              - name: data
                mountPath: {{ .Values.dataMountPath }}
              - name: halo-config
                mountPath: /var/lib/halo/conf
              - name: scripts
                mountPath: /halo-scripts
            ports:
              - name: tcp-halo
                containerPort: 1921
            env:
              - name: PGDATA
                value: /data/halo
              - name: HALOPORT
                value: "1921"
              - name: HALO_DB 
                value: "halo" 
              - name: ALLOW_NOSSL
                value: "true"
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.name
              - name: PATRONI_KUBERNETES_POD_IP
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: status.podIP
              - name: POD_NAMESPACE
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
              - name: PATRONI_SUPERUSER_USERNAME
                value: "halo"  
              - name: HALO_PASSWORD
                value: "halo0root"
              - name: PATRONI_REPLICATION_USERNAME
                value: "replica"
              - name: PATRONI_REPLICATION_PASSWORD
                value: "halo123456"
              - name: PATRONI_USER_REWIND
                value: "patroni"
              - name: PATRONI_PASSWORD_REWIND
                value: "patroni"
              - name: PATRONI_RESTAPI_CONNECT_ADDRESS
                value: "$(KB_PODIP):8008"
              - name: PATRONI_RESTAPI_LISTEN
                value: "0.0.0.0:8008"
              - name: PATRONI_ETCD3_HOST
                value: {{ .Values.etcd.etcdService }}-etcd:2379
              - name: PATRONI_NAME
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.name
              - name: PATRONI_POSTGRESQL_LISTEN
                value: '0.0.0.0:1921'
              - name: PATRONI_SCOPE
                value: halo-cluster
            # readinessProbe:
            #   httpGet:
            #     scheme: HTTP
            #     path: /readiness
            #     port: 8008
            #   initialDelaySeconds: 60
            #   periodSeconds: 10
            #   timeoutSeconds: 5
            #   successThreshold: 1
            #   failureThreshold: 5                                        
        volumes:
          - name: dshm
            emptyDir:
              medium: Memory
              {{- with .Values.shmVolume.sizeLimit }}
              sizeLimit: {{ . }}
              {{- end }}
            
      