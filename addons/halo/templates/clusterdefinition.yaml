apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: halo
  labels:
     {{- include "official-halo.labels" . | nindent 4 }}
spec:
  type: halo
  connectionCredential:
    username: halo
    password: "$(RANDOM_PASSWD)"
    endpoint: "$(SVC_FQDN):$(SVC_PORT_tcp-halo)"
    host: "$(SVC_FQDN)"
    port: "$(SVC_PORT_tcp-halo)"
  componentDefs:
    - name: halo
      workloadType: Stateful  
      characterType: halo      
      configSpecs:
        - name: official-halo14-configuration
          templateRef: official-halo14-configuration
          constraintRef: official-halo14-cc
          keys:
            - postgresql.conf
          namespace: {{ .Release.Namespace }}
          volumeName: halo-config
          defaultMode: 0444
        - name: halo-custom-metrics
          templateRef: halo14-custom-metrics
          namespace: {{ .Release.Namespace }}
          volumeName: halo-custom-metrics
          defaultMode: 0444
        - name: agamotto-configuration
          templateRef: halo-agamotto-configuration 
          namespace: {{ .Release.Namespace }}
          volumeName: agamotto-configuration
          defaultMode: 0444
      monitor:
        builtIn: false
        exporterConfig:
          scrapePath: /metrics
          scrapePort: {{ .Values.metrics.service.port }}
      logConfigs:
        {{- range $name,$pattern := .Values.logConfigs }}
        - name: {{ $name }}
          filePathPattern: {{ $pattern }}
        {{- end }}     
      scriptSpecs:
        - name: official-halo-scripts
          templateRef: official-halo-scripts
          namespace: {{ .Release.Namespace }}
          volumeName: scripts
          defaultMode: 0555
      service:
        ports:
          - name: tcp-halo
            port: 1921
            targetPort: tcp-halo
      volumeTypes:
        - name: data
          type: data
        - name: log
          type: log
      podSpec:
        securityContext:
          runAsUser: 0
          fsGroup: 3000
          runAsGroup: 3000
        containers:
          - name: halo
            imagePullPolicy: {{ default .Values.image.pullPolicy "IfNotPresent" }}
            securityContext:
              runAsUser: 0
            command: 
              - /halo-scripts/setup.sh
            volumeMounts:
              - name: dshm
                mountPath: /dev/shm
              - name: data
                mountPath: {{ .Values.dataMountPath }}
              - name: halo-config
                mountPath: /var/lib/halo/conf
              - name: scripts
                mountPath: /halo-scripts
            ports:
              - name: tcp-halo
                containerPort: 1921
            env:
              - name: PGDATA
                value: /data/halo
              - name: HALOPORT
                value: "1921"
              - name: HALO_USER
                value: halo  
              - name: HALO_PASSWORD
                value: "halo0root"
              - name: PGHOST 
                value: /var/run/halo 
              - name: HALO_DB 
                value: "halo"                            
              - name: ORACLE_HOME 
                value: /u01/app/halo/product/instantclient_12_2
              - name: OCI_LIB_DIR
                value: $ORACLE_HOME 
              - name: OCI_INC_DIR
                value: $ORACLE_HOME/sdk/include 
              - name: LD_LIBRARY_PATH
                value: $HALO_HOME/lib:$ORACLE_HOME/sdk/include/lib 
              - name: ALLOW_NOSSL
                value: "true"
              - name: POD_IP
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: status.podIP
              - name: POD_NAMESPACE
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
              - name: POSTGRES_USER
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: username
                    optional: false
              - name: POSTGRES_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: password
                    optional: false
              - name: PGUSER
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: username
                    optional: false
              - name: PGPASSWORD
                value: "halo0root"
            livenessProbe:
              exec:
                command:
                  - /bin/bash 
                  - -c
                  - |
                    gosu halo psql -U halo -d halo -c  "select 1"
              initialDelaySeconds: 15
              periodSeconds: 3
              failureThreshold: 2
              timeoutSeconds: 5
          - name: metrics
            image:  {{ .Values.metrics.image.registry  }}/{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}
            imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
            securityContext:
              runAsUser: 0
            env:
              - name: ENDPOINT
                value: {{ printf "127.0.0.1:1921" }}
              - name: DATA_SOURCE_PASS
                value: halo0root
              - name: DATA_SOURCE_USER
                value: halo
            command:
              - "/bin/agamotto"
              - "--config=/opt/agamotto/agamotto-config.yaml" 
            ports:
              - name: http-metrics
                containerPort: {{ .Values.metrics.service.port }}
            volumeMounts:
              - name: halo-custom-metrics
                mountPath: /opt/conf
              - name: agamotto-configuration
                mountPath: /opt/agamotto                                            
        volumes:
          - name: dshm
            emptyDir:
              medium: Memory
              {{- with .Values.shmVolume.sizeLimit }}
              sizeLimit: {{ . }}
              {{- end }}
      