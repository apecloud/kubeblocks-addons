apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: halo
  labels:
    {{- include "official-halo.labels" . | nindent 4 }}
spec:
  type: halo
  connectionCredential:
    username: halo
    password: "$(RANDOM_PASSWD)"
    endpoint: "$(SVC_FQDN):$(SVC_PORT_tcp-halo)"
    host: "$(SVC_FQDN)"
    port: "$(SVC_PORT_tcp-halo)"
  componentDefs:
    - name: halo
      workloadType: Stateful
      characterType: halo
      configSpecs:
        - name: official-halo14-configuration
          templateRef: official-halo14-configuration
          constraintRef: official-halo14-cc
          keys:
            - postgresql.conf
          namespace: {{ .Release.Namespace }}
          volumeName: halo-config
          defaultMode: 0444
      scriptSpecs:
        - name: official-halo-scripts
          templateRef: official-halo-scripts
          namespace: {{ .Release.Namespace }}
          volumeName: scripts
          defaultMode: 0555
      service:
        ports:
          - name: tcp-halo
            port: 1921
            targetPort: tcp-halo
      volumeTypes:
        - name: data
          type: data
      podSpec:
        securityContext:
          runAsUser: 0
          fsGroup: 3000
          runAsGroup: 3000
        containers:
          - name: halo
            imagePullPolicy: {{ default .Values.image.pullPolicy "IfNotPresent" }}
            securityContext:
              runAsUser: 0
            command: 
              - /halo-scripts/setup.sh
            volumeMounts:
              - name: dshm
                mountPath: /dev/shm
              - name: data
                mountPath: {{ .Values.dataMountPath }}
              - name: halo-config
                mountPath: /var/lib/postgresql/conf
              - name: scripts
                mountPath: /halo-scripts
            ports:
              - name: tcp-halo
                containerPort: 1921
            env:
              - name: KB_PG_CONFIG_PATH
                value: /var/lib/postgresql/conf/postgresql.conf
              - name: PGDATA
                value: /var/lib/postgresql/data
              - name: POSTGRESQL_MASTER_PORT_NUMBER
                value: "1921"
              - name: HALO_USER
                value: halo  
              - name: HALO_PASSWORD
                value: "halo0root"
              - name: PGHOST # 这个是PG的unix套接字路径
                value: /var/run/halo 
              - name: HALO_DB # 初始化数据簇时创建的数据库
                value: "halo"                            
              - name: ORACLE_HOME # oracle 插件
                value: /u01/app/halo/product/instantclient_12_2
              - name: OCI_LIB_DIR
                value: $ORACLE_HOME # oracle 插件
              - name: OCI_INC_DIR
                value: $ORACLE_HOME/sdk/include #oracle 插件
              - name: LD_LIBRARY_PATH
                value: $HALO_HOME/lib:$ORACLE_HOME/sdk/include/lib # 插件的路径
              - name: ALLOW_NOSSL
                value: "true"
              - name: POD_IP
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: status.podIP
              - name: POD_NAMESPACE
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
              - name: POSTGRES_USER
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: username
                    optional: false
              - name: POSTGRES_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: password
                    optional: false
              - name: PGUSER
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: username
                    optional: false
              - name: PGPASSWORD
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: password
                    optional: false
            livenessProbe:
              tcpSocket:
                port: 1921
              initialDelaySeconds: 15
              periodSeconds: 3
              failureThreshold: 2
              timeoutSeconds: 1
            readinessProbe:
              failureThreshold: 2
              exec:
                command:
                   - pg_isready
              periodSeconds: 1
              successThreshold: 1
              timeoutSeconds: 1
              initialDelaySeconds: 15
        volumes:
          - name: dshm
            emptyDir:
              medium: Memory
              {{- with .Values.shmVolume.sizeLimit }}
              sizeLimit: {{ . }}
              {{- end }}

     
     