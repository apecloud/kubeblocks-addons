apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: mysql-orc
  labels:
    {{- include "mysql.labels" . | nindent 4 }}
spec:
  connectionCredential:
    username: root
    password: "$(RANDOM_PASSWD)"
    endpoint: "$(SVC_FQDN):$(SVC_PORT_mysql)"
    host: "$(SVC_FQDN)"
    port: "$(SVC_PORT_mysql)"
  componentDefs:
    - name: mysql
      characterType: mysql
      probes:
        roleProbe:
          failureThreshold: {{ .Values.roleProbe.failureThreshold }}
          periodSeconds: {{ .Values.roleProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.roleProbe.timeoutSeconds }}
      workloadType: Replication
      service:
        ports:
          - name: mysql
            port: 3306
            targetPort: mysql
      configSpecs:
        - name: mysql-replication-config
          templateRef: oracle-mysql8.0-config-template
          constraintRef: oracle-mysql8.0-config-constraints
          volumeName: mysql-config
          namespace: {{ .Release.Namespace }}
      scriptSpecs:
        - name: mysql-scripts
          templateRef: mysql-scripts
          namespace: {{ .Release.Namespace }}
          volumeName: scripts
          defaultMode: 0555
      volumeTypes:
        - name: data
          type: data
      horizontalScalePolicy:
        type: CloneVolume
      podSpec:
        initContainers:
          - command:
              - bash 
              - -c
              - "mkdir -p /var/lib/mysql/{log,binlog}; chown -R mysql:root /var/lib/mysql;"
            imagePullPolicy: Always
            name: init-data
            volumeMounts:
              - mountPath: {{ .Values.dataMountPath }}
                name: data
        containers:
          - name: mysql
            imagePullPolicy: IfNotPresent
            command:
              - bash 
              - -c
              - "docker-entrypoint.sh mysqld --server-id $(( ${KB_POD_NAME##*-} + 1))"
            volumeMounts:
              - mountPath: {{ .Values.dataMountPath }}
                name: data
              - mountPath: /etc/mysql/conf.d
                name: mysql-config
              - name: scripts
                mountPath: /scripts
            ports:
              - containerPort: 3306
                name: mysql
            env:
              - name: MYSQL_INITDB_SKIP_TZINFO
                value: "1"
              - name: SERVICE_PORT
                value: "3306"
              - name: MYSQL_ROOT_HOST
                value: {{ .Values.auth.rootHost | default "%" | quote }}
              - name: MYSQL_ROOT_USER
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: username
                    optional: false
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: $(CONN_CREDENTIAL_SECRET_NAME)
                    key: password
                    optional: false

    - name: orchestrator
      workloadType: Stateful
      service:
        ports:
          - name: http
            port: 80
            protocal: TCP
            targetPort: http
          - name: prometheus
            port: 9125
            protocal: TCP
            targetPort: prometheus
          - name: raft
            port: 10008
            targetPort: raft
      volumeTypes:
        - name: data
          type: data

      podSpec:
        volumes:
          - name: orchestrator-config
            configMap:
              name: mysql-orc-config
        containers:
          - name: orchestrator
            imagePullPolicy: IfNotPresent
            volumeMounts:
              - name: orchestrator-data
                mountPath: /var/lib/orchestrator
              - name: orchestrator-config
                mountPath: /usr/local/share/orchestrator/templates
            ports:
              - containerPort: 3000
                name: http
              - containerPort: 10008
                name: raft
            env:
              - name: ORC_TOPOLOGY_USER
                valueFrom:
                  secretKeyRef:
                    key: TOPOLOGY_USER
                    name: mysql-operator-orc
              - name: POD_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
                    apiVersion: v1
              - name: ORC_TOPOLOGY_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: TOPOLOGY_PASSWORD
                    name: mysql-operator-orc
            envFrom:
              - prefix: ORC_
                secretRef:
                  name: mysql-operator-orc

