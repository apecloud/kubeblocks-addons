apiVersion: apps.kubeblocks.io/v1alpha1
kind: ComponentDefinition
metadata:
  name: orchestrator
  labels:
      {{- include "mysql.labels" . | nindent 4 }}
spec:
  provider: kubeblocks
  description: mysql HA compoent definition for Kubernetes
  serviceKind: orchestrator
  serviceVersion: 8.0.0

  serviceRefDeclarations:
    - name: metaMysql
      serviceRefDeclarationSpecs:
        - serviceKind: mysql
          serviceVersion: "^*"
  scripts:
    - name: orc-mysql-scripts
      templateRef: orc-mysql-scripts
      namespace: {{ .Release.Namespace }}
      volumeName: scripts
      defaultMode: 0555
  vars:
    - name: META_MYSQL_PORT
      valueFrom:
        serviceRefVarRef:
          compDef: apecloud-mysql
          name: metaMysql
          port: Required
          optional: true
    - name: META_MYSQL_HOST
      valueFrom:
        serviceRefVarRef:
          compDef: apecloud-mysql
          name: metaMysql
          endpoint: Required
          optional: true
    - name: META_MYSQL_USER
      valueFrom:
        serviceRefVarRef:
          compDef: apecloud-mysql
          name: metaMysql
          username: Required
          optional: true
    - name: META_MYSQL_PASSWORD
      valueFrom:
        serviceRefVarRef:
          compDef: apecloud-mysql
          name: metaMysql
          password: Required
          optional: true

  lifecycleActions:
    postProvision:
      customHandler:
        image: docker.io/mysql:8.0.33
        exec:
          command:
            - bash
            - -c
            - "/scripts/init-meta-database.sh;sleep 1000000000000000000"
        preCondition: ComponentReady
  services:
    - name: orchestrator
      serviceName: orchestrator
      spec:
        ports:
          - name: http
            port: 80
            protocal: TCP
            targetPort: http
          - name: prometheus
            port: 9125
            protocal: TCP
            targetPort: prometheus
    - name: orcraft
      serviceName: orcraft
      generatePodOrdinalService: true
      spec:
        type: ClusterIP
        ports:
          - name: raft
            port: 10008
            targetPort: raft
  volumes:
    - name: data
      needSnapshot: true
  runtime:
    volumes:
      - name: orchestrator-config
        configMap:
          name: mysql-orc-config
    containers:
      - name: orchestrator
        image: docker.io/bitpoke/mysql-operator-orchestrator:v0.6.3
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: orchestrator-data
            mountPath: /var/lib/orchestrator
          - name: orchestrator-config
            mountPath: /usr/local/share/orchestrator/templates
          - name: scripts
            mountPath: /scripts
        ports:
          - containerPort: 3000
            name: http
          - containerPort: 10008
            name: raft
        env:
          - name: ORC_TOPOLOGY_USER
            valueFrom:
              secretKeyRef:
                key: TOPOLOGY_USER
                name: {{ include "orchestrator.componentDefName" . }}-secret
                optional: false
          - name: ORC_TOPOLOGY_PASSWORD
            valueFrom:
              secretKeyRef:
                key: TOPOLOGY_PASSWORD
                name: {{ include "orchestrator.componentDefName" . }}-secret
                optional: false
          - name: ORC_META_USER
            valueFrom:
              secretKeyRef:
                key: META_USER
                name: {{ include "orchestrator.componentDefName" . }}-secret
                optional: false
          - name: ORC_META_PASSWORD
            valueFrom:
              secretKeyRef:
                key: META_PASSWORD
                name: {{ include "orchestrator.componentDefName" . }}-secret
                optional: false
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
                apiVersion: v1
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
        envFrom:
          - prefix: ORC_
            secretRef:
              name: {{ include "orchestrator.componentDefName" . }}-secret