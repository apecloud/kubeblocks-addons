{{- if eq .Values.mode "cluster" }}
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "kblib.clusterName" . }}
  labels: {{ include "kblib.clusterLabels" . | nindent 4 }}
spec:
  terminationPolicy: {{ .Values.extra.terminationPolicy }}
  {{- include "kblib.affinity" . | indent 2 }}
  {{- with $.Values.tolerations }}
  tolerations: {{ . | toYaml | nindent 4 }}
  {{- end }}
  componentSpecs:
    {{- if eq .Values.storage.meta.mode "incluster" }}
    - name: {{ .Values.storage.meta.name }}
      componentDef: {{ .Values.storage.meta.inCluster.provider }}
      replicas: {{ .Values.storage.meta.inCluster.replicas}}
      {{- include "kblib.componentMonitor" . | indent 6 }}
      {{- with .Values.storage.meta.inCluster.resources }}
      resources:
        requests:
          cpu: {{ .cpu }}
          memory: {{ print .memory "Gi" }}
      {{- end }}
      {{- with .Values.storage.meta.inCluster.storage }}
      volumeClaimTemplates:
        - name: data  # TODO: volume name and multiple volumes
          spec:
            storageClassName: {{ .storageClassName }}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print .size "Gi" }}
      {{- end }}
    {{- end }}
    {{- if eq .Values.storage.log.mode "incluster" }}
    - name: {{ .Values.storage.log.name }}
      componentDef: {{ .Values.storage.log.inCluster.provider }}
      replicas: {{ .Values.storage.log.inCluster.replicas}}
      {{- include "kblib.componentMonitor" . | indent 6 }}
      {{- with .Values.storage.log.inCluster.resources }}
      resources:
        requests:
          cpu: {{ .cpu }}
          memory: {{ print .memory "Gi" }}
      {{- end }}
      {{- with .Values.storage.log.inCluster.storage }}
      volumeClaimTemplates:
        - name: data  # TODO: volume name and multiple volumes
          spec:
            storageClassName: {{ .storageClassName }}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print .size "Gi" }}
      {{- end }}
    {{- end }}
    {{- if eq .Values.storage.object.mode "incluster" }}
    - name: {{ .Values.storage.object.name }}
      componentDef: {{ .Values.storage.object.inCluster.provider }}
      replicas: {{ .Values.storage.object.inCluster.replicas}}
      {{- include "kblib.componentMonitor" . | indent 6 }}
      {{- with .Values.storage.object.inCluster.resources }}
      resources:
        requests:
          cpu: {{ .cpu }}
          memory: {{ print .memory "Gi" }}
      {{- end }}
      {{- with .Values.storage.object.inCluster.storage }}
      volumeClaimTemplates:
        - name: data  # TODO: volume name and multiple volumes
          spec:
            storageClassName: {{ .storageClassName }}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print .size "Gi" }}
      {{- end }}
    {{- end }}
    {{- if .Values.proxy.enabled }}
    - name: proxy
      componentDef: milvus-proxy-{{ .Chart.Version }}
      replicas: {{ .Values.proxy.replicas }}
      {{- include "kblib.componentMonitor" . | indent 6 }}
      {{- with .Values.proxy.resources }}
      resources:
        requests:
          cpu: {{ .cpu }}
          memory: {{ print .memory "Gi" }}
      {{- end }}
      {{- with .Values.proxy.storage }}
      volumeClaimTemplates:
        - name: data  # TODO: volume name and multiple volumes
          spec:
            storageClassName: {{ .storageClassName }}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print .size "Gi" }}
      {{- end }}
      serviceRefs:
      {{- if eq .Values.storage.meta.mode "serviceref" }}
      - name: milvus-object-storage
        namespace: {{ .Values.storage.meta.serviceRef.namespace }}
        cluster: {{ .Values.storage.meta.serviceRef.cluster }}
        serviceDescriptor: {{ .Values.storage.meta.serviceRef.serviceDescriptor }}
      {{- end }}
      {{- if eq .Values.storage.log.mode "serviceref" }}
      - name: milvus-log-storage
        namespace: {{ .Values.storage.log.serviceRef.namespace }}
        cluster: {{ .Values.storage.log.serviceRef.cluster }}
        serviceDescriptor: {{ .Values.storage.log.serviceRef.serviceDescriptor }}
      {{- end }}
    {{- end }}
    - name: mixedcoord
      componentDef: milvus-mixcoord-{{ .Chart.Version }}
      replicas: {{ .Values.mixedcoord.replicas}}
      {{- include "kblib.componentMonitor" . | indent 6 }}
      {{- with .Values.mixedcoord.resources }}
      resources:
        requests:
          cpu: {{ .cpu }}
          memory: {{ print .memory "Gi" }}
      {{- end }}
      {{- with .Values.mixedcoord.storage }}
      volumeClaimTemplates:
        - name: data  # TODO: volume name and multiple volumes
          spec:
            storageClassName: {{ .storageClassName }}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print .size "Gi" }}
      {{- end }}
      serviceRefs:
      {{- if eq .Values.storage.meta.mode "serviceref" }}
      - name: milvus-object-storage
        namespace: {{ .Values.storage.meta.serviceRef.namespace }}
        cluster: {{ .Values.storage.meta.serviceRef.cluster }}
        serviceDescriptor: {{ .Values.storage.meta.serviceRef.serviceDescriptor }}
      {{- end }}
    - name: datanode
      componentDef: milvus-datanode-{{ .Chart.Version }}
      replicas: {{ .Values.datanode.replicas}}
      {{- include "kblib.componentMonitor" . | indent 6 }}
      {{- with .Values.datanode.resources }}
      resources:
        requests:
          cpu: {{ .cpu }}
          memory: {{ print .memory "Gi" }}
      {{- end }}
      {{- with .Values.datanode.storage }}
      volumeClaimTemplates:
        - name: data  # TODO: volume name and multiple volumes
          spec:
            storageClassName: {{ .storageClassName }}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print .size "Gi" }}
      {{- end }}
      serviceRefs:
      {{- if eq .Values.storage.log.mode "serviceref" }}
        - name: milvus-log-storage
          namespace: {{ .Values.storage.log.serviceRef.namespace }}
          cluster: {{ .Values.storage.log.serviceRef.cluster }}
          serviceDescriptor: {{ .Values.storage.log.serviceRef.serviceDescriptor }}
      {{- end }}
      {{- if eq .Values.storage.object.mode "serviceref" }}
        - name: milvus-object-storage
          namespace: {{ .Values.storage.object.serviceRef.namespace }}
          cluster: {{ .Values.storage.object.serviceRef.cluster }}
          serviceDescriptor: {{ .Values.storage.object.serviceRef.serviceDescriptor }}
      {{- end }}
    - name: indexnode
      componentDef: milvus-indexnode-{{ .Chart.Version }}
      replicas: {{ .Values.indexnode.replicas}}
      {{- include "kblib.componentMonitor" . | indent 6 }}
      {{- with .Values.indexnode.resources }}
      resources:
        requests:
          cpu: {{ .cpu }}
          memory: {{ print .memory "Gi" }}
      {{- end }}
      {{- with .Values.indexnode.storage }}
      volumeClaimTemplates:
        - name: data  # TODO: volume name and multiple volumes
          spec:
            storageClassName: {{ .storageClassName }}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print .size "Gi" }}
      {{ - end }}
      serviceRefs:
      {{- if eq .Values.storage.log.mode "serviceref" }}
      - name: milvus-log-storage
        namespace: {{ .Values.storage.log.serviceRef.namespace }}
        cluster: {{ .Values.storage.log.serviceRef.cluster }}
        serviceDescriptor: {{ .Values.storage.log.serviceRef.serviceDescriptor }}
      {{- end }}
      {{- if eq .Values.storage.object.mode "serviceref" }}
      - name: milvus-object-storage
        namespace: {{ .Values.storage.object.serviceRef.namespace }}
        cluster: {{ .Values.storage.object.serviceRef.cluster }}
        serviceDescriptor: {{ .Values.storage.object.serviceRef.serviceDescriptor }}
      {{- end }}
    - name: querynode
      componentDef: milvus-querynode-{{ .Chart.Version }}
      replicas: {{ .Values.querynode.replicas}}
      {{- include "kblib.componentMonitor" . | indent 6 }}
      {{- with .Values.querynode.resources }}
      resources:
        requests:
          cpu: {{ .cpu }}
          memory: {{ print .memory "Gi" }}
      {{- end }}
      {{- with .Values.querynode.storage }}
      volumeClaimTemplates:
        - name: data  # TODO: volume name and multiple volumes
          spec:
            storageClassName: {{ .storageClassName }}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print .size "Gi" }}
      {{- end }}
      serviceRefs:
      {{- if eq .Values.storage.log.mode "serviceref" }}
      - name: milvus-log-storage
        namespace: { { .Values.storage.log.serviceRef.namespace } }
        cluster: { { .Values.storage.log.serviceRef.cluster } }
        serviceDescriptor: { { .Values.storage.log.serviceRef.serviceDescriptor } }
      {{- end }}
      {{- if eq .Values.storage.object.mode "serviceref" }}
      - name: milvus-object-storage
        namespace: {{ .Values.storage.object.serviceRef.namespace }}
        cluster: {{ .Values.storage.object.serviceRef.cluster }}
        serviceDescriptor: {{ .Values.storage.object.serviceRef.serviceDescriptor }}
      {{ - end }}
{{- end }}