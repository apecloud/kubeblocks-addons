apiVersion: apps.kubeblocks.io/v1alpha1
kind: BackupPolicyTemplate
metadata:
  name: postgresql-backup-policy-template
  labels:
    clusterdefinition.kubeblocks.io/name: postgresql
    {{- include "postgresql.labels" . | nindent 4 }}
  annotations:
    dataprotection.kubeblocks.io/reconfigure-ref: |
      {
        "name": "postgresql-configuration",
        "key": "postgresql.conf",
        "enable": {
          "archive-wal": [{"key": "archive_command","value": "''"}]
        },
        "disable": {
          "archive-wal": [{ "key": "archive_command","value": "'/bin/true'"}]
        }
      }
spec:
  clusterDefinitionRef: postgresql
  backupPolicies:
  - componentDefRef: postgresql
    target:
      role: secondary
    backupMethods:
    - name: pg-basebackup
      snapshotVolumes: false
      actionSetName: postgres-basebackup
      envMapping:
      - key: IMAGE_TAG
        valueFrom:
          clusterVersionRef:
          - names: [postgresql-12.14.0, postgresql-12.14.1, postgresql-12.15.0]
            mappingValue: "12.15.0-pgvector-v0.5.0"
          - names: [postgresql-14.7.2-pgvector-v0.5.0, postgresql-14.8.0]
            mappingValue: "14.8.0-pgvector-v0.5.0"
      targetVolumes:
        volumeMounts:
        - name: data
          mountPath: {{ .Values.dataMountPath }}
    - name: volume-snapshot
      snapshotVolumes: true
      targetVolumes:
        volumes:
        - data
    - name: config-wal-g
      target:
        role: ""
        strategy: All
      actionSetName: postgres-config-wal-g
      snapshotVolumes: false
      targetVolumes:
        volumeMounts:
          - name: data
            mountPath: {{ .Values.dataMountPath }}
    - name: wal-g
      target:
        role: secondary
      actionSetName: postgres-wal-g
      snapshotVolumes: false
      targetVolumes:
        volumeMounts:
          - name: data
            mountPath: {{ .Values.dataMountPath }}
    - name: archive-wal
      target:
        role: primary
      actionSetName: postgresql-pitr
      snapshotVolumes: false
      targetVolumes:
        volumeMounts:
          - name: data
            mountPath: {{ .Values.dataMountPath }}
    schedules: &backupschedules
    - backupMethod: pg-basebackup
      enabled: false
      cronExpression: "0 18 * * *"
      retentionPeriod: 7d
    - backupMethod: volume-snapshot
      enabled: false
      cronExpression: "0 18 * * *"
      retentionPeriod: 7d
    - backupMethod: wal-g
      enabled: false
      cronExpression: "0 18 * * *"
      retentionPeriod: 7d
    - backupMethod: archive-wal
      enabled: false
      cronExpression: "*/5 * * * *"
      retentionPeriod: 8d
  - componentDefs: [postgresql-14, postgresql-12]
    target:
      role: secondary
      account: postgres
    backupMethods:
      - name: pg-basebackup
        snapshotVolumes: false
        actionSetName: postgres-basebackup
        envMapping:
          - key: IMAGE_TAG
            valueFrom:
              componentDef:
                - names: [postgresql-12]
                  mappingValue: "12.15.0-pgvector-v0.5.0"
                - names: [postgresql-14]
                  mappingValue: "14.8.0-pgvector-v0.5.0"
        targetVolumes:
          volumeMounts:
            - name: data
              mountPath: {{ .Values.dataMountPath }}
      - name: volume-snapshot
        snapshotVolumes: true
        targetVolumes:
          volumes:
            - data
      - name: config-wal-g
        target:
          role: ""
          strategy: All
        actionSetName: postgres-config-wal-g
        snapshotVolumes: false
        targetVolumes:
          volumeMounts:
            - name: data
              mountPath: {{ .Values.dataMountPath }}
      - name: wal-g
        target:
          role: secondary
        actionSetName: postgres-wal-g
        snapshotVolumes: false
        targetVolumes:
          volumeMounts:
            - name: data
              mountPath: {{ .Values.dataMountPath }}
      - name: archive-wal
        target:
          role: primary
        actionSetName: postgresql-pitr
        snapshotVolumes: false
        targetVolumes:
          volumeMounts:
            - name: data
              mountPath: {{ .Values.dataMountPath }}
    schedules: *backupschedules