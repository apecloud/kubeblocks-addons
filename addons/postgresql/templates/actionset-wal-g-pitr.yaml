apiVersion: dataprotection.kubeblocks.io/v1alpha1
kind: ActionSet
metadata:
  labels:
    clusterdefinition.kubeblocks.io/name: postgresql
    {{- include "postgresql.labels" . | nindent 4 }}
  name: postgres-wal-g-pitr
spec:
  backupType: Continuous
  env:
    - name: VOLUME_DATA_DIR
      value: {{ .Values.dataMountPath }}
    - name: RESTORE_SCRIPT_DIR
      value: "$(VOLUME_DATA_DIR)/kb_restore"
    - name: DATA_DIR
      value: "$(VOLUME_DATA_DIR)/pgroot/data"
    - name: CONF_DIR
      value: "$(VOLUME_DATA_DIR)/conf"
    - name: LOG_DIR
      value: $(VOLUME_DATA_DIR)/pgroot/data/pg_wal
    - name: LOG_ARCHIVE_SECONDS
      value: "5"
    - name: IMAGE_TAG
      value: 14.8.0-pgvector-v0.6.1
    - name: TARGET_POD_ROLE
      # TODO input by backup policy
      value: primary
  backup:
    backupData:
      image: {{ include "postgresql.repository" . }}:$(IMAGE_TAG)
      runOnTargetPodNode: true
      syncProgress:
        enabled: true
        intervalSeconds: 5
      command:
      - bash
      - -c
      - |
        #!/bin/bash
        set -e
        set -o pipefail
        {{- .Files.Get "dataprotection/common-scripts.sh" | nindent 8 }}
        {{- .Files.Get "dataprotection/wal-g-archive.sh" | nindent 8 }}
    preDelete:
      image: {{ .Values.image.registry | default "docker.io" }}/apecloud/wal-g:{{ .Values.image.walg.tag }}
      command:
        - bash
        - -c
        - |
        {{- .Files.Get "dataprotection/wal-g-archive-delete.sh" | nindent 10 }}
  restore:
    prepareData:
      image: {{ .Values.image.registry | default "docker.io" }}/apecloud/wal-g:{{ .Values.image.walg.tag }}
      command:
      - bash
      - -c
      - |
        {{- .Files.Get "dataprotection/wal-g-archive-restore.sh" | nindent 8 }}