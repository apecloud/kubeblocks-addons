{{- $cc := .Files.Get "config/pg16-config-effect-scope.yaml" | fromYaml }}
apiVersion: parameters.kubeblocks.io/v1alpha1
kind: ParametersDefinition
metadata:
  name: {{ include "postgresql16.parametersDefinition" . }}
  labels:
    {{- include "postgresql.labels" . | nindent 4 }}
  annotations:
    {{- include "postgresql.annotations" . | nindent 4 }}
spec:
  fileName: postgresql.conf

  reloadAction:
    shellTrigger:
      sync: true
      batchReload: true
      batchParamsFormatterTemplate: |-
        {{ `{{- $pgparams := dict -}}` }}
        {{ `{{- range $pk, $val := $ -}}` }}
        {{ `{{- $_ := set $pgparams $pk ($val | trimAll "'") -}}` }}
        {{ `{{- end -}}` }}
        {{ `{{- (toJson (dict "postgresql" (dict "parameters" $pgparams))) -}}` }}
      command:
        - "reload_config.sh"
      scriptConfig:
        scriptConfigMapRef: {{ include "postgresql.patroniReloadScriptsTemplate" . }}
        namespace: {{ .Release.Namespace }}
    # update patroni master
    targetPodSelector:
      matchLabels:
        "apps.kubeblocks.postgres.patroni/role": "master"

  mergeReloadAndRestart: false

  # ConfigurationSchema that impose restrictions on engine parameter's rule
  parametersSchema:
    # top level pg configuration type
    topLevelKey: PGParameter

    # schemaInJSON: auto generate from cue scripts
    # example: ../../pkg/configuration/testdata/mysql_openapi.json
    cue: |-
      {{- .Files.Get "config/pg16-config-constraint.cue" | nindent 6 }}

  ##  require db instance restart
  ## staticParameters
  {{- if hasKey $cc "staticParameters" }}
  staticParameters:
    {{- $params := get $cc "staticParameters" }}
    {{- range $params }}
    - {{ . }}
    {{- end }}
  {{- end}}

  ## define immutable parameter list, this feature is not currently supported.
  {{- if hasKey $cc "immutableParameters" }}
  immutableParameters:
   {{- $params := get $cc "immutableParameters" }}
   {{- range $params }}
    - {{ . }}
   {{- end }}
  {{- end}}
