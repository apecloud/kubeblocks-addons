apiVersion: apps.kubeblocks.io/v1
kind: ComponentDefinition
metadata:
  name: {{ include "mysql.componentDefName84" . }}
  labels:
      {{- include "mysql.labels" . | nindent 4 }}
  annotations:
    {{- include "mysql.annotations" . | nindent 4 }}
spec:
  {{- include "mysql.spec.common" . | nindent 2 }}
  serviceVersion: 8.4.2

  configs:
    - name: mysql-replication-config
      templateRef: mysql-8.0-config-template
      constraintRef: mysql-8.0-config-constraints
      volumeName: mysql-config
      namespace: {{ .Release.Namespace }}
      reRenderResourceTypes:
        - vscale
  runtime:
    initContainers:
      - command:
          - cp
          - -r
          - /xtrabackup
          - /tools/xtrabackup
        image: {{ .Values.image.registry | default "docker.io" }}/apecloud/xtrabackup:8.4
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
        name: init-xtrabackup
        volumeMounts:
          - mountPath: /tools
            name: tools
      - command:
          - cp
          - -r
          - /jemalloc/lib/
          - /tools/lib
        image: {{ .Values.image.registry | default "docker.io" }}/apecloud/jemalloc:5.3.0
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
        name: init-jemalloc
        volumeMounts:
          - mountPath: /tools
            name: tools
      {{- include "mysql.spec.runtime.common" . | nindent 6 }}
    containers:
      - name: mysql
        image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:8.4.2
        imagePullPolicy: {{ default .Values.image.pullPolicy "IfNotPresent" }}
        command:
          - syncer
          - --port
          - "3601"
          - --
          - bash
          - -c
          - |
            mkdir -p {{ .Values.dataMountPath }}/{log,binlog,auditlog}
            chown -R mysql:root {{ .Values.dataMountPath }}
            skip_slave_start="OFF"
            export LD_PRELOAD=/tools/lib/libjemalloc.so.2 
            if [ -f {{ .Values.dataMountPath }}/data/.restore_new_cluster ]; then
              skip_slave_start="ON"
            fi
            SERVICE_ID=$((${SYNCER_POD_NAME##*-} + 1))
            docker-entrypoint.sh mysqld --server-id $SERVICE_ID \
               --plugin-load-add=rpl_semi_sync_source=semisync_source.so \
               --plugin-load-add=rpl_semi_sync_replica=semisync_replica.so \
               --log-bin=/var/lib/mysql/binlog/${SYNCER_POD_NAME}-bin \
               --skip-slave-start=$skip_slave_start
        volumeMounts:
          - mountPath: {{ .Values.dataMountPath }}
            name: data
          - mountPath: /etc/mysql/conf.d
            name: mysql-config
          - name: scripts
            mountPath: /scripts
          - mountPath: /tools
            name: tools
        ports:
          - containerPort: 3306
            name: mysql
          - containerPort: 3601
            name: ha
        env:
          - name: PATH
            value: /tools/xtrabackup/bin:/tools/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
          - name: KB_SERVICE_CHARACTER_TYPE
            value: mysql
          - name: MYSQL_INITDB_SKIP_TZINFO
            value: "1"
          - name: MYSQL_ROOT_HOST
            value: {{ .Values.auth.rootHost | default "%" | quote }}
          - name: SERVICE_PORT
            value: "3306"
          - name: SYNCER_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: SYNCER_POD_UID
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.uid
          - name: SYNCER_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP

