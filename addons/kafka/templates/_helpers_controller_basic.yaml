provider: kubeblocks
description: Kafka controller that act as controllers (kraft) only server.
serviceKind: kafka-controller
serviceVersion: {{ default .Chart.AppVersion .Values.clusterVersionOverride }}
updateStrategy: BestEffortParallel
monitor:
  builtIn: false
  exporterConfig:
    scrapePath: /metrics
    scrapePort: 5556
configs:
  - name: kafka-configuration-tpl
    constraintRef: {{ include "kafka.name" . }}-cc
    templateRef: {{ include "kafka.name" . }}-configuration-tpl
    volumeName: kafka-config
    namespace: {{ .Release.Namespace }}
  - name: kafka-jmx-configuration-tpl
    templateRef: {{ include "kafka.name" . }}-jmx-configuration-tpl
    volumeName: jmx-config
    namespace: {{ .Release.Namespace }}
scripts:
  - name: kafka-scripts-tpl
    templateRef: {{ include "kafka.name" . }}-server-scripts-tpl
    volumeName: scripts
    namespace: {{ .Release.Namespace }}
    defaultMode: 0755
runtime:
  securityContext:
    fsGroup: 1001
  containers:
    - name: kafka
      image: {{ .Values.images.kafka.repository }}:{{ default .Chart.AppVersion .Values.images.kafka.tag }}
      imagePullPolicy: {{ default "IfNotPresent" .Values.images.pullPolicy }}
      securityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
        runAsUser: 1001
      command:
        - /scripts/kafka-server-setup.sh
      env:
        - name: BITNAMI_DEBUG
          value: {{ .Values.debugEnabled | quote }}
        - name: MY_POD_IP
          value: "$(KB_PODIP)"
          # value: "$(KB_POD_IP)"
        - name: MY_POD_NAME
          value: "$(KB_POD_NAME)"
        - name: KAFKA_ENABLE_KRAFT
          value: "yes"
        - name: KAFKA_CFG_PROCESS_ROLES
          value: "controller"
        - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES # required for KRaft
          value: "CONTROLLER"
        - name: KAFKA_CFG_LISTENERS # required for KRaft
          value: "CONTROLLER://:9093"
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: "CONTROLLER:PLAINTEXT"
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: JMX_PORT
          value: "5555"
        - name: KAFKA_VOLUME_DIR
          value: "/bitnami/kafka"
        - name: KAFKA_CFG_METADATA_LOG_DIR
          value: "/bitnami/kafka/metadata"
        - name: KAFKA_LOG_DIR
          value: "/bitnami/kafka/data"
        - name: KAFKA_HEAP_OPTS
          #value: "-Xmx1024m -Xms1024m"
          value: "-XshowSettings:vm -XX:MaxRAMPercentage=100 -Ddepth=64"
        - name: SERVER_PROP_FILE
          value: /scripts/server.properties
        - name: KAFKA_CFG_SUPER_USERS
          value: "User:$(SUPER_USER)"
        - name: KAFKA_KRAFT_CLUSTER_ID
          value: $(KB_CLUSTER_UID)
      ports:
        - name: kafka-ctrlr
          containerPort: 9093
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
        tcpSocket:
          port: kafka-ctrlr
      startupProbe:
        failureThreshold: 30
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
        tcpSocket:
          port: kafka-ctrlr
      volumeMounts:
        - name: metadata
          mountPath: /bitnami/kafka
        - name: kafka-config
          mountPath: /scripts/server.properties
          subPath: server.properties
        - name: scripts
          mountPath: /scripts/kafka-server-setup.sh
          subPath: kafka-server-setup.sh
        - name: scripts
          mountPath: /opt/bitnami/scripts/kafka-env.sh
          subPath: kafka-env.sh
    - name: jmx-exporter
      image: {{ .Values.images.jmxExporter.repository }}:{{ .Values.images.jmxExporter.tag }}
      imagePullPolicy: {{ default "IfNotPresent" .Values.images.pullPolicy }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
      command:
        - java
      args:
        - -XX:MaxRAMPercentage=100
        - -XshowSettings:vm
        - -jar
        - jmx_prometheus_httpserver.jar
        - "5556"
        - /etc/jmx-kafka/jmx-kafka-prometheus.yml
      ports:
        - name: metrics
          containerPort: 5556
      volumeMounts:
        - name: jmx-config
          mountPath: /etc/jmx-kafka
      env:
        - name: SERVICE_PORT
          value: "5556"