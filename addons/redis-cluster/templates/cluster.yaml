{{- if .Values.useLegacyCompDef }}
{{- include "kblib.clusterCommon" . }}
  clusterDefinitionRef: redis  # ref clusterDefinition.name
  componentSpecs:
    - name: redis
      componentDefRef: redis # ref clusterDefinition componentDefs.name
      {{- include "kblib.componentMonitor" . | indent 6 }}
      {{- include "redis-cluster.replicaCount" . | indent 6 }}
      enabledLogs:
        - running
      serviceAccountName: {{ include "kblib.serviceAccountName" . }}
      switchPolicy:
        type: Noop
      {{- include "kblib.componentResources" . | indent 6 }}
      {{- include "kblib.componentStorages" . | indent 6 }}
      {{- include "kblib.componentServices" . | indent 6 }}

    {{- if and (eq .Values.mode "replication") .Values.twemproxy.enabled }}
    {{- include "redis-cluster.twemproxy" . | indent 4 }}
    {{- end }}

    {{- if and (eq .Values.mode "replication") .Values.sentinel.enabled }}
    {{- include "redis-cluster.sentinel" . | indent 4 }}
    {{- end }}
{{- else if .Values.nodePortEnabled }}
{{- include "redis-cluster.clusterCommonWithNodePort" . }}
{{- else }}
{{- include "kblib.clusterCommon" . }}
{{- end }}
  clusterDefinitionRef: redis  # ref clusterDefinition.name
  componentSpecs:
    - name: redis
      componentDef: redis
      {{- include "kblib.componentMonitor" . | indent 6 }}
      {{- include "redis-cluster.replicaCount" . | indent 6 }}
      enabledLogs:
        - running
      serviceAccountName: {{ include "kblib.serviceAccountName" . }}
      switchPolicy:
        type: Noop
      {{- include "kblib.componentResources" . | indent 6 }}
      {{- include "kblib.componentStorages" . | indent 6 }}
      {{- include "kblib.componentServices" . | indent 6 }}
    {{- if and (eq .Values.mode "replication") .Values.sentinel.enabled }}
    {{- include "redis-cluster.sentinelCompDef" . | indent 4 }}
    {{- end }}