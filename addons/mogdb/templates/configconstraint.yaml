{{- $cc := .Files.Get "config/mogdb-config-effect-scope.yaml" | fromYaml }}
apiVersion: apps.kubeblocks.io/v1beta1
kind: ConfigConstraint
metadata:
  name: {{ printf "%s-cc" (include "mogdb-release.name" .) }}
  labels:
    {{- include "mogdb.labels" . | nindent 4 }}
spec:
  reloadOptions:
    shellTrigger:
      sync: true
      command:
        - "update-parameters.sh"

  scriptConfigs:
    - scriptConfigMapRef: {{ printf "%s-reload-tools-script" (include "mogdb-release.name" .) }}
      namespace: {{ .Release.Namespace }}

  toolsImageSpec:
    mountPoint: /kb_tools
    toolConfigs:
      - name: kb-tools
        command:
          - cp
          - /bin/mscli
          - /kb_tools/mscli
        image: {{ .Values.tools.image.registry | default "docker.io" }}/{{ .Values.tools.image.repository }}:{{ .Values.tools.image.tag }}

  # top level pg configuration type
  configSchemaTopLevelKey: PGParameter

  # ConfigurationSchema that impose restrictions on engine parameter's rule
  configSchema:
    # schemaInJSON: auto generate from cue scripts
    # example: ../../pkg/configuration/testdata/mysql_openapi.json
    cue: |-
      {{- .Files.Get "config/mogdb-config-constraint.cue" | nindent 6 }}

  ##  require db instance restart
  ## staticParameters
  {{- if hasKey $cc "staticParameters" }}
  staticParameters:
    {{- $params := get $cc "staticParameters" }}
    {{- range $params }}
    - {{ . }}
    {{- end }}
  {{- end}}

  ## define immutable parameter list, this feature is not currently supported.
  {{- if hasKey $cc "immutableParameters" }}
  immutableParameters:
   {{- $params := get $cc "immutableParameters" }}
   {{- range $params }}
    - {{ . }}
   {{- end }}
  {{- end}}

    # configuration file format
  formatterConfig:
    format: ini
