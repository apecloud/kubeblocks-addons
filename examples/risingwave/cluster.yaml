apiVersion: apps.kubeblocks.io/v1
kind: Cluster
metadata:
  name: risingwave-cluster
  namespace: default
spec:
  terminationPolicy: Delete
  clusterDef: risingwave
  topology: cluster
  componentSpecs:
    - name: meta
      replicas: 1
      env:
        # Directory for storing data
        - name: RW_DATA_DIRECTORY
          value: prefix
        # MinIO username
        - name: MINIO_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: minio-cluster-minio-account-root
        # MinIO password
        - name: MINIO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: minio-cluster-minio-account-root
        # MinIO bucket name
        - name: MINIO_BUCKET
          value: test-bucket
        # MinIO endpoint
        - name: MINIO_ENDPOINT
          value: minio-cluster-minio.default.svc.cluster.local:9000
        # State store configuration
        - name: RW_STATE_STORE
          value: hummock+minio://$(MINIO_USER):$(MINIO_PASSWORD)@$(MINIO_ENDPOINT)/$(MINIO_BUCKET)
        # ETCD endpoints
        - name: RW_ETCD_ENDPOINTS
          value: etcd-cluster-etcd-headless.default.svc.cluster.local:2379
        # ETCD authentication
        - name: RW_ETCD_AUTH
          value: "false"
        # Telemetry enable flag
        - name: ENABLE_TELEMETRY
          value: "false"
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 500Mi
      serviceVersion: v1.0.0
    - name: compactor
      env:
        # Directory for storing data
        - name: RW_DATA_DIRECTORY
          value: prefix
        # MinIO username
        - name: MINIO_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: minio-cluster-minio-account-root
        # MinIO password
        - name: MINIO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: minio-cluster-minio-account-root
        # MinIO bucket name
        - name: MINIO_BUCKET
          value: test-bucket
        # MinIO endpoint
        - name: MINIO_ENDPOINT
          value: minio-cluster-minio.default.svc.cluster.local:9000
        # State store configuration
        - name: RW_STATE_STORE
          value: hummock+minio://$(MINIO_USER):$(MINIO_PASSWORD)@$(MINIO_ENDPOINT)/$(MINIO_BUCKET)
        # Telemetry enable flag
        - name: ENABLE_TELEMETRY
          value: "false"
      replicas: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 500Mi
      serviceVersion: v1.0.0
    - name: compute
      env:
        # Directory for storing data
        - name: RW_DATA_DIRECTORY
          value: prefix
        # MinIO username
        - name: MINIO_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: minio-cluster-minio-account-root
        # MinIO password
        - name: MINIO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: minio-cluster-minio-account-root
        # MinIO bucket name
        - name: MINIO_BUCKET
          value: test-bucket
        # MinIO endpoint
        - name: MINIO_ENDPOINT
          value: minio-cluster-minio.default.svc.cluster.local:9000
        # State store configuration
        - name: RW_STATE_STORE
          value: hummock+minio://$(MINIO_USER):$(MINIO_PASSWORD)@$(MINIO_ENDPOINT)/$(MINIO_BUCKET)
      replicas: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 500Mi
      serviceVersion: v1.0.0
    - name: connector
      replicas: 1
      env:
        # Directory for storing data
        - name: RW_DATA_DIRECTORY
          value: prefix
        # MinIO username
        - name: MINIO_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: minio-cluster-minio-account-root
        # MinIO password
        - name: MINIO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: minio-cluster-minio-account-root
        # MinIO bucket name
        - name: MINIO_BUCKET
          value: test-bucket
        # MinIO endpoint
        - name: MINIO_ENDPOINT
          value: minio-cluster-minio.default.svc.cluster.local:9000
        # State store configuration
        - name: RW_STATE_STORE
          value: hummock+minio://$(MINIO_USER):$(MINIO_PASSWORD)@$(MINIO_ENDPOINT)/$(MINIO_BUCKET)
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 500Mi
      serviceVersion: v1.0.0
    - name: frontend
      env:
        # State store configuration
        - name: RW_STATE_STORE
          value: hummock+minio://$(MINIO_USER):$(MINIO_PASSWORD)@$(MINIO_ENDPOINT)/$(MINIO_BUCKET)
        # Directory for storing data
        - name: RW_DATA_DIRECTORY
          value: prefix
        # MinIO username
        - name: MINIO_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: minio-cluster-minio-account-root
        # MinIO password
        - name: MINIO_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: minio-cluster-minio-account-root
        # MinIO bucket name
        - name: MINIO_BUCKET
          value: test-bucket
        # MinIO endpoint
        - name: MINIO_ENDPOINT
          value: minio-cluster-minio.default.svc.cluster.local:9000
      replicas: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 500Mi
      serviceVersion: v1.0.0
