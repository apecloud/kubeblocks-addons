apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  name: milvus-cluster
  namespace: default
spec:
  # Specifies the name of the ClusterTopology to be used when creating the Cluster. This field defines which set of Components, as outlined in the ClusterDefinition, will be used to construct the Cluster based on the named topology.
  topology: cluster
  # Specifies the behavior when a Cluster is deleted.
  # - `DoNotTerminate`: Prevents deletion of the Cluster. This policy ensures that all resources remain intact.
  # - `Halt`: Deletes Cluster resources like Pods and Services but retains Persistent Volume Claims (PVCs), allowing for data preservation while stopping other operations.
  # - `Delete`: Extends the `Halt` policy by also removing PVCs, leading to a thorough cleanup while removing all persistent data.
  # - `WipeOut`: An aggressive policy that deletes all Cluster resources, including volume snapshots and backups in external storage. This results in complete data removal and should be used cautiously, primarily in non-production environments to avoid irreversible data loss.
  terminationPolicy: Delete
  # Defines a set of node affinity scheduling rules for the Cluster's Pods. This field helps control the placement of Pods on nodes within the cluster.
  affinity:
    # Specifies the anti-affinity level of Pods within a Component. It determines how pods should be spread across nodes to improve availability and performance.
    podAntiAffinity: Preferred
    # Represents the key of node labels used to define the topology domain for Pod anti-affinity and Pod spread constraints.
    topologyKeys:
      - kubernetes.io/hostname
    # Determines the level of resource isolation between Pods. It can have the following values: `SharedNode` and `DedicatedNode`.
    # - SharedNode: Allow that multiple Pods may share the same node, which is the default behavior of K8s.
    # - DedicatedNode: Each Pod runs on a dedicated node, ensuring that no two Pods share the same node.
    tenancy: SharedNode
  # An array that specifies tolerations attached to the Cluster's Pods, allowing them to be scheduled onto nodes with matching taints.
  tolerations:
    - key: kb-data
      operator: Equal
      value: 'true'
      effect: NoSchedule
  # Specifies a list of ClusterComponentSpec objects used to define the individual components that make up a Cluster. This field allows for detailed configuration of each component within the Cluster.
  # Note: `shardingSpecs` and `componentSpecs` cannot both be empty; at least one must be defined to configure a cluster.
  # ClusterComponentSpec defines the specifications for a Component in a Cluster.
  componentSpecs:
    - name: proxy
      componentDef: milvus-proxy-0.9.0
      serviceAccountName: kb-milvus-cluster
      replicas: 1
      resources:
        limits:
          cpu: '0.5'
          memory: 0.5Gi
        requests:
          cpu: '0.5'
          memory: 0.5Gi
      serviceRefs:
        - cluster: etcdm-cluster
          name: milvus-meta-storage
        - cluster: pulsarm-cluster
          name: milvus-log-storage
        - name: milvus-object-storage
          namespace: default
          clusterServiceSelector:
            cluster: miniom-cluster
            service:
              component: minio
              service: headless
              port: http
            credential:
              component: minio
              name: admin
    - name: mixcoord
      componentDef: milvus-mixcoord-0.9.0
      serviceAccountName: kb-milvus-cluster
      replicas: 1
      resources:
        limits:
          cpu: '0.5'
          memory: 0.5Gi
        requests:
          cpu: '0.5'
          memory: 0.5Gi
      serviceRefs:
        - cluster: etcdm-cluster
          name: milvus-meta-storage
        - cluster: pulsarm-cluster
          name: milvus-log-storage
        - name: milvus-object-storage
          namespace: default
          clusterServiceSelector:
            cluster: miniom-cluster
            service:
              component: minio
              service: headless
              port: http
            credential:
              component: minio
              name: admin
    - name: datanode
      componentDef: milvus-datanode-0.9.0
      serviceAccountName: kb-milvus-cluster
      replicas: 1
      resources:
        limits:
          cpu: '0.5'
          memory: 0.5Gi
        requests:
          cpu: '0.5'
          memory: 0.5Gi
      serviceRefs:
        - cluster: etcdm-cluster
          name: milvus-meta-storage
        - cluster: pulsarm-cluster
          name: milvus-log-storage
        - name: milvus-object-storage
          namespace: default
          clusterServiceSelector:
            cluster: miniom-cluster
            service:
              component: minio
              service: headless
              port: http
            credential:
              component: minio
              name: admin
    - name: indexnode
      componentDef: milvus-indexnode-0.9.0
      serviceAccountName: kb-milvus-cluster
      replicas: 1
      resources:
        limits:
          cpu: '0.5'
          memory: 0.5Gi
        requests:
          cpu: '0.5'
          memory: 0.5Gi
      serviceRefs:
        - cluster: etcdm-cluster
          name: milvus-meta-storage
        - cluster: pulsarm-cluster
          name: milvus-log-storage
        - name: milvus-object-storage
          namespace: default
          clusterServiceSelector:
            cluster: miniom-cluster
            service:
              component: minio
              service: headless
              port: http
            credential:
              component: minio
              name: admin
    - name: querynode
      componentDef: milvus-querynode-0.9.0
      serviceAccountName: kb-milvus-cluster
      replicas: 1
      resources:
        limits:
          cpu: '0.5'
          memory: 0.5Gi
        requests:
          cpu: '0.5'
          memory: 0.5Gi
      serviceRefs:
        - cluster: etcdm-cluster
          name: milvus-meta-storage
        - cluster: pulsarm-cluster
          name: milvus-log-storage
        - name: milvus-object-storage
          namespace: default
          clusterServiceSelector:
            cluster: miniom-cluster
            service:
              component: minio
              service: headless
              port: http
            credential:
              component: minio
              name: admin
---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  name: etcdm-cluster
  namespace: default
spec:
  clusterDefinitionRef: etcd
  clusterVersionRef: etcd-v3.5.6
  terminationPolicy: WipeOut
  affinity:
    podAntiAffinity: Preferred
    topologyKeys:
      - kubernetes.io/hostname
    tenancy: SharedNode
  tolerations:
    - key: kb-data
      operator: Equal
      value: 'true'
      effect: NoSchedule
  componentSpecs:
    - name: etcd
      componentDefRef: etcd
      replicas: 1
      resources:
        limits:
          cpu: '0.5'
          memory: 0.5Gi
        requests:
          cpu: '0.5'
          memory: 0.5Gi
      serviceAccountName: kb-etcdm-cluster
      volumeClaimTemplates:
        - name: data
          spec:
            storageClassName: null
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 20Gi
---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  name: pulsarm-cluster
  namespace: default
  annotations:
    "kubeblocks.io/extra-env": '{"KB_PULSAR_BROKER_NODEPORT": "false"}'
spec:
  clusterDefinitionRef: pulsar
  clusterVersionRef: pulsar-3.0.2
  terminationPolicy: WipeOut
  affinity:
    podAntiAffinity: Preferred
    topologyKeys:
      - kubernetes.io/hostname
    tenancy: SharedNode
  tolerations:
    - key: kb-data
      operator: Equal
      value: 'true'
      effect: NoSchedule
  componentSpecs:
    - name: pulsar-broker
      componentDefRef: pulsar-broker
      disableExporter: true
      serviceAccountName: kb-pulsarm-cluster
      replicas: 1
      resources:
        limits:
          cpu: '0.5'
          memory: 0.5Gi
        requests:
          cpu: '0.5'
          memory: 0.5Gi
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 20Gi
    - name: bookies
      componentDefRef: bookies
      disableExporter: true
      replicas: 1
      resources:
        limits:
          cpu: '0.5'
          memory: 0.5Gi
        requests:
          cpu: '0.5'
          memory: 0.5Gi
      volumeClaimTemplates:
        - name: journal
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 20Gi
        - name: ledgers
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 20Gi
    - name: zookeeper
      componentDefRef: zookeeper
      disableExporter: true
      replicas: 1
      resources:
        limits:
          cpu: '0.5'
          memory: 0.5Gi
        requests:
          cpu: '0.5'
          memory: 0.5Gi
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 20Gi
---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  name: miniom-cluster
  namespace: default
spec:
  terminationPolicy: WipeOut
  componentSpecs:
    - name: minio
      componentDef: milvus-minio-0.9.0
      serviceAccountName: kb-miniom-cluster
      replicas: 1
      resources:
        limits:
          cpu: '0.5'
          memory: 0.5Gi
        requests:
          cpu: '0.5'
          memory: 0.5Gi
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 20Gi