## cluster settings for polardbx cluster
nameOverride: pxc
polardbx:
  ## @param polardbx.terminationPolicy, temination policy for polardbx cluster
  terminationPolicy: WipeOut

gms:
  ## @param gms.replicas data replicas of gms instance
  ## Default value is 3, which means a paxos group: leader, follower, follower
  replicas: 3

  ## @param gms.resources
  ## resource management for gms component
  ## more info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
    requests:
      cpu: "1"
      memory: "1Gi"
    limits:
      cpu: "1"
      memory: "1Gi"


  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param shard[*].persistence.enabled Enable persistence using Persistent Volume Claims
    ##
    enabled: true
    ## `data` volume settings
    ##
    data:
      ## @param shard[*].persistence.data.storageClassName Storage class of backing PVC
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClassName:
      ## @param shard[*].persistence.size Size of data volume
      ##
      size: 20Gi

dn:
  -
    ## @param dn[*].replicas data replicas of each DN instance
    ## Default value is 3, which means a paxos group: leader, follower, follower
    replicas: 3
    ## @param dn[*].resources
    ## resource management for dn component
    ## more info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
    resources:
      requests:
        cpu: "1"
        memory: "1Gi"
      limits:
        cpu: "1"
        memory: "1Gi"

    ## Enable persistence using Persistent Volume Claims
    ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    persistence:
      ## @param shard[*].persistence.enabled Enable persistence using Persistent Volume Claims
      ##
      enabled: true
      ## `data` volume settings
      ##
      data:
        ## @param shard[*].persistence.data.storageClassName Storage class of backing PVC
        ## If defined, storageClassName: <storageClass>
        ## If set to "-", storageClassName: "", which disables dynamic provisioning
        ## If undefined (the default) or set to null, no storageClassName spec is
        ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
        ##   GKE, AWS & OpenStack)
        ##
        storageClassName:
        ## @param shard[*].persistence.size Size of data volume
        ##
        size: 20Gi

cn:
  ## @param cn.replicas number of polardb-x cn nodes
  replicas: 2
  ## @param cn.resources
  ## resource management for cn component
  ## more info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
    requests:
      cpu: "1"
      memory: "1Gi"
    limits:
      cpu: "1"
      memory: "1Gi"

cdc:
  ## @param cdc.replicas number of polardb-x cdc nodes
  replicas: 2
  ## @param cdc.resources
  ## resource management for cdc component
  ## more info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
    requests:
      cpu: "1"
      memory: "1Gi"
    limits:
      cpu: "1"
      memory: "1Gi"

# Commit related information
# @param commitInfo - (object) Contains metadata about the last code commit.
commitInfo:
  # @param commitInfo.commitTime - (string) The timestamp of the last code commit, formatted as "YYYY-MM-DD HH:MM:SS".
  # This parameter is used to record the exact time of the most recent code commit.
  commitTime: "2024-12-03 07:22:10"

  # @param commitInfo.commitId - (string) The Git commit hash.
  # This parameter is used to track the specific Git commit identifier associated with the deployment.
  commitId: "6c2884d88b2e4111a6140d1c108ecfec8dbd5246"
