apiVersion: apps.kubeblocks.io/v1
kind: Cluster
metadata:
  name: {{ include "kblib.clusterName" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "kblib.clusterLabels" . | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations:
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- if eq .Values.version "pulsar-3.0.2" }}
    ## Todo: use cluster api to control the rendering logic of service in component definition
    {{- include "pulsar-cluster.brokerAddrFeatureGate" . | nindent 4 }}
    "kubeblocks.io/extra-env": '{"KB_PULSAR_BROKER_NODEPORT": "{{ $.Values.nodePortEnabled }}"}'
    {{- end }}
  {{- end }}
spec:
  terminationPolicy: {{ $.Values.extra.terminationPolicy }}
  {{- $topologyEnable :=  eq .Values.mode "" | default false }}
  {{- if $topologyEnable}}
  clusterDefinitionRef: pulsar
  topology: {{ .Values.mode }}
  {{- end }}
  affinity:
    {{- with $.Values.topologyKeys }}
    topologyKeys: {{ . | toYaml | nindent 6 }}
    {{- end }}
  {{- with $.Values.tolerations }}
  tolerations: {{ . | toYaml | nindent 4 }}
  {{- end }}
  services:
    {{- if .Values.proxy.enabled }}
    - name: proxy
      serviceName: proxy
      componentSelector: proxy
      spec:
        type: ClusterIP
        ports:
          - name: pulsar
            port: 6650
            targetPort: 6650
          - name: http
            port: 80
            targetPort: 8080
    {{- end }}
    {{- if eq .Values.version "pulsar-3.0.2" }}
    - name: broker-bootstrap
      serviceName: broker-bootstrap
      componentSelector: broker
      spec:
        {{- if .Values.nodePortEnabled }}
        type: NodePort
        {{- else }}
        type: ClusterIP
        {{- end }}
        ports:
          - name: pulsar
            port: 6650
            targetPort: 6650
          - name: http
            port: 80
            targetPort: 8080
          - name: kafka-client
            port: 9092
            targetPort: 9092
    {{- if not .Values.serviceReference.enabled }}
    - name: zookeeper
      serviceName: zookeeper
      componentSelector: zookeeper
      spec:
        type: ClusterIP
        ports:
          - name: client
            port: 2181
            targetPort: 2181
    {{- end }}
    {{- end }}
  componentSpecs:
  {{- if or (eq .Values.mode "pulsar-enhanced-cluster") (and (not $topologyEnable) .Values.proxy.enabled) }}
    - name: proxy
    {{- if not  $topologyEnable }}
      componentDef: pulsar-proxy
      {{- end }}
      {{ include "pulsar-zookeeper-ref" . | nindent 6 }}
      monitor: {{ .Values.monitor.enabled | default false }}
      replicas: {{ .Values.proxy.replicaCount | default 3 }}
      {{- with  .Values.proxy.resources }}
      resources:
      {{- if .limits }}
        limits:
          cpu: {{ .limits.cpu | quote }}
          memory: {{ .limits.memory | quote }}
      {{- end }}
      {{- if .requests }}
        requests:
          cpu: {{ .requests.cpu | quote }}
          memory: {{ .requests.memory | quote }}
      {{- end }}
      {{- end }}
    {{- end }}
  {{- if or (eq .Values.mode "pulsar-enhanced-cluster") ( and (not $topologyEnable) .Values.bookiesRecovery.enabled) }}
    - name: bookies-recovery
    {{- if not $topologyEnable }}
      componentDef: pulsar-bkrecovery
      {{- end }}
      {{ include "pulsar-zookeeper-ref" . | nindent 6 }}
      monitor: {{ .Values.monitor.enabled | default false }}
      replicas: {{ .Values.bookiesRecovery.replicaCount | default 3 }}
    {{- with  .Values.bookiesRecovery.resources }}
      resources:
      {{- if .limits }}
        limits:
          cpu: {{ .limits.cpu | quote }}
          memory: {{ .limits.memory | quote }}
      {{- end }}
      {{- if .requests }}
        requests:
          cpu: {{ .requests.cpu | quote }}
          memory: {{ .requests.memory | quote }}
      {{- end }}
      {{- end }}
  {{- end }}
    - name: broker
      {{- if not  $topologyEnable }}
      componentDef: pulsar-broker
      {{- end }}
      {{ include "pulsar-zookeeper-ref" . | nindent 6 }}
      monitor: {{ .Values.monitor.enabled | default false }}
      {{- if .Values.nodePortEnabled }}
      services:
        - name: advertised-listener
          serviceType: NodePort
          podService: true
      {{- end }}
      replicas: {{ .Values.broker.replicaCount | default 3 }}
      {{- with  .Values.broker.resources }}
      resources:
      {{- if .limits }}
        limits:
          cpu: {{ .limits.cpu | quote }}
          memory: {{ .limits.memory | quote }}
      {{- end }}
      {{- if .requests }}
        requests:
          cpu: {{ .requests.cpu | quote }}
          memory: {{ .requests.memory | quote }}
      {{- end }}
      {{- end }}
    - name: bookies
      {{- if not  $topologyEnable }}
      componentDef: pulsar-bookkeeper
      {{- end }}
      {{ include "pulsar-zookeeper-ref" . | nindent 6 }}
      monitor: {{ .Values.monitor.enabled | default false }}
      {{- $bookiesReplicas := .Values.bookies.replicaCount }}
      {{- if and ( eq (int $bookiesReplicas) 3 ) ( eq .Values.bookies.mode "generic" ) }}
        {{- $bookiesReplicas = 4 }}
      {{- end }}
      replicas: {{ $bookiesReplicas | default 3 }}
      {{- with  .Values.bookies.resources }}
      resources:
        {{- if .limits }}
        limits:
          cpu: {{ .limits.cpu | quote }}
          memory: {{ .limits.memory | quote }}
        {{- end }}
        {{- if .requests }}
        requests:
          cpu: {{ .requests.cpu | quote }}
          memory: {{ .requests.memory | quote }}
        {{- end }}
      {{- end }}
      {{- if .Values.bookies.persistence.enabled }}
      volumeClaimTemplates:
        - name: ledgers
          spec:
            accessModes:
              - ReadWriteOnce
            {{- if .Values.bookies.persistence.data.storageClassName }}
            storageClassName: {{ .Values.bookies.persistence.data.storageClassName}}
            {{- end }}
            resources:
              requests:
                storage: {{ .Values.bookies.persistence.data.size }}
        - name: journal
          spec:
            accessModes:
              - ReadWriteOnce
            {{- if .Values.bookies.persistence.log.storageClassName }}
            storageClassName: {{ .Values.bookies.persistence.log.storageClassName}}
            {{- end }}
            resources:
              requests:
                storage: {{ .Values.bookies.persistence.log.size }}
      {{- end }}
    {{- if not .Values.serviceReference.enabled }}
    - name: zookeeper
      {{- if not  $topologyEnable }}
      componentDef: pulsar-zookeeper
      {{- end }}
      monitor: {{ .Values.monitor.enabled | default false }}
      replicas: {{ .Values.zookeeper.replicaCount | default 3 }}
      {{- with  .Values.zookeeper.resources }}
      resources:
        {{- if .limits }}
        limits:
          cpu: {{ .limits.cpu | quote }}
          memory: {{ .limits.memory | quote }}
        {{- end }}
        {{- if .requests }}
        requests:
          cpu: {{ .requests.cpu | quote }}
          memory: {{ .requests.memory | quote }}
        {{- end }}
      {{- end }}
      {{- if .Values.zookeeper.persistence.enabled }}
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            {{- if .Values.zookeeper.persistence.data.storageClassName }}
            storageClassName: {{ .Values.zookeeper.persistence.data.storageClassName}}
            {{- end }}
            resources:
              requests:
                storage: {{ .Values.zookeeper.persistence.data.size }}
      {{- end }}
  {{- end }}
