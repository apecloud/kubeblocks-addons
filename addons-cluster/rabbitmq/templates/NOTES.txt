** Please be patient while the chart is being deployed **

To get RabbitMQ connection address accessed from within your cluster:

    export RABBITMQ_ADDRESS=$(kubectl get secret --namespace {{ .Release.Namespace }} -l app.kubernetes.io/managed-by=kubeblocks,app.kubernetes.io/instance={{ .Release.Name }} -o jsonpath="{.items[0].data.headlessEndpoint}" | base64 -d)

To get erlang cookie run:

    export ERLANG_COOKIE=$(kubectl get configmap --namespace {{ .Release.Namespace }} {{ .Release.Name }}-rabbitmq-config -o jsonpath="{.data.\.erlang\.cookie}")

To get the root password run:

    export RABBITMQ_ROOT_PASSWORD=$(kubectl get secret --namespace {{ .Release.Namespace }} -l app.kubernetes.io/managed-by=kubeblocks,app.kubernetes.io/instance={{ .Release.Name}} -o jsonpath="{.items[0].data.password}" | base64 -d)

To connect to your database, create a RabbitMQ client container:

    kubectl run --namespace {{ .Release.Namespace }} {{ .Release.Name }}-client --rm --tty -i --restart='Never' --env="RABBITMQ_ROOT_PASSWORD=$RABBITMQ_ROOT_PASSWORD" --env="RABBITMQ_ADDRESS=$RABBITMQ_ADDRESS" --env="RABBITMQ_ERLANG_COOKIE=$ERLANG_COOKIE" --image rabbitmq:3.13.2-management --command -- bash

Then, run the following command:

    rabbitmqctl --node rabbit@$RABBITMQ_ADDRESS cluster_status

