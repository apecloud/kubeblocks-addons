apiVersion: apps.kubeblocks.io/v1
kind: Cluster
metadata:
  name: {{ include "kblib.clusterName" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{ include "kblib.clusterLabels" . | nindent 4 }}
  {{/*
  annotations:
  */}}
{{/*    {{- include "kafka-cluster.brokerAddrFeatureGate" . | nindent 4 }}*/}}
spec:
  clusterDef: kafka # ref clusterdefinition.name
  terminationPolicy: {{ .Values.extra.terminationPolicy }}
  topology: {{ include "kafka.topology" . }}
  componentSpecs:
    {{- if eq "combined" .Values.mode }}
    - name: kafka-combine
      tls: {{ .Values.tlsEnable }}
      {{- if .Values.tlsEnable }}
      issuer:
        name: KubeBlocks
      {{- end }}
      replicas: {{ .Values.replicas }}
      serviceAccountName: {{ include "kblib.serviceAccountName" . }}
      services:
        - name: advertised-listener
        {{- if .Values.nodePortEnabled }}
          serviceType: NodePort
        {{- else }}
          serviceType: ClusterIP
        {{- end }}
          podService: true
      {{- include "kblib.componentResources" . | indent 6 }}
      env:
        - name: KB_KAFKA_ENABLE_SASL
          value: "{{ .Values.saslEnable }}"
        - name: KB_KAFKA_BROKER_HEAP
          value: "{{ .Values.brokerHeap }}"
        - name: KB_KAFKA_CONTROLLER_HEAP
          value: "{{ .Values.controllerHeap }}"
        - name: KB_BROKER_DIRECT_POD_ACCESS
          {{- if .Values.nodePortEnabled }}
          value: "false"
          {{- else }}
          value: "true"
          {{- end }}
      {{- if .Values.storageEnable }}
      volumeClaimTemplates:
        - name: data
          spec:
            storageClassName: {{ .Values.storageClassName }}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print .Values.storage "Gi" }}
        - name: metadata
          spec:
            storageClassName: {{ .Values.metaStorageClassName }}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print .Values.metaStorage "Gi" }}
      {{- end }}
    {{- else }}
    - name: kafka-broker
      tls: {{ .Values.tlsEnable }}
      {{- if .Values.tlsEnable }}
      issuer:
        name: KubeBlocks
      {{- end }}
      replicas: {{ .Values.brokerReplicas }}
      serviceAccountName: {{ include "kblib.serviceAccountName" . }}
      services:
        - name: advertised-listener
        {{- if .Values.nodePortEnabled }}
          serviceType: NodePort
        {{- else }}
          serviceType: ClusterIP
        {{- end }}
          podService: true
      {{- include "kblib.componentResources" . | indent 6 }}
      env:
        - name: KB_KAFKA_ENABLE_SASL
          value: "{{ .Values.saslEnable }}"
        - name: KB_KAFKA_BROKER_HEAP
          value: "{{ .Values.brokerHeap }}"
        - name: KB_KAFKA_CONTROLLER_HEAP
          value: "{{ .Values.controllerHeap }}"
        - name: KB_BROKER_DIRECT_POD_ACCESS
          {{- if .Values.nodePortEnabled }}
          value: "false"
          {{- else }}
          value: "true"
          {{- end }}
      {{- if .Values.storageEnable }}
      volumeClaimTemplates:
        - name: data
          spec:
            storageClassName: {{ .Values.storageClassName }}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print .Values.storage "Gi" }}
        - name: metadata
          spec:
            storageClassName: {{ .Values.metaStorageClassName }}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print .Values.metaStorage "Gi" }}
      {{- end }}
    - name: kafka-controller
      tls: {{ .Values.tlsEnable }}
      {{- if .Values.tlsEnable }}
      issuer:
        name: KubeBlocks
      {{- end }}
      replicas: {{ .Values.controllerReplicas }}
      serviceAccountName: {{ include "kblib.serviceAccountName" . }}
      {{- include "kblib.componentResources" . | indent 6 }}
      {{- if .Values.storageEnable }}
      volumeClaimTemplates:
        - name: metadata
          spec:
            storageClassName: {{ .Values.metaStorageClassName }}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ print .Values.metaStorage "Gi" }}
      {{- end }}
    {{- end }}
    {{- if .Values.monitorEnable }}
    - name: kafka-exporter
      replicas: {{ .Values.monitor.replicas }}
      {{- include "kafka-exporter.resources" . | nindent 6 }}
    {{- end }}
